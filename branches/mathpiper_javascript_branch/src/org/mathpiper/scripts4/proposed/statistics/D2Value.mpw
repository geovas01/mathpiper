%mathpiper,def="D2Value"

D2Value(k,n) :=
[
    Check(k >=? 0 And k <=? 15, "Argument", "The first argument k must be 0 <=? k <=? 15.");
    
    Check(n >=? 2 And n <=? 15, "Argument", "The second argument n must be 2 <=? n <=? 15.");
    
    n--;
    
    if(k =? 0)
    [
        {1.128,1.693,2.059,2.326,2.534,2.704,2.847,2.970,3.078,3.173,3.259,3.336,3.407,3.472}[n];
    ]
    else
    [
        {
            {1.414, 1.912, 2.239, 2.481, 2.673, 2.830, 2.963, 3.078, 3.179, 3.269, 3.350, 3.424, 3.491, 3.553},
            {1.279, 1.805, 2.151, 2.405, 2.604, 2.768, 2.906, 3.025, 3.129, 3.221, 3.305, 3.380, 3.449, 3.513},
            {1.231, 1.769, 2.120, 2.379, 2.581, 2.747, 2.886, 3.006, 3.112, 3.205, 3.289, 3.366, 3.435, 3.499},
            {1.206, 1.750, 2.105, 2.366, 2.570, 2.736, 2.877, 2.997, 3.103, 3.197, 3.282, 3.358, 3.428, 3.492},
            {1.191, 1.739, 2.096, 2.358, 2.563, 2.730, 2.871, 2.992, 3.098, 3.192, 3.277, 3.354, 3.424, 3.488},
            {1.181, 1.731, 2.090, 2.353, 2.558, 2.726, 2.867, 2.988, 3.095, 3.189, 3.274, 3.351, 3.421, 3.486},
            {1.173, 1.726, 2.085, 2.349, 2.555, 2.723, 2.864, 2.986, 3.092, 3.187, 3.272, 3.349, 3.419, 3.484},
            {1.168, 1.721, 2.082, 2.346, 2.552, 2.720, 2.862, 2.984, 3.090, 3.185, 3.270, 3.347, 3.417, 3.482},
            {1.164, 1.718, 2.080, 2.344, 2.550, 2.719, 2.860, 2.982, 3.089, 3.184, 3.269, 3.346, 3.416, 3.481},
            {1.160, 1.716, 2.077, 2.342, 2.549, 2.717, 2.859, 2.981, 3.088, 3.183, 3.268, 3.345, 3.415, 3.480},
            {1.157, 1.714, 2.076, 2.340, 2.547, 2.716, 2.858, 2.980, 3.087, 3.182, 3.267, 3.344, 3.415, 3.479},
            {1.155, 1.712, 2.074, 2.344, 2.546, 2.715, 2.857, 2.979, 3.086, 3.181, 3.266, 3.343, 3.414, 3.479},
            {1.153, 1.710, 2.073, 2.338, 2.545, 2.714, 2.856, 2.978, 3.085, 3.180, 3.266, 3.343, 3.413, 3.478},
            {1.151, 1.709, 2.072, 2.337, 2.545, 2.714, 2.856, 2.978, 3.085, 3.180, 3.265, 3.342, 3.413, 3.478},
            {1.150, 1.708, 2.071, 2.337, 2.544, 2.713, 2.855, 2.977, 3.084, 3.179, 3.265, 3.342, 3.412, 3.477}
        }[k][n];
    ];
    
];



%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output






%mathpiper_docs,name="D2Value",categories="User Functions;Statistics & Probability"
*CMD D2Value --- converts average range $\bar{R}$ into estimated standard deviation $\hat{\sigma}_x$
*STD
*CALL
        D2Value(k,n)

*PARMS

{k} -- the number of times each part was measured (sample size, 1 - 15) or 0 to obtain a d2 control limits constant
{n} -- the number of parts measured (number of samples, 2 - 15)

*DESC
Converts average range $\bar{R}$ into estimated standard deviation $\hat{\sigma}_x$.  If k is set to 0,
the d2 control limits constant is returned.

*E.G.
In> D2Value(4,7);
Result: 2.736

In> D2Value(0,2)
Result: 1.128
%/mathpiper_docs
