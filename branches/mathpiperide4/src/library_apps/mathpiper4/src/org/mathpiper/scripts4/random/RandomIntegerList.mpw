%mathpiper,def="RandomIntegerList"

RandomIntegerList(count_, coefmin_, coefmax_) <--
  BuildList(FloorN(coefmin+Random()*(coefmax+1-coefmin)),i,1,count,1);

%/mathpiper




%mathpiper_docs,name="RandomIntegerList",categories="Mathematics Functions;Numbers (Random)"
*CMD RandomIntegerList --- generate a vector of random integers

*STD

*CALL
        RandomIntegerList(nr, from, to)

*PARMS

{nr} -- number of integers to generate

{from} -- lower bound

{to} -- upper bound

*DESC

This function generates a list with "nr" random integers. All
entries lie between "from" and "to", including the boundaries, and
are uniformly distributed in this interval.

*E.G.

In> RandomIntegerList(4,-3,3)
Result: [0,3,2,-2];

*SEE Random, RandomPoly, RandomInteger, RandomIntegerMatrix
%/mathpiper_docs