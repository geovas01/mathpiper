%mathpiper,def="BuildMatrix"

Function("BuildMatrix",[func,m,n])
{
  Local(i,j,result);
  result:=ZeroMatrix(m,n);

  For(i:=1,i<=?m,i++)
    For(j:=1,j<=?n,j++)
          result[i][j]:=ApplyFast(func,[i,j]);

  result;
};
HoldArgument("BuildMatrix",func);
UnFence("BuildMatrix",3);

%/mathpiper





%mathpiper_docs,name="BuildMatrix",categories="User Functions;Linear Algebra"
*CMD BuildMatrix --- generate a matrix with a function
*CALL
        BuildMatrix(function,m,n)

*PARMS
{function} -- a pure function
{m} -- row index
{n} -- column index

*DESC
Generate a matrix with a pure function.

*E.G.
In> BuildMatrix(Lambda([m,n],m*n),3,3)
Result: [[1,2,3],[2,4,6],[3,6,9]]
%/mathpiper_docs

    %output,preserve="false"
      
.   %/output

