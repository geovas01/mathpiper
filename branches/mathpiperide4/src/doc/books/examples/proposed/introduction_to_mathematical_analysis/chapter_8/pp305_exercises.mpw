%group,description="exercise 1 and 2"



%mathpiper
correction(a,b) :=
[
    //Local(key,table);
    key := N(Round((b/a)*10)/10);
    key := String(key);
    table := {{"0.0",27.3},{"0.1",17.6},{"0.2",11.5},{"0.3",7.4},{"0.4",4.6},{"0.5",2.8},{"0.6",1.6},{"0.7",.8},{"0.8",.3},{"0.9",.1}};
    
    table[key];

];

a := 20;
b := 6;

A := N(Pi * a * b);
Echo("Area: ",A);

P := N(Pi*(a+b) + correction(a,b));
Echo("Perimeter: ",P);

NewLine();


//2a)
a := 10;
b := 7;

A := N(Pi * a * b);
Echo("Area: ",A);

P := N(Pi*(a+b) + correction(a,b));
Echo("Perimeter: ",P);

NewLine();


//2b)
a := 10;
b := 2;

A := N(Pi * a * b);
Echo("Area: ",A);

P := N(Pi*(a+b) + correction(a,b));
Echo("Perimeter: ",P);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Area: 376.9911184 
      Perimeter: 89.08140899 
      
      Area: 219.9114858 
      Perimeter: 54.20707511 
      
      Area: 62.83185308 
      Perimeter: 49.19911184
.   %/output

%/group




%group,description="exercises 3 and 4"


%mathpiper

//3)
height := 60;
a := 25/height * y;
b := 4/5 * a;

area := Pi*a*b;

volume := Integrate(y,0,height)area;
N(volume);


//4)
height := 20;
a := 6/height * y;
b := 6/12 * a;

area := Pi*a*b;

volume := Integrate(y,0,height)area;
N(volume);

%/mathpiper

    %output,preserve="false"
      Result: 376.9911185
.   %/output


%/group




%group,description="exercises 5 and 6"


%mathpiper


a := 15;
b := 3/5*a;
area := Pi*a*b;
perimeter := N(Pi*(a+b) + correction(a,b));
Echo("5)",,,2*a,,,2*b,,,(area),,,perimeter);

a := 20;
b := 4/5*a;
area := Pi*a*b;
perimeter := N(Pi*(a+b) + correction(a,b));
Echo("6)",,,2*a,,,2*b,,,(area),,,perimeter);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      5), 30 , 18 , 135*Pi , 76.99822369 
      6), 40 , 32 , 320*Pi , 113.3973355
.   %/output


%/group




%group,description="exercise 7 and 8"


%mathpiper

//Exercise 7.
a := 10;
b := 8;
c := Sqrt(a^2 - b^2);

pinDistance := 2*c;
Echo("Pin Distance: ", pinDistance);

stringLength := 2*a + pinDistance;
Echo("String Length: ", stringLength);

area := Pi*a*b;
Echo("Area: ",area);

NewLine();


//Exercise 8a.
a := 12.5;
b := 7.5;
c := Sqrt(a^2 - b^2);
N([
pinDistance := 2*c;
Echo("Pin Distance: ", pinDistance);

stringLength := 2*a + pinDistance;
Echo("String Length: ", stringLength);

area := Pi*a*b;
Echo("Area: ",area);
]);

NewLine();



//Exercise 8b.
a := 13;
b := 5;
c := Sqrt(a^2 - b^2);

pinDistance := 2*c;
Echo("Pin Distance: ", pinDistance);

stringLength := 2*a + pinDistance;
Echo("String Length: ", stringLength);

area := Pi*a*b;
Echo("Area: ",area);

NewLine();
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Pin Distance: 12 
      String Length: 32 
      Area: 80*Pi 
      
      Pin Distance: 20.0000 
      String Length: 45.0000 
      Area: 294.5243113 
      
      Pin Distance: 24 
      String Length: 50 
      Area: 65*Pi
.   %/output


%/group



%group,description="exercises 9 and 10"


%mathpiper

//9.
a := 133/2;
b := 101/2;
N([
area := Pi*a*b;
perimeter := Pi*(a + b) + correction(a,b);
]);
Echo("Area: ",area,"   Perimeter: ",perimeter);


//10a.
a := 94/2;
b := 78/2;
N([
area := Pi*a*b;
perimeter := Pi*(a + b) + correction(a,b);
]);
Echo("Area: ",area,"   Perimeter: ",perimeter);



//10b.
a := 43/2;
b := 27/2;
N([
area := Pi*a*b;
perimeter := Pi*(a + b) + correction(a,b);
]);
Echo("Area: ",area,"   Perimeter: ",perimeter);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Area: 10550.25353    Perimeter: 367.8663405 
      Area: 5758.539333    Perimeter: 270.4769682 
      Area: 911.8472675    Perimeter: 111.5557429
.   %/output

%/group



%group,description="exercise 11"


%mathpiper

a := 120/2;
b := 40;

area := ExpandBrackets
((Pi*a*b)/2);


/* b) One idea is to integrate the area under the parabolic curve. */

%/mathpiper

    %output,preserve="false"
      Result: 1200*Pi
.   %/output


%/group




%group,description="exercise 12"
The questions in this exercise are explained in section IV.
%/group




%group,description="exercise 13"


%mathpiper
Clear(a,b);

a := 1/2*d;
b := N(a*Cos(55*Pi/180));

Echo(Simplify(2*a),Simplify(2*b));
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      d (1.147152873*d)/2
.   %/output


%/group




%group,description="exercise 14"

a) The semicircle part of the moon is shaped by its circumference.  For the semi-ellpese, imagine that the moon 
was a circle instead of a sphere. The semi-ellipse is created by viewing this circle at an oblique angle.

b) 


%mathpiper

a := 2163;
b := N(4/5*a);

semiElipseArea := (Pi*a*b)/2;

semiCircleArea := (Pi*a^2)/2;

lightArea := N(semiCircleArea - semiElipseArea);


%/mathpiper

    %output,preserve="false"
      Result: 1469815.80
.   %/output


%/group




%group,description="exercise 15"

%geogebra
o:3
p:sqrt(40^2-o^2);
A:(o,0)
B:(0,p)
s:Segment[A,B]
C:Midpoint[s]
s2:Segment[B,C]

//Approximate model of the problem.
D:Midpoint[s2]

%/geogebra

    %output,preserve="false"
      GeoGebra updated.
.   %/output


%mathpiper

Clear(x,y,a,b);

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");

P1:=Point(x,0);
P2:=Point(0,Sqrt(40^2-x^2));

x1 := 25/40*(P1[1]+P2[1]);
y1 := (1 - 25/40)*(P1[2]+P2[2]);

//midpoint:=Midpoint(P1,P2);
Echo(x1,y1);

ForEach(x,0 .. 40)
[
    Echo("(",N(y1),,, N(x1),")" );

];



%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      (5*x)/8 (3*Sqrt(1600-x^2))/8 
      (15 , 0 )
      (14.99531178 , 0.625 )
      (14.98123826 , 1.25 )
      (14.95775301 , 1.875 )
      (14.92481155 , 2.5 )
      (14.88235113 , 3.125 )
      (14.83028995 , 3.75 )
      (14.7685265 , 4.375 )
      (14.69693846 , 5 )
      (14.61538146 , 5.625 )
      (14.52368755 , 6.25 )
      (14.4216634 , 6.875 )
      (14.30908803 , 7.5 )
      (14.18571025 , 8.125 )
      (14.0512455 , 8.75 )
      (13.90537216 , 9.375 )
      (13.74772709 , 10 )
      (13.57790025 , 10.625 )
      (13.39542833 , 11.25 )
      (13.19978694 , 11.875 )
      (12.99038106 , 12.5 )
      (12.7665334 , 13.125 )
      (12.52746981 , 13.75 )
      (12.27230113 , 14.375 )
      (12 , 15 )
      (11.70937125 , 15.625 )
      (11.39901312 , 16.25 )
      (11.06726592 , 16.875 )
      (10.71214264 , 17.5 )
      (10.33123299 , 18.125 )
      (9.921567416 , 18.75 )
      (9.479418495 , 19.375 )
      (9 , 20 )
      (8.476990916 , 20.625 )
      (7.901740316 , 21.25 )
      (7.261843774 , 21.875 )
      (6.538348414 , 22.5 )
      (5.699506556 , 23.125 )
      (4.68374850 , 23.75 )
      (3.333072906 , 24.375 )
      (0 , 25 )
.   %/output


%/group







%group,description="exercise 16 (skipping)"
%/group





%group,description="exercise 17"



%mathpiper

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");

P := Point(x,y);

equ1 := Distance(P,Point(-25,0)) - Distance(P,Point(25,0)) == 40;


Echo(equ1);


//solve can solve for y in this equation so I solved it in MathCad: {3 sqrt(x² - 400) / 4, -3 sqrt(x² - 400) / 4}
//Solve(equ1,y);
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Sqrt((x+25)^2+y^2)-Sqrt((25-x)^2+y^2)==40
.   %/output


%/group



%group,description="exercise 18"
//Skipping because this is the same as exercise 15 on page 301.

%/group


