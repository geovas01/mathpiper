%mathpiper,def="Else"

RulebaseHoldArguments("Else",[ifthen,otherwise]);

0 # (If(_predicate) _body Else _otherwise)_(Eval(predicate) =? True) <-- Eval(body);

0 # (If(_predicate) _body Else _otherwise)_(Eval(predicate) =? False) <-- Eval(otherwise);

1 # (If(_predicate) _body Else _otherwise) <--
    ListToFunction([ToAtom("Else"),
            ListToFunction([ToAtom("If"), (Eval(predicate)), body]),
            otherwise]);

HoldArgument("Else",ifthen);

HoldArgument("Else",otherwise);

UnFence("Else",2);

%/mathpiper




%mathpiper_docs,name="Else",categories="User Functions;Control Flow"
*CMD Else --- branch point
*STD
*CALL
    If(predicate) body Else otherwise)

*PARMS

{predicate} -- predicate to test

{body} -- expression to evaluate if the predicate is {True}.

{otherwise} -- expression to evaluate if the predicate if {False}.

*DESC

(This description under in development.)


*SEE If, Decide
%/mathpiper_docs