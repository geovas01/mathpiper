%mathpiper,def="Echo;EchoInternal"

10 # EchoInternal(string_String?) <--
{
  WriteString(string);
};

20 # EchoInternal(item_) <--
{
  Write(item);Space();
};







RulebaseListedHoldArguments("Echo",[_firstParameter, _parametersList]);

//Handle no option call.
5 # Echo(firstParameter_) <-- Echo(firstParameter, []);


//Main routine.  It will automatically accept 1 or more option calls because the
//options come in a list.
10 # Echo(firstParameter_, parametersList_List?) <--
{
    EchoInternal(firstParameter);
    ForEach(item,parametersList) EchoInternal(item);
    NewLine();
    
};


//Handle a single option call because the option does not come in a list for some reason.
20 # Echo(firstParameter_, secondParameter_) <-- Echo(firstParameter, [secondParameter]);


//No argument Echo simply prints a newline.
Echo() := NewLine();



%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output



%mathpiper_docs,name="Echo",categories="Programming Functions;Input/Output"
*CMD Echo --- high-level printing routine
*STD
*CALL
        Echo(item,item,item,...)

*PARMS

{item} -- the items to be printed


*DESC

If passed a single item, {Echo} will evaluate it and print it to the
current output, followed by a newline. If {item} is a string, it is
printed without quotation marks.

If {Echo} is called with a variable number of arguments, they will all
be printed and finally a newline will be printed.

If no arguments are passed to {Echo}, it will simply output a newline.

{Echo} always returns {True}.

*E.G.
In> Echo(5+3);
Result: True
Side Effects:
8 


In> Echo("The square of two is ", 2*2);
Result: True
Side Effects:
The square of two is 4 


In> Echo([_a,NM(Pi),[1,2,"PKHG"]]);
Result: True
Side Effects:
[_a,3.141592654,[1,2,"PKHG"]] 

*SEE UnparseMath2D, Write, WriteString, RulebaseListedHoldArguments
%/mathpiper_docs

    %output,preserve="false"
      
.   %/output

