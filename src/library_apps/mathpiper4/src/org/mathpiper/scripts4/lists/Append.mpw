%mathpiper,def="Append"

Function("Append",[_list,_element])
{
  Check(List?(list), "Argument", "The first argument must be a list.");

  Insert(list,Length(list)+1,element);
};


%/mathpiper



%mathpiper_docs,name="Append",categories="Programming Functions;Lists (Operations)"
*CMD Append --- append an entry at the end of a list
*STD
*CALL
        Append(list, expr)

*PARMS

{list} -- list to append "expr" to

{expr} -- expression to append to the list

*DESC

The expression "expr" is appended at the end of "list" and the
resulting list is returned.

Note that due to the underlying data structure, the time it takes to
append an entry at the end of a list grows linearly with the length of
the list, while the time for prepending an entry at the beginning is
constant.

*E.G.

In> ll := [_a,Pi,3,[1,2,3]]
Result: [_a,Pi,3,[1,2,3]]

In> Append(ll,1);
Result: [_a,Pi,3,[1,2,3],1]

In> ll
Result: [_a,Pi,3,[1,2,3]]

Therefore assignment needed for changing ll!

In> ll := Append(ll,"PKHG")
Result: [_a,Pi,3,[1,2,3],"PKHG"]

In> ll
Result: [_a,Pi,3,[1,2,3],"PKHG"]

*SEE Concat, ~, DestructiveAppend
%/mathpiper_docs

    %output,preserve="false"
      
.   %/output

