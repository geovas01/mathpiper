%mathpiper,def="UniDivide"

/* division algo: (for zero-base univariates:) */
Function("UniDivide",{u,v})
⊕
  Local(m,n,q,r,k,j);
  m := Length(u)-1;
  n := Length(v)-1;
  While (m>?0 And? Zero?(u[m+1])) m--;
  While (n>?0 And? Zero?(v[n+1])) n--;
  q := ZeroVector(m-n+1);
  r := FlatCopy(u);  /*  (m should be >= n) */
  For(k:=m-n,k>=?0,k--)
  ⊕
    q[k+1] := r[n+k+1]/v[n+1];
    For (j:=n+k-1,j>=?k,j--)
    ⊕
      r[j+1] := r[j+1] - q[k+1]*v[j-k+1];
    ⊖;
  ⊖;
  Local(end);
  end:=Length(r);
  While (end>?n)
  ⊕
    DestructiveDelete(r,end);
    end:=end-1;
  ⊖;

  {q,r};
⊖;

%/mathpiper