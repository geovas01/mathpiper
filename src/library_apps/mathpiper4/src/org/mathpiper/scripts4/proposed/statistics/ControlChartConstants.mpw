%mathpiper,def="ControlChartConstants"

ControlChartConstants(n) :=
⊕   
    Check(n >=? 2 And? n <=? 15, "Argument", "The argument n must be 2 <=? n <=? 20.");
    
    Local(result, table);
    
    result := [];
    
    n--;
    
    table := [
        [1.880, 1.128, 0.000, 3.267],
        [1.023, 1.693, 0.000, 2.574],
        [0.729, 2.059, 0.000, 2.282],
        [0.577, 2.326, 0.000, 2.114],
        [0.483, 2.534, 0.000, 2.004],
        [0.419, 2.704, 0.076, 1.924],
        [0.373, 2.847, 0.136, 1.864],
        [0.337, 2.970, 0.184, 1.816],
        [0.308, 3.078, 0.223, 1.777],
        [0.285, 3.173, 0.256, 1.744],
        [0.266, 3.258, 0.283, 1.717],
        [0.249, 3.336, 0.307, 1.693],
        [0.235, 3.407, 0.328, 1.672],
        [0.223, 3.472, 0.347, 1.653],
        [0.212, 3.532, 0.363, 1.637],
        [0.203, 3.588, 0.378, 1.622],
        [0.194, 3.640, 0.391, 1.608],
        [0.187, 3.689, 0.403, 1.597],
        [0.180, 3.735, 0.415, 1.585],
    ];

    result["D4"] := table[n][4];
    
    result["D3"] := table[n][3];
    
    result["d2"] := table[n][2];
        
    result["A2"] := table[n][1];
    
    result;
⊖;


%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output






%mathpiper_docs,name="ControlChartConstants",categories="User Functions;Statistics & Probability"
*CMD ControlChartConstants --- returns the control chart constants A2 d2 D3 D4
*STD
*CALL
        ControlChartConstants(n)

*PARMS

[n] -- subgroup size (2 - 20)

*DESC
Returns the control chart constants $A_2, d_2, D_3, D_4$.

*E.G.
In> ControlChartConstants(2)
Result: [["A2",1.880],["d2",1.128],["D3",0.000],["D4",3.267]]

In> ControlChartConstants(2)["A2"]
Result: 1.880

%/mathpiper_docs

    %output,preserve="false"
      
.   %/output


