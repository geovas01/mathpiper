%mathpiper,def="Composite?"

5  # Composite?(1)                        <-- False;
10 # Composite?(n_PositiveInteger?)         <-- (Not? Prime?(n));

%/mathpiper



%mathpiper_docs,name="Composite?",categories="User Functions;Number Theory;Predicates"
*CMD Composite? --- test for a composite number
*STD
*CALL
        Composite?(n)

*PARMS

[n] -- positive integer

*DESC

This function is the logical negation of [Prime?], except for the number 1, which is
neither prime nor composite.

*E.G.

In> Composite?(1)
Result: False;
In> Composite?(7)
Result: False;
In> Composite?(8)
Result: True;
In> Select(1 .. 20, Composite?)
Result: [4,6,8,9,10,12,14,15,16,18,20];

*SEE Prime?
%/mathpiper_docs





%mathpiper,name="Composite?",subtype="automatic_test"

Verify( Composite?(100), True );
Verify( Composite?(1), False );
Verify( Composite?(37), False );

%/mathpiper