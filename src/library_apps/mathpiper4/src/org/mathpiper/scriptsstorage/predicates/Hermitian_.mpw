%mathpiper,def="Hermitian?"

Hermitian?(A_Matrix?) <-- (Conjugate(Transpose(A))=?A);

%/mathpiper



%mathpiper_docs,name="Hermitian?",categories="Programming Functions;Predicates"
*CMD Hermitian? --- test for a Hermitian matrix
*STD
*CALL
        Hermitian?(A)

*PARMS

{A} -- a square matrix

*DESC

Hermitian?(A) returns {True} if {A} is Hermitian and {False}
otherwise. $A$ is a Hermitian matrix iff Conjugate( Transpose $A$ )=$A$.
If $A$ is a real matrix, it must be symmetric to be Hermitian.

*E.G.

In> Hermitian?([[0,I],[-I,0]])
Result: True;

In> Hermitian?([[0,I],[2,0]])
Result: False;

*SEE Unitary?
%/mathpiper_docs





%mathpiper,name="Hermitian?",subtype="automatic_test"

Verify(Hermitian?([[0,I],[-I,0]]),True);
Verify(Hermitian?([[0,I],[-I,1]]),True);
Verify(Hermitian?([[0,I],[-2*I,0]]),False);

%/mathpiper