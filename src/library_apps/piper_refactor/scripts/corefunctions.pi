coreFunctions := {};

coreFunctions["Hold"] := {"Quote",Macro,Fixed,1};
coreFunctions["Eval"] := {"Eval",Function,Fixed,1};
coreFunctions["Write"] := {"Write",Function,Variable,1};
coreFunctions["WriteString"] := {"WriteString",Function,Fixed,1};
coreFunctions["FullForm"] := {"FullForm",Function,Fixed,1};
coreFunctions["DefaultDirectory"] := {"DefaultDirectory",Function,Fixed,1};
coreFunctions["FromFile"] := {"FromFile",Macro,Fixed,2};
coreFunctions["FromString"] := {"FromString",Macro,Fixed,2};
coreFunctions["Read"] := {"Read",Function,Fixed,0};
coreFunctions["ReadToken"] := {"ReadToken",Function,Fixed,0};
coreFunctions["ToFile"] := {"ToFile",Macro,Fixed,2};
coreFunctions["ToString"] := {"ToString",Macro,Fixed,1};
coreFunctions["ToStdout"] := {"ToStdout",Macro,Fixed,1};
coreFunctions["Load"] := {"Load",Function,Fixed,1};
coreFunctions["Set"] := {"SetVar",Macro,Fixed,2};
coreFunctions["MacroSet"] := {"MacroSetVar",Macro,Fixed,2};
coreFunctions["Clear"] := {"ClearVar",Macro,Variable,1};
coreFunctions["MacroClear"] := {"ClearVar",Function,Variable,1};
coreFunctions["Local"] := {"NewLocal",Macro,Variable,1};
coreFunctions["MacroLocal"] := {"NewLocal",Function,Variable,1};
coreFunctions["Head"] := {"Head",Function,Fixed,1};
coreFunctions["MathNth"] := {"Nth",Function,Fixed,2};
coreFunctions["Tail"] := {"Tail",Function,Fixed,1};
coreFunctions["DestructiveReverse"] := {"DestructiveReverse",Function,Fixed,1};
coreFunctions["Length"] := {"Length",Function,Fixed,1};
coreFunctions["List"] := {"List",Macro,Variable,1};
coreFunctions["UnList"] := {"UnList",Function,Fixed,1};
coreFunctions["Listify"] := {"Listify",Function,Fixed,1};
coreFunctions["Concat"] := {"Concatenate",Function,Variable,1};
coreFunctions["ConcatStrings"] := {"ConcatenateStrings",Function,Variable,1};
coreFunctions["Delete"] := {"Delete",Function,Fixed,2};
coreFunctions["DestructiveDelete"] := {"DestructiveDelete",Function,Fixed,2};
coreFunctions["Insert"] := {"Insert",Function,Fixed,3};
coreFunctions["DestructiveInsert"] := {"DestructiveInsert",Function,Fixed,3};
coreFunctions["Replace"] := {"Replace",Function,Fixed,3};
coreFunctions["DestructiveReplace"] := {"DestructiveReplace",Function,Fixed,3};
coreFunctions["Atom"] := {"Atomize",Function,Fixed,1};
coreFunctions["String"] := {"Stringify",Function,Fixed,1};
coreFunctions["CharString"] := {"CharString",Function,Fixed,1};
coreFunctions["FlatCopy"] := {"FlatCopy",Function,Fixed,1};
coreFunctions["Prog"] := {"ProgBody",Macro,Variable,1};
coreFunctions["While"] := {"While",Macro,Fixed,2};
coreFunctions["If"] := {"If",Macro,Variable,2};
coreFunctions["Check"] := {"Check",Macro,Fixed,2};
coreFunctions["TrapError"] := {"TrapError",Macro,Fixed,2};
coreFunctions["GetCoreError"] := {"GetCoreError",Function,Fixed,0};
coreFunctions["Prefix"] := {"PreFix",Function,Fixed,2};
coreFunctions["Infix"] := {"InFix",Function,Fixed,2};
coreFunctions["Postfix"] := {"PostFix",Function,Fixed,2};
coreFunctions["Bodied"] := {"Bodied",Function,Fixed,2};
coreFunctions["RuleBase"] := {"RuleBase",Macro,Fixed,2};
coreFunctions["MacroRuleBase"] := {"MacroRuleBase",Function,Fixed,2};
coreFunctions["RuleBaseListed"] := {"RuleBaseListed",Macro,Fixed,2};
coreFunctions["MacroRuleBaseListed"] := {"MacroRuleBaseListed",Function,Fixed,2};
coreFunctions["DefMacroRuleBase"] := {"DefMacroRuleBase",Macro,Fixed,2};
coreFunctions["DefMacroRuleBaseListed"] := {"DefMacroRuleBaseListed",Macro,Fixed,2};
coreFunctions["HoldArg"] := {"HoldArg",Macro,Fixed,2};
coreFunctions["Rule"] := {"NewRule",Macro,Fixed,5};
coreFunctions["MacroRule"] := {"MacroNewRule",Function,Fixed,5};
coreFunctions["UnFence"] := {"UnFence",Function,Fixed,2};
coreFunctions["Retract"] := {"Retract",Function,Fixed,2};
coreFunctions["MathNot"] := {"Not",Function,Fixed,1};
coreFunctions["MathAnd"] := {"LazyAnd",Macro,Variable,1};
coreFunctions["MathOr"] := {"LazyOr",Macro,Variable,1};
coreFunctions["Equals"] := {"Equals",Function,Fixed,2};
coreFunctions["LessThan"] := {"LessThan",Function,Fixed,2};
coreFunctions["GreaterThan"] := {"GreaterThan",Function,Fixed,2};
coreFunctions["IsFunction"] := {"IsFunction",Function,Fixed,1};
coreFunctions["IsAtom"] := {"IsAtom",Function,Fixed,1};
coreFunctions["IsNumber"] := {"IsNumber",Function,Fixed,1};
coreFunctions["IsInteger"] := {"IsInteger",Function,Fixed,1};
coreFunctions["IsList"] := {"IsList",Function,Fixed,1};
coreFunctions["IsString"] := {"IsString",Function,Fixed,1};
coreFunctions["IsBound"] := {"IsBound",Macro,Fixed,1};
coreFunctions["MathMultiply"] := {"Multiply",Function,Fixed,2};
coreFunctions["MathAdd"] := {"Add",Function,Fixed,2};
coreFunctions["MathSubtract"] := {"Subtract",Function,Fixed,2};
coreFunctions["MathDivide"] := {"Divide",Function,Fixed,2};
coreFunctions["Builtin'Precision'Set"] := {"BuiltinPrecisionSet",Function,Fixed,1};
coreFunctions["MathGetExactBits"] := {"GetExactBits",Function,Fixed,1};
coreFunctions["MathSetExactBits"] := {"SetExactBits",Function,Fixed,2};
coreFunctions["MathBitCount"] := {"BitCount",Function,Fixed,1};
coreFunctions["MathSign"] := {"MathSign",Function,Fixed,1};
coreFunctions["MathIsSmall"] := {"MathIsSmall",Function,Fixed,1};
coreFunctions["MathNegate"] := {"MathNegate",Function,Fixed,1};
coreFunctions["MathFloor"] := {"Floor",Function,Fixed,1};
coreFunctions["MathCeil"] := {"Ceil",Function,Fixed,1};
coreFunctions["MathAbs"] := {"Abs",Function,Fixed,1};
coreFunctions["MathMod"] := {"Mod",Function,Fixed,2};
coreFunctions["MathDiv"] := {"Div",Function,Fixed,2};
coreFunctions["BitsToDigits"] := {"BitsToDigits",Function,Fixed,2};
coreFunctions["DigitsToBits"] := {"DigitsToBits",Function,Fixed,2};
coreFunctions["MathGcd"] := {"Gcd",Function,Fixed,2};
coreFunctions["SystemCall"] := {"SystemCall",Function,Fixed,1};
coreFunctions["FastArcSin"] := {"FastArcSin",Function,Fixed,1};
coreFunctions["FastLog"] := {"FastLog",Function,Fixed,1};
coreFunctions["FastPower"] := {"FastPower",Function,Fixed,2};
coreFunctions["ShiftLeft"] := {"ShiftLeft",Function,Fixed,2};
coreFunctions["ShiftRight"] := {"ShiftRight",Function,Fixed,2};
coreFunctions["FromBase"] := {"FromBase",Function,Fixed,2};
coreFunctions["ToBase"] := {"ToBase",Function,Fixed,2};
coreFunctions["MaxEvalDepth"] := {"MaxEvalDepth",Function,Fixed,1};
coreFunctions["DefLoad"] := {"DefLoad",Function,Fixed,1};
coreFunctions["Use"] := {"Use",Function,Fixed,1};
coreFunctions["RightAssociative"] := {"RightAssociative",Function,Fixed,1};
coreFunctions["LeftPrecedence"] := {"LeftPrecedence",Function,Fixed,2};
coreFunctions["RightPrecedence"] := {"RightPrecedence",Function,Fixed,2};
coreFunctions["IsBodied"] := {"IsBodied",Function,Fixed,1};
coreFunctions["IsInfix"] := {"IsInFix",Function,Fixed,1};
coreFunctions["IsPrefix"] := {"IsPreFix",Function,Fixed,1};
coreFunctions["IsPostfix"] := {"IsPostFix",Function,Fixed,1};
coreFunctions["OpPrecedence"] := {"GetPrecedence",Function,Fixed,1};
coreFunctions["OpLeftPrecedence"] := {"GetLeftPrecedence",Function,Fixed,1};
coreFunctions["OpRightPrecedence"] := {"GetRightPrecedence",Function,Fixed,1};
coreFunctions["Builtin'Precision'Get"] := {"BuiltinPrecisionGet",Function,Fixed,0};
coreFunctions["BitAnd"] := {"BitAnd",Function,Fixed,2};
coreFunctions["BitOr"] := {"BitOr",Function,Fixed,2};
coreFunctions["BitXor"] := {"BitXor",Function,Fixed,2};
coreFunctions["Secure"] := {"Secure",Macro,Fixed,1};
coreFunctions["FindFile"] := {"FindFile",Function,Fixed,1};
coreFunctions["FindFunction"] := {"FindFunction",Function,Fixed,1};
coreFunctions["IsGeneric"] := {"IsGeneric",Function,Fixed,1};
coreFunctions["GenericTypeName"] := {"GenericTypeName",Function,Fixed,1};
coreFunctions["Array'Create"] := {"GenArrayCreate",Function,Fixed,2};
coreFunctions["Array'Size"] := {"GenArraySize",Function,Fixed,1};
coreFunctions["Array'Get"] := {"GenArrayGet",Function,Fixed,2};
coreFunctions["Array'Set"] := {"GenArraySet",Function,Fixed,3};
coreFunctions["CustomEval"] := {"CustomEval",Macro,Fixed,4};
coreFunctions["CustomEval'Expression"] := {"CustomEvalExpression",Function,Fixed,0};
coreFunctions["CustomEval'Result"] := {"CustomEvalResult",Function,Fixed,0};
coreFunctions["CustomEval'Locals"] := {"CustomEvalLocals",Function,Fixed,0};
coreFunctions["CustomEval'Stop"] := {"CustomEvalStop",Function,Fixed,0};
coreFunctions["TraceRule"] := {"TraceRule",Macro,Fixed,2};
coreFunctions["TraceStack"] := {"TraceStack",Macro,Fixed,1};
coreFunctions["LispRead"] := {"ReadLisp",Function,Fixed,0};
coreFunctions["LispReadListed"] := {"ReadLispListed",Function,Fixed,0};
coreFunctions["Type"] := {"Type",Function,Fixed,1};
coreFunctions["StringMid'Get"] := {"StringMidGet",Function,Fixed,3};
coreFunctions["StringMid'Set"] := {"StringMidSet",Function,Fixed,3};
coreFunctions["Pattern'Create"] := {"GenPatternCreate",Function,Fixed,2};
coreFunctions["Pattern'Matches"] := {"GenPatternMatches",Function,Fixed,2};
coreFunctions["RuleBaseDefined"] := {"RuleBaseDefined",Function,Fixed,2};
coreFunctions["DefLoadFunction"] := {"DefLoadFunction",Function,Fixed,1};
coreFunctions["RuleBaseArgList"] := {"RuleBaseArgList",Function,Fixed,2};
coreFunctions["RulePattern"] := {"NewRulePattern",Macro,Fixed,5};
coreFunctions["MacroRulePattern"] := {"MacroNewRulePattern",Function,Fixed,5};
coreFunctions["Subst"] := {"Subst",Function,Fixed,3};
coreFunctions["LocalSymbols"] := {"LocalSymbols",Macro,Variable,1};
coreFunctions["FastIsPrime"] := {"FastIsPrime",Function,Fixed,1};
coreFunctions["MathFac"] := {"Fac",Function,Fixed,1};
coreFunctions["ApplyPure"] := {"ApplyPure",Function,Fixed,2};
coreFunctions["PrettyReader'Set"] := {"PrettyReaderSet",Function,Variable,1};
coreFunctions["PrettyReader'Get"] := {"PrettyReaderGet",Function,Fixed,0};
coreFunctions["PrettyPrinter'Set"] := {"PrettyPrinterSet",Function,Variable,1};
coreFunctions["PrettyPrinter'Get"] := {"PrettyPrinterGet",Function,Fixed,0};
coreFunctions["GarbageCollect"] := {"GarbageCollect",Function,Fixed,0};
coreFunctions["SetGlobalLazyVariable"] := {"SetGlobalLazyVariable",Macro,Fixed,2};
coreFunctions["PatchLoad"] := {"PatchLoad",Function,Fixed,1};
coreFunctions["PatchString"] := {"PatchString",Function,Fixed,1};
coreFunctions["ExtraInfo'Set"] := {"ExtraInfoSet",Function,Fixed,2};
coreFunctions["ExtraInfo'Get"] := {"ExtraInfoGet",Function,Fixed,1};
coreFunctions["DefaultTokenizer"] := {"DefaultTokenizer",Function,Fixed,0};
coreFunctions["CommonLispTokenizer"] := {"CommonLispTokenizer",Function,Fixed,0};
coreFunctions["XmlTokenizer"] := {"XmlTokenizer",Function,Fixed,0};
coreFunctions["XmlExplodeTag"] := {"ExplodeTag",Function,Fixed,1};
coreFunctions["Builtin'Assoc"] := {"BuiltinAssoc",Function,Fixed,2};
coreFunctions["CurrentFile"] := {"CurrentFile",Function,Fixed,0};
coreFunctions["CurrentLine"] := {"CurrentLine",Function,Fixed,0};
coreFunctions["`"] := {"BackQuote",Macro,Fixed,1};
coreFunctions["MathDebugInfo"] := {"DumpBigNumberDebugInfo",Function,Fixed,1};
coreFunctions["InDebugMode"] := {"InDebugMode",Function,Fixed,0};
coreFunctions["DebugFile"] := {"DebugFile",Function,Fixed,1};
coreFunctions["DebugLine"] := {"DebugLine",Function,Fixed,1};
coreFunctions["Version"] := {"Version",Function,Fixed,0};
coreFunctions["Exit"] := {"Exit",Function,Fixed,0};
coreFunctions["IsExitRequested"] := {"ExitRequested",Function,Fixed,0};
coreFunctions["HistorySize"] := {"HistorySize",Function,Fixed,1};
coreFunctions["StaSiz"] := {"StackSize",Function,Fixed,0};
coreFunctions["IsPromptShown"] := {"IsPromptShown",Function,Fixed,0};
coreFunctions["ReadCmdLineString"] := {"ReadCmdLineString",Function,Fixed,1};
coreFunctions["GetTime"] := {"Time",Macro,Fixed,1};
coreFunctions["FileSize"] := {"FileSize",Function,Fixed,1};
