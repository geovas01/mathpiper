
%mathpiper

Use("org/mathpiper/scripts/proposed.rep/statistics.mpi");
Use("org/mathpiper/scripts/proposed.rep/geogebra.mpi");

%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output






%mathpiper,title="two boys."

boysAndGirls := {};
ForEach(trial, 1 .. 100)
[
    child1 := Round(Random());
    child2 := Round(Random());
    
    boysAndGirls := Append( boysAndGirls, {child1, child2} );
];

boysOnly := Remove(boysAndGirls,{0,0});

Echo("Trials :", boysOnly);

oneBoy := Count(boysOnly, {1,0}) + Count(boysOnly, {0,1});

twoBoys := Count(boysOnly, {1,1});

Echo("One boy: ", oneBoy);

Echo("Two boys: ", twoBoys);

Echo("At least one boy: ", Length(boysOnly),N( (oneBoy + twoBoys)/Length(boysAndGirls)));


N(twoBoys/ Length(boysOnly));


%/mathpiper








%mathpiper,title="Gold example on pp.82 chapter 6."

ships := {{gold, gold}, {gold, silver}, {silver, silver}};

score := {};


Repeat(1000)
[
    ship := RandomPick(ships);
    
    ship := Shuffle(ship);
    
    If(Count(ship,gold) = 2, score := Append(score,success) );
    
     If(Count(ship,silver) = 1,
            If(ship[1] = gold, score := Append(score,failure)) 
     );
    
    

];
initialGoldCount := Length(score);
goldGoldCount := Count(score,success);

result := N(goldGoldCount/initialGoldCount);

Echo(initialGoldCount,,,goldGoldCount,,,result);

%/mathpiper










%mathpiper,title="Three door problem pp.83 chapter 6."

firstPickScore := {};
secondPickScore := {};


Repeat(1000)
[
    doors := Shuffle( {empty, prize, empty} );
    
    firstPick := doors[1];
    
    If(doors[2] = empty, secondPick := doors[3], secondPick := doors[2]);
    
    firstPickScore := Append(firstPickScore, firstPick);
    secondPickScore := Append(secondPickScore, secondPick);
];

Echo("First Pick: ", Count(firstPickScore,prize));
Echo("Second Pick: ", Count(secondPickScore,prize));


%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      First Pick: 247 
      Second Pick: 753
.   %/output









%mathpiper,title="Two of a kind problem pp.85 chapter 6."

pairsCount := 0;

deck := Concat(1 .. 13, 1 .. 13, 1 .. 13, 1 .. 13);

trials := 100;

Repeat(trials)
[
    deck := Shuffle(deck);
    
    hand := Take(deck,5);
    
    //Echo(hand);
    
    handPairCount := 0;
    ForEach(card,1 .. 13)
    [
        If(Count(hand,card) = 2, handPairCount := handPairCount + 1);
    ];
    
    If(handPairCount = 1, pairsCount := pairsCount + 1);

];


Echo("Probability of a single pair: ", N(pairsCount/trials) );

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      Probability of a single pair: 0.52
.   %/output








%mathpiper,title="Two pairs vs. three of a kind problem pp.90 chapter 6."

pairsCount := 0;
threeOfAKindCount := 0;

deck := Concat(1 .. 13, 1 .. 13, 1 .. 13, 1 .. 13);

trials := 1000;

Repeat(trials)
[

    deck := Shuffle(deck);

    hand := Take(deck,5);
    
    //Echo(hand);
    
    handPairCount := 0;
    handThreeOfAKindCount := 0;
    ForEach(card,1 .. 13)
    
    [
        If(Count(hand,card) = 2, handPairCount := handPairCount + 1);
        If(Count(hand,card) = 3, handThreeOfAKindCount := handThreeOfAKindCount + 1);
    ];
    
    If(handPairCount = 2, pairsCount := pairsCount + 1);
    If(handThreeOfAKindCount = 1, threeOfAKindCount := threeOfAKindCount + 1);

];

Echo("Probability of two pairs: ", N(pairsCount/trials) );
Echo("Probability of three of a kind: ", N(threeOfAKindCount/trials) );

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      Probability of two pairs: 0.052 
      Probability of three of a kind: 0.028
.   %/output









%mathpiper,title="Birthday match from page 97 chapter 7."

birthdayMatchCounter := 0;
trials := 50;
Repeat(trials)
[
    birthdays := RandomIntegerVector(25,1,365);

    dayCounter := 1;
    While(dayCounter <= 365)
    [
        If(Count(birthdays,dayCounter) >= 2, [birthdayMatchCounter := birthdayMatchCounter + 1; dayCounter := 366;]);
        dayCounter := dayCounter + 1;
    ];

];
    
    
    Echo(birthdayMatchCounter,,,trials);

%/mathpiper








%mathpiper,title="Birthday the same as August 1st"

birthdayMatchCounter := 0;

trials := 1000;
Repeat(trials)
[
    targetPersonBirthday := 213;
    
    birthdays := RandomIntegerVector(25,1,365);

    If( Contains(birthdays, targetPersonBirthday), birthdayMatchCounter++);

];
    
    
    Echo(birthdayMatchCounter,,,trials,,,N(birthdayMatchCounter/trials));

%/mathpiper




%mathpiper,title="Three daughters example pp.97 chapter 7."

trials := 100;

successes := 0;

Repeat(trials)
[
    sample := RandomSymbolVector( {{boy,1/2}, {girl,1/2} },4);
    //Echo(sample);
    
    If(Count(sample,girl) = 3, successes := successes + 1);
    
];

Echo(successes,,,trials);

%/mathpiper







%mathpiper,title="5 shot basketball example pp.102 chapter 7."

trials := 100;

successes := 0;

Repeat(trials)
[
    sample := RandomSymbolVector({{hit,1/4}, {miss,3/4}},5);
    
    If(Count(sample,hit) >= 3, successes := successes + 1);
    
];

Echo(successes,,,trials);

%/mathpiper








%mathpiper,title="Archery example pp.104 chapter 7."

trials := 100;

successes := 0;

Repeat(trials)
[
    sample := RandomSymbolVector({{black,10/100}, {white,60/100}, {miss,30/100}},3);
    
    If(Count(sample,black)= 1 And Count(sample,white) = 2, successes := successes + 1);
    
];

Echo(successes,,,trials);

%/mathpiper









%mathpiper,title="Sum of hammers and handle lengths pp. 108"

sample := {};
trials := 100;
Repeat(trials)
[
    handleLength := RandomSymbol({{10.0,20/100},{10.1,30/100},{10.2,30/100},{10.3,20/100}});
    headLength := RandomSymbol({{2.0,20/100},{2.1,20/100},{2.2,30/100},{2.3,20/100},{2.4,10/100}});
    
    totalLength := handleLength + headLength;
    
    sample := Append(sample, totalLength);
    
];


givenLength := 12.4;
overOrEqual := 0;
ForEach(element, sample)
[
    If(element >= givenLength, overOrEqual := overOrEqual + 1);

];

mean := Mean(sample);

Echo(overOrEqual,,,trials,,,mean);

%/mathpiper







%mathpiper,title="Flipping pennies pp.110 chapter 7."

trials := 2;
emptyCount := 0;

Repeat(trials)
[
    stack1 := 10;
    stack2 := 10;
    
    iterations := Repeat(200)
    [
        flip := RandomSymbol({{head,1/2},{tail,1/2}});
        
        If(flip = head, [stack1++; stack2--;], [stack1--; stack2++;] );
        
        If(stack1 = 0 Or stack2 = 0, Break() );
        
    ];
    
    Echo({stack1,,,stack2,,,iterations});
    If(stack1 = 0 Or stack2 = 0, emptyCount++);
    
];

{emptyCount,trials};


%/mathpiper






%mathpiper,title="capacirators example pp. 112 chapter 7."

daysToEmptyList := {};
trials := 50;
Repeat(trials)
[
    warehouseCount := 12;
    
    dayCounter := 0;
    
    daysToEmpty := Repeat()
    [
        morning := RandomSymbol({{used,6/10},{not_used,4/10}});
        If(morning = used, warehouseCount--);
        If(warehouseCount = 0, Break());
        
        afternoon := RandomSymbol({{used,6/10},{not_used,4/10}});
        If(afternoon = used, warehouseCount--);
        If(warehouseCount = 0, Break());
        
        
        If(Mod(dayCounter,3) = 0, warehouseCount := warehouseCount + 2);
        
        //Echo(warehouseCount, dayCounter, Mod(dayCounter,3));
        
        dayCounter++;
    
    ];
    
    daysToEmptyList := Append(daysToEmptyList, daysToEmpty);
    
];

Echo("Average days to empty: ", Mean(daysToEmptyList));


%/mathpiper







%mathpiper,title="Random walk example at the end of chapter 7."

targetPositions := {{3,2}, {-1,-4}};

successCount := 0;

trials := 500;
Repeat(trials)
[
    currentPosition := {0,0};
    walkPath := {};
    Repeat(12)
    [
        step:= RandomSymbol({{{1,0},1/4},{{-1,0},1/4},{{0,1},1/4},{{0,-1},1/4}});
        
        currentPosition := currentPosition + step;
        
        //walkPath := Append(walkPath,currentPosition);
        
        If(Contains(targetPositions, currentPosition), [successCount++; Break();]);
        
    ];
    //Write(walkPath);
];

{successCount, trials, N(successCount/trials)};
%/mathpiper

    %output,preserve="false"
      Result: {35,500,0.07}
.   %/output




%mathpiper,title="case 1 example pp. 119 chapter 8."

balls := {1,2,3,4,5,6};

successCount := 0;

trials := 1000;
Repeat(trials)
[
    sample := Sample(balls,3);
    
    If(sample = {1,2,3}, successCount++);
];

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      36 , 5000 , 0.0072
.   %/output




%mathpiper,title="case 2 example pp. 120 chapter 8."

balls := {1,2,3,4,5,6};

successCount := 0;

trials := 1000;
Repeat(trials)
[
    sample := Sample(balls,3);
    
    If(IsSubset({1,2,3},sample), successCount++);
];

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      49 , 1000 , 0.049
.   %/output






%mathpiper,title="case 3 example pp. 121 chapter 8."

balls := {1,2,3,4,5,6};

successCount := 0;

trials := 1000;
Repeat(trials)
[
    sample := Sample(balls,3);
    
    If( (IsOdd(sample[1]) And IsEven(sample[2])) Or (IsOdd(sample[2]) And IsEven(sample[3])), successCount++);
];

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      588 , 1000 , 0.588
.   %/output






%mathpiper,title="case 4 example pp. 120 chapter 8."

balls := {1,2,3,4,5,6};

successCount := 0;

trials := 1000;
Repeat(trials)
[
    sample := Sample(balls,3);
    
    If(Length(Select("IsOdd",sample)) = 2, successCount++);
];

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      423 , 1000 , 0.423
.   %/output





%mathpiper,title="case 5a example pp. 121 chapter 8."

balls := {1,2,3,4,5,6};

successCount := 0;

trials := 1000;
Repeat(trials)
[
    sample := Sample(balls,3);
    
    If(sample[1] = 1 Or sample[2] = 2 Or sample[3] = 3, successCount++);
];

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      421 , 1000 , 0.421
.   %/output




%mathpiper,title="case 5b example pp. 121 chapter 8."

balls := {1,2,3,4,5,6};

successCount := 0;

trials := 10000;
Repeat(trials)
[
    sample := Sample(balls,6);
    
    If(sample = {1,2,3,4,5,6}, successCount++);
];

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      19 , 10000 , 0.0019
.   %/output








%mathpiper,title="example 8-1 50 girls and boys pp. 122."

class := Concat(FillList(boy,25), FillList(girl,25));

samples := {};

trials := 100;

Repeat(trials)
[
    class := Shuffle(class);
    
    sample := Take(class,5);
    
    samples := Count(sample,girl) : samples;
    
];

successCount := Count(samples,4);

Echo(successCount,,,trials,,,N(successCount/trials));

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      14 , 100 , 0.14
.   %/output


%mathpiper,title="Extra code for example 8-1"
GeoGebraHistogram(samples);

%/mathpiper

    %output,preserve="false"
      Result: true
.   %/output






%mathpiper,title="Example 8-2 9 spades pp. 125"

samples := {};

trials := 50;

deck := Concat(FillList(spades,13), FillList(diamonds,13), FillList(hearts,13), FillList(clubs,13));
//test := {};
counter := 0;
Repeat(trials)
[

    Time() (deck := Shuffle(deck));
    
    Time() (hand := Take(deck,13));
    
    //test := Count(hand, spades) : test;
    
    Time() (If(Count(hand, spades) = 9, Count(hand, clubs) : samples));
    
    SysOut("Trial # ",,, counter);
    counter++;
];

samples;

%/mathpiper

    %output,preserve="false"
      Result: {}
      
      Side Effects:
      0.196182196 seconds taken
      0.003409093 seconds taken
      3.71556E-4 seconds taken
      Trial # ,0
      0.270504771 seconds taken
      0.002852877 seconds taken
      3.59543E-4 seconds taken
      Trial # ,1
      0.232552461 seconds taken
      0.003025803 seconds taken
      4.91124E-4 seconds taken
      Trial # ,2
      0.18674664 seconds taken
      0.002800635 seconds taken
      5.84711E-4 seconds taken
      Trial # ,3
      0.144181453 seconds taken
      0.002856508 seconds taken
      3.90273E-4 seconds taken
      Trial # ,4
      0.15071301 seconds taken
      0.002329067 seconds taken
      3.41942E-4 seconds taken
      Trial # ,5
      0.142227015 seconds taken
      0.00416729 seconds taken
      3.84127E-4 seconds taken
      Trial # ,6
      0.182585496 seconds taken
      0.002817397 seconds taken
      3.90832E-4 seconds taken
      Trial # ,7
      0.146306863 seconds taken
      0.002676038 seconds taken
      4.86933E-4 seconds taken
      Trial # ,8
      0.157542369 seconds taken
      0.00298306 seconds taken
      5.5873E-4 seconds taken
      Trial # ,9
      0.144787117 seconds taken
      0.002928025 seconds taken
      5.58171E-4 seconds taken
      Trial # ,10
      0.19398471 seconds taken
      0.003252089 seconds taken
      4.45867E-4 seconds taken
      Trial # ,11
      0.126095914 seconds taken
      0.002978032 seconds taken
      4.50616E-4 seconds taken
      Trial # ,12
      0.155209112 seconds taken
      0.017256383 seconds taken
      6.58184E-4 seconds taken
      Trial # ,13
      0.12783133 seconds taken
      0.002287162 seconds taken
      3.7407E-4 seconds taken
      Trial # ,14
      0.123423229 seconds taken
      0.002998985 seconds taken
      7.60153E-4 seconds taken
      Trial # ,15
      0.132079915 seconds taken
      0.003122744 seconds taken
      3.83009E-4 seconds taken
      Trial # ,16
      0.154205353 seconds taken
      0.003402388 seconds taken
      3.69321E-4 seconds taken
      Trial # ,17
      0.273602651 seconds taken
      0.003052064 seconds taken
      6.57905E-4 seconds taken
      Trial # ,18
      0.197815365 seconds taken
      0.00413628 seconds taken
      3.66248E-4 seconds taken
      Trial # ,19
      0.211756243 seconds taken
      0.026068676 seconds taken
      3.77981E-4 seconds taken
      Trial # ,20
      0.122327558 seconds taken
      0.003274439 seconds taken
      4.65701E-4 seconds taken
      Trial # ,21
      0.139593719 seconds taken
      0.003125537 seconds taken
      4.99226E-4 seconds taken
      Trial # ,22
      0.125312295 seconds taken
      0.003133638 seconds taken
      4.07314E-4 seconds taken
      Trial # ,23
      0.150976172 seconds taken
      0.00491487 seconds taken
      8.35301E-4 seconds taken
      Trial # ,24
      0.131557502 seconds taken
      0.003217168 seconds taken
      4.74083E-4 seconds taken
      Trial # ,25
      0.142815637 seconds taken
      0.002634413 seconds taken
      3.58146E-4 seconds taken
      Trial # ,26
      0.128298987 seconds taken
      0.004599747 seconds taken
      6.78298E-4 seconds taken
      Trial # ,27
      0.127720702 seconds taken
      0.002722413 seconds taken
      3.52E-4 seconds taken
      Trial # ,28
      0.129313363 seconds taken
      0.003920052 seconds taken
      4.22959E-4 seconds taken
      Trial # ,29
      0.123562352 seconds taken
      0.002716825 seconds taken
      3.70438E-4 seconds taken
      Trial # ,30
      0.126950772 seconds taken
      0.004046045 seconds taken
      3.70159E-4 seconds taken
      Trial # ,31
      0.127420384 seconds taken
      0.003145093 seconds taken
      4.12622E-4 seconds taken
      Trial # ,32
      0.12940276 seconds taken
      0.003184483 seconds taken
      3.94743E-4 seconds taken
      Trial # ,33
      0.127820435 seconds taken
      0.003433956 seconds taken
      4.86375E-4 seconds taken
      Trial # ,34
      0.129989985 seconds taken
      0.003815569 seconds taken
      4.50057E-4 seconds taken
      Trial # ,35
      0.14947626 seconds taken
      0.003012115 seconds taken
      5.24369E-4 seconds taken
      Trial # ,36
      0.127108613 seconds taken
      0.003920889 seconds taken
      3.83009E-4 seconds taken
      Trial # ,37
      0.13388182 seconds taken
      0.003318858 seconds taken
      7.46463E-4 seconds taken
      Trial # ,38
      0.115837627 seconds taken
      0.003154033 seconds taken
      4.7967E-4 seconds taken
      Trial # ,39
      0.124911965 seconds taken
      0.002796165 seconds taken
      5.6767E-4 seconds taken
      Trial # ,40
      0.143460691 seconds taken
      0.004712051 seconds taken
      5.55657E-4 seconds taken
      Trial # ,41
      0.133247382 seconds taken
      0.002995632 seconds taken
      5.64038E-4 seconds taken
      Trial # ,42
      0.125499749 seconds taken
      0.003563861 seconds taken
      7.88369E-4 seconds taken
      Trial # ,43
      0.126653807 seconds taken
      0.00321214 seconds taken
      4.48381E-4 seconds taken
      Trial # ,44
      0.137511332 seconds taken
      0.003920889 seconds taken
      3.73791E-4 seconds taken
      Trial # ,45
      0.139429174 seconds taken
      0.003025804 seconds taken
      4.06755E-4 seconds taken
      Trial # ,46
      0.129456677 seconds taken
      0.003884013 seconds taken
      5.07607E-4 seconds taken
      Trial # ,47
      0.119643418 seconds taken
      0.004542477 seconds taken
      3.69879E-4 seconds taken
      Trial # ,48
      0.125229604 seconds taken
      0.003352102 seconds taken
      4.77156E-4 seconds taken
      Trial # ,49
.   %/output



%mathpiper,title="Extra code for example 8-2"
//The probability of obtaining 9 spades seems to be very low.

N( (Combinations(13,9) * Combinations(39,4)) / Combinations(52,13) );

%/mathpiper

    %output,preserve="false"
      Result: 0.00009261135311
.   %/output



%mathpiper,title="Extra code for example 8-2"
GeoGebraHistogram(test);

%/mathpiper

    %output,preserve="false"
      Result: true
.   %/output


