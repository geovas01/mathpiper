%mathpiper
Retract("IsProduct",*);
Retract("Factors",*);

10 # IsProduct(_p)_(Not IsAtom(p)) <-- 
[
    Local(listification,result);
    listification:=Listify(p);
    //Tell(1,listification);
    result:=True;
    If(listification[1]!=Atom("*"),result:=False,
           result:=IsProduct(listification[2]) Or IsAtom(listification[2]));
    result;
    
];
20 # IsProduct(_p) <-- False;

10 # Factors(p_IsInteger) <-- FactorizeInt(p);
10 # Factors(p_IsRational)_(Denom(p) != 1) <-- {{Factor(Numerator(p)) /Factor(Denom(p)) , 1}}; //Added to handle rational numbers with denominators that are not 1.
20 # Factors(p_CanBeUni)_(Length(VarList(p)) = 1) <--  BinaryFactors(p);
30 # Factors(p_IsGaussianInteger)	<-- GaussianFactors(p);

40 # Factors(p_IsProduct) <-- [
    Local(listification,part1,part2,factor1,factor2);
    listification:=Listify(p);
    //Tell(11,listification);
    part1 := listification[2];
    part2 := listification[3];
    factor1 := Factors(part1);
    factor2 := Factors(part2);
    //Tell(12,{part1,part2});
    //Tell(13,factor1);
    //Tell(14,factor2);
    If(IsList(factor2),Concat(factor1,factor2),factor1:factor2);
];   

50 # Factors(_x^2-_y^2) <-- {{x+y,1},{x-y,1}};

%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output



%mathpiper
////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////
///     TESTING    TESTING    TESTING    TESTING    TESTING    TESTING   ///
////////////////////////////////////////////////////////////////////////////

// a bunch of expressions for testing
expressions := {};
Push( expressions, {66,{{2,1},{3,1},{11,1}}} );
Push( expressions, {3*a,{{3,1},{a,1}}} );
Push( expressions, {3*a*x,{{3,1},{a,1},{x,1}}} );
Push( expressions, {3*a-6,{{3,1},{a-2,1}} });
Push( expressions, {x^2-4,{{x+2,1},{x-2,1}} });
Push( expressions, {x^2-a^2,{{x+a,1},{x-a,1}} });
Push( expressions, {x^2+5*x+6,{{x+2,1},{x+3,1}} } );
Push( expressions, {-9*a^5+18*a^2-3*a,{{3,1},{a,1},{6*a-3*a^4-1}}} );
Push( expressions, {5*(x+3)+y*(x+3),{{5+y,1},{x+3,1}}} );
Push( expressions, {y^2-y-42,{{y-7,1},{y+6,1}}} );
Push( expressions, {y^4+5*y^2+6,{{y^2+2,1},{y^2+3,1}}} );

NewLine(2);  Tell("TEST Factors");
expressions := Reverse(expressions);
Local(i);   i := 0;
ForEach(q,expressions)
[
    i := i + 1;     
    Check(i<15, ">>>>> FORCED STOP <<<<<");
    f := q[1];
    g := q[2];
    Tell("-------------------------------------------------------------------");
    Tell("-------------------------------------------------------------------");
    Tell(" i = ",i);
    Tell(">>> Test Factors() on polynomial: ",f);
 
    stk := {};
    r   := V(Factors(f));
    SysOut("in Testing:  f=",f);
    SysOut("             r=Factors(f)=",r);
    //SysOut("             correct answer: ",g);
    //SysOut("             Difference(r,g) = ",Difference(r,g));
    If( Length(Difference(r,g))=0, 
       SysOut("             Answer r is CORRECT"),
       SysOut("             Answer r is WRONG:  it should be ",g)
      );   
];

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      << TEST Factors>> 
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 1 
      << >>> Test Factors() on polynomial: >> f 66 
      FactorizeInt: Info: remaining number 11 
      RabinMiller: Info: Testing 11 
      RabinMiller: Info: 11 is spp base2 
      in Testing:  f=66
                   r=Factors(f)={{2,1},{3,1},{11,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 2 
      << >>> Test Factors() on polynomial: >> f 3*a 
      in Testing:  f=3*a
                   r=Factors(f)={{3,1},{a,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 3 
      << >>> Test Factors() on polynomial: >> f 3*a*x 
      in Testing:  f=3*a*x
                   r=Factors(f)={{3,1},{a,1},{x,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 4 
      << >>> Test Factors() on polynomial: >> f 3*a-6 
      in Testing:  f=3*a-6
                   r=Factors(f)={{3,1},{a-2,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 5 
      << >>> Test Factors() on polynomial: >> f x^2-4 
      in Testing:  f=x^2-4
                   r=Factors(f)={{x+2,1},{x-2,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 6 
      << >>> Test Factors() on polynomial: >> f x^2-a^2 
      in Testing:  f=x^2-a^2
                   r=Factors(f)={{x+a,1},{x-a,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 7 
      << >>> Test Factors() on polynomial: >> f x^2+5*x+6 
      in Testing:  f=x^2+5*x+6
                   r=Factors(f)={{x+2,1},{x+3,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 8 
      << >>> Test Factors() on polynomial: >> f 18*a^2-9*a^5-3*a 
      in Testing:  f=18*a^2-9*a^5-3*a
                   r=Factors(f)={{18*a-3-9*a^4,1},{a,1}}
                   Answer r is WRONG:  it should be {{3,1},{a,1},{6*a-3*a^4-1}}
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 9 
      << >>> Test Factors() on polynomial: >> f 5*(x+3)+y*(x+3) 
      in Testing:  f=5*(x+3)+y*(x+3)
                   r=Factors(f)=Factors(5*(x+3)+y*(x+3))
                   Answer r is WRONG:  it should be {{y+5,1},{x+3,1}}
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 10 
      << >>> Test Factors() on polynomial: >> f y^2-y-42 
      in Testing:  f=y^2-y-42
                   r=Factors(f)={{y-7,1},{y+6,1}}
                   Answer r is CORRECT
      << ------------------------------------------------------------------->> 
      << ------------------------------------------------------------------->> 
      <<  i = >> i 11 
      << >>> Test Factors() on polynomial: >> f y^4+5*y^2+6 
      in Testing:  f=y^4+5*y^2+6
                   r=Factors(f)={{5*y^2+y^4+6,1}}
                   Answer r is WRONG:  it should be {{y^2+2,1},{y^2+3,1}}
.   %/output


