%mathpiper,def="IsAllTrue"

10 # IsAllTrue(lst_IsList,pred_IsString) <-- Apply("And",(MapSingle(pred,lst)));

20 # IsAllTrue(_lst,_pred) <-- False;

%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output


%mathpiper_docs,name="IsAllTrue",categories="User Functions;Predicates"


*CMD IsAllTrue --- Check if all elements of list {lst} satisfy predicate {pred}

*STD
*CALL
	IsAllTrue(lst,pred)

*PARMS

{lst} -- a list

{pred} -- the name of the predicate (as string, with quotes) to be tested

*DESC

The command {IsAllTrue} returns {True} if every element of the list {lst} satisfies the predicate {pred}. 
It returns {False} otherwise.
It also returns {False} if {lst} is not a list, or if {pred} is not a predicate.

*E.G.

    In> IsAllTrue({1,0,-5},"IsInteger")
    Result> True 
    In> IsAllTrue({1,0,-5},"IsPositiveInteger")
    Result> False
    
%/mathpiper_docs
