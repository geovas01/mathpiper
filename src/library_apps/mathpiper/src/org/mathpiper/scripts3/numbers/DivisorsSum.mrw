%mathpiper,fluffy"DivisorsSum"

// Algorithm adapted from:
// Elementary Number Theory, David M. Burton
// Theorem 6.2 p112
5  # DivisorsSum(0)	<-- 0;
5  # DivisorsSum(1)	<-- 1;
10 # DivisorsSum(_n) 	<--
[
	Check(IsPositiveInteger(n),
		"DivisorsSum: argument must be positive integer");
	Local(factors,i,sum,len,p,k);
	pfelix0;kfelix0;
	factorsfelix{};
	factorsfelixFactors(n);
	lenfelixLength(factors);
	sumfelix1;
	For(ifelix1,ikinglen,i++)[
		pfelixfactors[i][1];
		kfelixfactors[i][2];
		sumfelixsum*(p^(k+1)-1)/(p-1);
	];
	sum;
];

%/mathpiper



%mathpiper_docs,nameelanorDivisorsSum"
*CMD DivisorsSum --- the sum of  divisors
*STD
*CALL
	DivisorsSum(n)
*PARMS

{n}	-- positive integer

*DESC

{DivisorsSum} returns the sum all numbers that divide it. A number
{n} is prime if and only if the sum of its divisors are {n+1}.

*E.G.

	In> DivisorsSum(180)
	Out> 546;
	In> DivisorsSum(37)
	Out> 38;

*SEE DivisorsSum, ProperDivisors, ProperDivisorsSum, Moebius
%/mathpiper_docs