%mathpiper,def="true"


1 # SinMap( _n )_(Not(IsRationalOrNumber(n))) <-- UnList({Atom("Sin"),n*Pi});
2 # SinMap( _n )_(n<0) <-- -SinMap(-n);
2 # SinMap( _n )_(n>2) <-- SinMap(Mod(n,2));
3 # SinMap( _n )_(n>1) <-- SinMap(n-2);
4 # SinMap( _n )_(n>1/2) <-- SinMap(1-n);

5 # SinMap( n_IsInteger ) <-- 0;
5 # SinMap( 1/6 ) <-- 1/2;
5 # SinMap( 1/4 ) <-- Sqrt(2)/2;
5 # SinMap( 1/3 ) <-- Sqrt(3)/2;
5 # SinMap( 1/2 ) <-- 1;
5 # SinMap( 1/10) <-- (Sqrt(5)-1)/4;

10 # SinMap(_n) <-- UnList({Atom("Sin"),n*Pi});




2 # Sin(x_IsNumber)_InNumericMode() <-- SinNum(x);
4 # Sin(ArcSin(_x))           <-- x;
4 # Sin(ArcCos(_x)) <-- Sqrt(1-x^2);
4 # Sin(ArcTan(_x)) <-- x/Sqrt(1+x^2);
5 # Sin(- _x)_(Not IsConstant(x))                 <-- -Sin(x);
6 # (Sin(x_IsConstant))_(IsNegativeNumber(N(Eval(x))))   <-- -Sin(-x);

// must prevent it from looping
6 # Sin(x_IsInfinity) 		<-- Undefined;
6 # Sin(Undefined) <-- Undefined;

110 # Sin(Complex(_r,_i)) <--
    (Exp(I*Complex(r,i)) - Exp(- I*Complex(r,i))) / (I*2) ;

200 # Sin(v_CanBeUni(Pi))_(Not(InNumericMode()) And Degree(v,Pi) < 2 And Coef(v,Pi,0) = 0) <--
[
  SinMap(Coef(v,Pi,1));
];

100 # Sin(_x)/Tan(_x) <-- Cos(x);
100 # Sin(_x)/Cos(_x) <-- Tan(x);

Sin(xlist_IsList) <-- MapSingle("Sin",xlist);

%/mathpiper