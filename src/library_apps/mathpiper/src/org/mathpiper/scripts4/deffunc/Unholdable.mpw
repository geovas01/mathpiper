%mathpiper,def="UnHoldable",scope="private"

// this will "unhold" a variable - used to make sure that := with Eval()
// immediately on the right hand side evaluates its argument
Rulebase("UnHoldable",{var});
HoldArgument("UnHoldable",var);
UnFence("UnHoldable",1);
Rule("UnHoldable",1,10,IsEqual(Type(Eval(var)),"Eval"))
[
  MacroBind(var,Eval(Eval(var)));
/* Echo({"unheld",var,Eval(var)}); */
];
Rule("UnHoldable",1,20,True)
[
/* Echo({"held"}); */
  True;
];

%/mathpiper