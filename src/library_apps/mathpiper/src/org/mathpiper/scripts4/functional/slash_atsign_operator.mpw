%mathpiper,def="/@"

Function("/@",{func,lst}) Apply("MapSingle",{func,lst});

%/mathpiper



%mathpiper_docs,name="/@",categories="Operators"
*CMD /@ --- apply a function to all entries in a list
*STD
*CALL
	fn /@ list
Precedence:
*EVAL PrecedenceGet("/@")

*PARMS

{fn} -- function to apply

{list} -- list of arguments

*DESC
This function is a shorthand for {MapSingle}. It
successively applies the function "fn" to all the entries in
"list" and returns a list contains the results. The parameter "fn"
can either be a string containing the name of a function or a pure
function.

This operator can help the user to program in the style of functional programming languages such as Miranda or Haskell.

*E.G.

In> "Sin" /@ {a,b}
Result: {Sin(a),Sin(b)};
In> {{a},Sin(a)*a} /@ {a,b}
Result: {Sin(a)*a,Sin(b)*b};

*SEE MapSingle, Map, MapArgs
%/mathpiper_docs