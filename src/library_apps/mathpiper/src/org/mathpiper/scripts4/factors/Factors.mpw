%mathpiper,def="Factors"

// This is the new wrapper for the function Factors().  
// It can call either the old function YacasFactors() or the
// new function xFactors().
//
// Currently, it is set-up to call the new version.


Factors(_x) <-- xFactors(x);

%/mathpiper




%mathpiper_docs,name="Factors",categories="User Functions;Number Theory"
*CMD Factors --- factorization
*STD
*CALL
	Factors(x)

*PARMS

{x} -- integer or univariate polynomial

*DESC

This function decomposes the integer number {x} into a product of
numbers. 
Alternatively, if {x} is a univariate polynomial, it is
decomposed into irreducible polynomials.  If {x} is a polynomial
"over the integers", the irreducible polynomial factors will also
be returned in the (unique) form with integer coefficients.

The factorization is returned as a list of pairs. The first member of
each pair is the factor, while the second member denotes the power to
which this factor should be raised. So the factorization
$x = p1^n1 * ... * p9^n9$
is returned as {{{p1,n1}, ..., {p9,n9}}}.

Programmer: Yacas Team + Sherm Ostrowsky

*E.G.
    In> Factors(24)
    Result: {{2,3},{3,1}}
    
    In> Factors(32*x^3+32*x^2-70*x-75)
    Result: {{4*x+5,2},{2*x-3,1}}

*SEE Factor, IsPrime, GaussianFactors
%/mathpiper_docs





