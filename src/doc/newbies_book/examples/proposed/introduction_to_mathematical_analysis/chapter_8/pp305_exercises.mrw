%group,description="exercise 1 and 2"



%mathpiper
correction(a,b) :=
[
    //Local(key,table);
    key := N(Round((b/a)*10)/10);
    key := String(key);
    table := {{"0.0",27.3},{"0.1",17.6},{"0.2",11.5},{"0.3",7.4},{"0.4",4.6},{"0.5",2.8},{"0.6",1.6},{"0.7",.8},{"0.8",.3},{"0.9",.1}};
    
    table[key];

];

a := 20;
b := 6;

A := N(Pi * a * b);
Echo("Area: ",A);

P := N(Pi*(a+b) + correction(a,b));
Echo("Perimeter: ",P);

NewLine();


//2a)
a := 10;
b := 7;

A := N(Pi * a * b);
Echo("Area: ",A);

P := N(Pi*(a+b) + correction(a,b));
Echo("Perimeter: ",P);

NewLine();


//2b)
a := 10;
b := 2;

A := N(Pi * a * b);
Echo("Area: ",A);

P := N(Pi*(a+b) + correction(a,b));
Echo("Perimeter: ",P);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Area: 376.9911184 
      Perimeter: 89.08140899 
      
      Area: 219.9114858 
      Perimeter: 54.20707511 
      
      Area: 62.83185308 
      Perimeter: 49.19911184
.   %/output

%/group




%group,description="exercises 3 and 4"


%mathpiper

//3)
height := 60;
a := 25/height * y;
b := 4/5 * a;

area := Pi*a*b;

volume := Integrate(y,0,height)area;
N(volume);


//4)
height := 20;
a := 6/height * y;
b := 6/12 * a;

area := Pi*a*b;

volume := Integrate(y,0,height)area;
N(volume);

%/mathpiper

    %output,preserve="false"
      Result: 376.9911185
.   %/output


%/group




%group,description="exercises 5 and 6"


%mathpiper


a := 15;
b := 3/5*a;
area := Pi*a*b;
perimeter := N(Pi*(a+b) + correction(a,b));
Echo("5)",,,2*a,,,2*b,,,(area),,,perimeter);

a := 20;
b := 4/5*a;
area := Pi*a*b;
perimeter := N(Pi*(a+b) + correction(a,b));
Echo("6)",,,2*a,,,2*b,,,(area),,,perimeter);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      5), 30 , 18 , 135*Pi , 76.99822369 
      6), 40 , 32 , 320*Pi , 113.3973355
.   %/output


%/group




%group,description="exercise 7 and 8"


%mathpiper

//Exercise 7.
a := 10;
b := 8;
c := Sqrt(a^2 - b^2);

pinDistance := 2*c;
Echo("Pin Distance: ", pinDistance);

stringLength := 2*a + pinDistance;
Echo("String Length: ", stringLength);

area := Pi*a*b;
Echo("Area: ",area);

NewLine();


//Exercise 8a.
a := 12.5;
b := 7.5;
c := Sqrt(a^2 - b^2);
N([
pinDistance := 2*c;
Echo("Pin Distance: ", pinDistance);

stringLength := 2*a + pinDistance;
Echo("String Length: ", stringLength);

area := Pi*a*b;
Echo("Area: ",area);
]);

NewLine();



//Exercise 8b.
a := 13;
b := 5;
c := Sqrt(a^2 - b^2);

pinDistance := 2*c;
Echo("Pin Distance: ", pinDistance);

stringLength := 2*a + pinDistance;
Echo("String Length: ", stringLength);

area := Pi*a*b;
Echo("Area: ",area);

NewLine();
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Pin Distance: 12 
      String Length: 32 
      Area: 80*Pi 
      
      Pin Distance: 20.0000 
      String Length: 45.0000 
      Area: 294.5243113 
      
      Pin Distance: 24 
      String Length: 50 
      Area: 65*Pi
.   %/output


%/group



%group,description="exercises 9 and 10"


%mathpiper

//9.
a := 133/2;
b := 101/2;
N([
area := Pi*a*b;
perimeter := Pi*(a + b) + correction(a,b);
]);
Echo("Area: ",area,"   Perimeter: ",perimeter);


//10a.
a := 94/2;
b := 78/2;
N([
area := Pi*a*b;
perimeter := Pi*(a + b) + correction(a,b);
]);
Echo("Area: ",area,"   Perimeter: ",perimeter);



//10b.
a := 43/2;
b := 27/2;
N([
area := Pi*a*b;
perimeter := Pi*(a + b) + correction(a,b);
]);
Echo("Area: ",area,"   Perimeter: ",perimeter);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Area: 10550.25353    Perimeter: 367.8663405 
      Area: 5758.539333    Perimeter: 270.4769682 
      Area: 911.8472675    Perimeter: 111.5557429
.   %/output

%/group



%group,description="exercise 11"


%mathpiper

a := 120/2;
b := 40;

area := ExpandBrackets
((Pi*a*b)/2);


/* b) One idea is to integrate the area under the parabolic curve. */

%/mathpiper

    %output,preserve="false"
      Result: 1200*Pi
.   %/output


%/group




%group,description="exercise 12"
The questions in this exercise are explained in section IV.
%/group




%group,description="exercise 13"


%mathpiper
Clear(a,b);

a := 1/2*d;
b := N(a*Cos(55*Pi/180));

Echo(Simplify(2*a),Simplify(2*b));
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      d (1.147152873*d)/2
.   %/output


%/group




%group,description="exercise 14"

a) The semicircle part of the moon is shaped by its circumference.  For the semi-ellpese, imagine that the moon 
was a circle instead of a sphere. The semi-ellipse is created by viewing this circle at an oblique angle.

b) 


%mathpiper

a := 2163;
b := N(4/5*a);

semiElipseArea := (Pi*a*b)/2;

semiCircleArea := (Pi*a^2)/2;

lightArea := N(semiCircleArea - semiElipseArea);


%/mathpiper

    %output,preserve="false"
      Result: 1469815.80
.   %/output


%/group




%group,description="exercise 15"

%geogebra
o:3
p:sqrt(40^2-o^2);
A:(o,0)
B:(0,p)
s:Segment[A,B]
C:Midpoint[s]
s2:Segment[B,C]

//Approximate model of the problem.
D:Midpoint[s2]

%/geogebra

    %output,preserve="false"
      GeoGebra updated.
.   %/output


%mathpiper

Clear(x,y,a,b);

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");

P1:=Point(x,0);
P2:=Point(0,Sqrt(40^2-x^2));

x1 := 30/40*(P1[1]+P2[1]);
y1 := 30/40*(P1[2]+P2[2]);

//midpoint:=Midpoint(P1,P2);
Echo(x1,y1);

ForEach(x,0 .. 40)
[
    Echo("(",N(y1),,, N(x1),")" );

];



%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      (3*x)/4 (3*Sqrt(1600-x^2))/4 
      (30 , 0 )
      (29.99062355 , 0.75 )
      (29.96247653 , 1.5 )
      (29.91550603 , 2.25 )
      (29.8496231 , 3 )
      (29.76470225 , 3.75 )
      (29.6605799 , 4.5 )
      (29.5370530 , 5.25 )
      (29.39387693 , 6 )
      (29.23076293 , 6.75 )
      (29.0473751 , 7.5 )
      (28.8433268 , 8.25 )
      (28.61817605 , 9 )
      (28.3714205 , 9.75 )
      (28.1024910 , 10.5 )
      (27.81074433 , 11.25 )
      (27.49545418 , 12 )
      (27.1558005 , 12.75 )
      (26.79085665 , 13.5 )
      (26.39957388 , 14.25 )
      (25.98076213 , 15 )
      (25.5330668 , 15.75 )
      (25.05493963 , 16.5 )
      (24.54460226 , 17.25 )
      (24 , 18 )
      (23.41874249 , 18.75 )
      (22.79802623 , 19.5 )
      (22.13453185 , 20.25 )
      (21.42428528 , 21 )
      (20.66246597 , 21.75 )
      (19.84313483 , 22.5 )
      (18.95883699 , 23.25 )
      (18 , 24 )
      (16.95398183 , 24.75 )
      (15.80348063 , 25.5 )
      (14.52368755 , 26.25 )
      (13.07669683 , 27 )
      (11.39901311 , 27.75 )
      (9.36749700 , 28.5 )
      (6.666145813 , 29.25 )
      (0 , 30 )
.   %/output





%geogebra
      (30 , 0 )
      (29.99062355 , 0.75 )
      (29.96247653 , 1.5 )
      (29.91550603 , 2.25 )
      (29.8496231 , 3 )
      (29.76470225 , 3.75 )
      (29.6605799 , 4.5 )
      (29.5370530 , 5.25 )
      (29.39387693 , 6 )
      (29.23076293 , 6.75 )
      (29.0473751 , 7.5 )
      (28.8433268 , 8.25 )
      (28.61817605 , 9 )
      (28.3714205 , 9.75 )
      (28.1024910 , 10.5 )
      (27.81074433 , 11.25 )
      (27.49545418 , 12 )
      (27.1558005 , 12.75 )
      (26.79085665 , 13.5 )
      (26.39957388 , 14.25 )
      (25.98076213 , 15 )
      (25.5330668 , 15.75 )
      (25.05493963 , 16.5 )
      (24.54460226 , 17.25 )
      (24 , 18 )
      (23.41874249 , 18.75 )
      (22.79802623 , 19.5 )
      (22.13453185 , 20.25 )
      (21.42428528 , 21 )
      (20.66246597 , 21.75 )
      (19.84313483 , 22.5 )
      (18.95883699 , 23.25 )
      (18 , 24 )
      (16.95398183 , 24.75 )
      (15.80348063 , 25.5 )
      (14.52368755 , 26.25 )
      (13.07669683 , 27 )
      (11.39901311 , 27.75 )
      (9.36749700 , 28.5 )
      (6.666145813 , 29.25 )
      (0 , 30 )
%/geogebra

    %output,preserve="false"
      GeoGebra updated.
.   %/output


%/group


