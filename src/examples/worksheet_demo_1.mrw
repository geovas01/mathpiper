/*  This is a MathRider notebook file and it consists of folds which contain source
    code.  A fold starts with %<keyword> and ends with %end.  Code is entered inside
    a fold and then executed by placing the cursor anywhere inside the code and
    pressing <shift><enter>.  The result of the execution will be
    placed at the bottom of the fold within an indented output fold.

    Folds can be opened and closed by pressing the small triangles in the gutter
    which is on the left side of the text area.  There are additional fold operations
    in the Folding menu at the top of the window.
*/

%piper,description="loop"
//Loop demonstration.

x := 1;
While(x < 100) 
[
  Write(x);
  x := x + 1;  
];

%/piper



%piper,description="series"
//Automatically generate a sequence of numbers.

Echo(1 .. 100);

%/piper



%piper,description="factors"
//Factor each of the following into prime factors: 8,11,14,18,24,29.

a := {8,11,14,18,24,29};
ForEach(x,a)
    Echo(x,"- ", Factor(x));

%/piper



%piper,output="geogebra"
//Define a function and graph it by pressing <shift><enter> in the output fold.

Clear(x);
f(x) := 11*x-2*x^2;
Write(f(x));

%/piper



%piper,output="geogebra"
//Calculate the derivative of the function in the previous cell and graph it by
// pressing <shift><enter> in the output fold.

df := D(x) f(x);
Write(df);

%/piper



%geogebra,clear="true"
//Plot a function in GeoGebra.

f(x)=2*sin(x)

%/geogebra



%geogebra,clear="false"
//Add a tangent line to the function in the previous fold.

a = 2
(2,0)
t = Tangent[a, f]

%/geogebra



/* The previous plot of 2 * Sin(x) was okay, but it was not interactive
Press <shift><enter> on this fold to generate an interactive plot of
Sin(x) with a dynamic tangent line.  Drag the point at the intersection
of the tangent line and the sin wage to move it.  Drag the points
a, b, and c to change the sin wave.
*/
%geogebra_xml,name="slope",collapse="true",clear="true"
<?xml version="1.0" encoding="utf-8"?>
<geogebra format="2.7">
<gui>
	<show algebraView="true" auxiliaryObjects="true" algebraInput="true" cmdList="true"/>
	<splitDivider loc="196" locVertical="400" horizontal="true"/>
	<font  size="12"/>
</gui>
<euclidianView>
	<coordSystem xZero="174.75" yZero="350.0" scale="30.0" yscale="30.0"/>
	<evSettings axes="true" grid="false" pointCapturing="0" pointStyle="0"/>
	<bgColor r="255" g="255" b="255"/>
	<axesColor r="64" g="64" b="64"/>
	<gridColor r="192" g="192" b="192"/>
	<lineStyle axes="1" grid="10"/>
	<axis id="0" label="" unitLabel="" showNumbers="true"/>
	<axis id="1" label="" unitLabel="" showNumbers="true"/>
</euclidianView>
<kernel>
	<decimals val="2"/>
	<angleUnit val="degree"/>
	<coordStyle val="0"/>
</kernel>
<construction title="Concept of Derivative I" author="Judith Preiner" date="March 17, 2007">
	<worksheetText above="Below you can see the graph of a quadratic polynomial f(x) = a x^2 + b x + c and a point A that lies on its graph. " below="Assignments"/>
<element type="numeric" label="a">
	<value val="0.7"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.1"/>
	<labelOffset x="-2" y="6"/>
	<labelMode val="1"/>
	<slider min="0" max="5.0" absoluteScreenLocation="true" width="100.0" x="6.0" y="24.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<element type="numeric" label="b">
	<value val="2.8"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.1"/>
	<labelOffset x="-2" y="7"/>
	<labelMode val="1"/>
	<slider min="0" max="5.0" absoluteScreenLocation="true" width="100.0" x="6.0" y="47.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<element type="numeric" label="c">
	<value val="0.0"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.1"/>
	<labelOffset x="-1" y="7"/>
	<labelMode val="1"/>
	<slider min="-5.0" max="5.0" absoluteScreenLocation="true" width="100.0" x="6.0" y="70.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<expression label="f" exp="f(x) =c + b * Sin(a * x)" />
<element type="function" label="f">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<breakpoint val="false"/>
	<lineStyle thickness="5" type="0"/>
</element><command name="Point">
	<input a0="f"/>
	<output a0="P"/>
</command>
<element type="point" label="P">
	<show object="true" label="true"/>
	<objColor r="0" g="153" b="0" alpha="0.0"/>
	<labelOffset x="-15" y="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="4.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<command name="Tangent">
	<input a0="P" a1="f"/>
	<output a0="t"/>
</command>
<element type="line" label="t">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="204" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="-2.0" y="1.0" z="-4.0"/>
	<lineStyle thickness="3" type="0"/>
	<eqnStyle style="explicit"/>
</element>
<command name="Slope">
	<input a0="t"/>
	<output a0="m"/>
</command>
<element type="numeric" label="m">
	<value val="2.0"/>
	<show object="true" label="true"/>
	<objColor r="204" g="0" b="0" alpha="0.1"/>
	<labelMode val="1"/>
	<lineStyle thickness="2" type="0"/>
	<breakpoint val="false"/>
</element>
<expression label="M" exp="(x(P), m)" type="point" />
<element type="point" label="M">
	<show object="true" label="true"/>
	<objColor r="255" g="153" b="0" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="2.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="2"/>
</element>
</construction>
</geogebra>

    %output,preserve="false"
      GeoGebra updated.
    %/output

%/geogebra_xml



/*
Drag the points to change the parameters of this area under a curve
demonstration.
*/
%geogebra_xml,name="area_under_curve",input="xml",clear="true",collapse="true"
<?xml version="1.0" encoding="utf-8"?>
<geogebra format="2.7">
<gui>
	<show algebraView="false" auxiliaryObjects="true" algebraInput="true" cmdList="true"/>
	<splitDivider loc="250" locVertical="400" horizontal="true"/>
	<font  size="14"/>
	<consProtColumns  col0="true" col1="true" col2="true" col3="false" col4="true" col5="false"/>
	<consProtocol useColors="true" showOnlyBreakpoints="false"/>
</gui>
<euclidianView>
	<coordSystem xZero="175.85741811175342" yZero="300.2967244701349" scale="87.39884393063582" yscale="87.39884393063582"/>
	<evSettings axes="true" grid="false" pointCapturing="0" pointStyle="0"/>
	<bgColor r="255" g="255" b="255"/>
	<axesColor r="64" g="64" b="64"/>
	<gridColor r="192" g="192" b="192"/>
	<lineStyle axes="1" grid="10"/>
	<axis id="0" label="" unitLabel="" showNumbers="true"/>
	<axis id="1" label="" unitLabel="" showNumbers="true"/>
</euclidianView>
<kernel>
	<decimals val="2"/>
	<angleUnit val="degree"/>
	<coordStyle val="0"/>
</kernel>
<construction title="Ober- und Untersumme" author="" date="">
<element type="numeric" label="n">
	<value val="5.0"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.1"/>
	<labelMode val="1"/>
	<slider min="1.0" max="50.0" absoluteScreenLocation="true" width="100.0" x="198.0" y="358.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="1.0"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<expression label ="f" exp="f(x) = x³ - x² - x + 2"/>
<element type="function" label="f">
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<lineStyle thickness="2" type="0"/>
</element><command name="Segment">
	<input a0="(-1, 0)" a1="(1.7, 0)"/>
	<output a0="s"/>
</command>
<element type="segment" label="s">
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="2.7" z="-0.0"/>
	<lineStyle thickness="2" type="0"/>
	<eqnStyle style="explicit"/>
	<outlyingIntersections val="true"/>
	<keepTypeOnTransform val="false"/>
</element>
<command name="Point">
	<input a0="s"/>
	<output a0="B"/>
</command>
<element type="point" label="B">
	<show object="true" label="false"/>
	<objColor r="125" g="125" b="255" alpha="0.0"/>
	<labelOffset x="4" y="28"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="1.19157848324515" y="0.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<expression label="b" exp="x(B)" />
<element type="numeric" label="b">
	<value val="1.19157848324515"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.1"/>
	<labelMode val="1"/>
	<breakpoint val="false"/>
</element>
<command name="Point">
	<input a0="s"/>
	<output a0="A"/>
</command>
<element type="point" label="A">
	<show object="true" label="false"/>
	<objColor r="125" g="125" b="255" alpha="0.0"/>
	<labelOffset x="-18" y="28"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="-0.6314814814814815" y="0.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<expression label="a" exp="x(A)" />
<element type="numeric" label="a">
	<value val="-0.6314814814814815"/>
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.1"/>
	<labelMode val="1"/>
	<breakpoint val="false"/>
</element>
<element type="point" label="C">
	<show object="false" label="true"/>
	<objColor r="0" g="0" b="255" alpha="0.0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="-0.5" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<command name="UpperSum">
	<input a0="f" a1="a" a2="b" a3="n"/>
	<output a0="O"/>
</command>
<element type="numeric" label="O">
	<value val="3.193496014678794"/>
	<show object="true" label="false"/>
	<objColor r="102" g="102" b="255" alpha="0.1"/>
	<labelMode val="1"/>
	<lineStyle thickness="2" type="0"/>
	<breakpoint val="false"/>
</element>
<command name="LowerSum">
	<input a0="f" a1="a" a2="b" a3="n"/>
	<output a0="U"/>
</command>
<element type="numeric" label="U">
	<value val="2.6806083925654347"/>
	<show object="true" label="false"/>
	<objColor r="153" g="51" b="0" alpha="0.25"/>
	<labelMode val="1"/>
	<lineStyle thickness="2" type="0"/>
	<breakpoint val="false"/>
</element>
<command name="Function">
	<input a0="f" a1="-1.3" a2="1.8"/>
	<output a0="g"/>
</command>
<element type="function" label="g">
	<show object="true" label="false"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<labelMode val="2"/>
	<breakpoint val="false"/>
	<lineStyle thickness="4" type="0"/>
</element><expression label="T1" exp="&quot;a = &quot; + (x(A))" />
<element type="text" label="T1">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<fixed val="true"/>
	<breakpoint val="false"/>
	<startPoint exp="A"/>
	<labelOffset x="-19" y="29"/>
</element>
<expression label="T2" exp="&quot;b = &quot; + (x(B))" />
<element type="text" label="T2">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<fixed val="true"/>
	<breakpoint val="false"/>
	<startPoint exp="B"/>
	<labelOffset x="-10" y="29"/>
</element>
<expression label="T4" exp="&quot;Lower sum = &quot; + U" />
<element type="text" label="T4">
	<show object="true" label="true"/>
	<objColor r="204" g="0" b="51" alpha="0.0"/>
	<breakpoint val="false"/>
	<startPoint  x="-1.8023589065255736" y="2.8524029982363324" z="1.0"/>
</element>
<expression label="T5" exp="&quot;Upper sum = &quot; + O" />
<element type="text" label="T5">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="204" alpha="0.0"/>
	<fixed val="true"/>
	<breakpoint val="false"/>
	<startPoint  x="-1.7909171075837744" y="3.1346340388007063" z="1.0"/>
</element>
<expression label="T6" exp="&quot;Difference = &quot; + (abs(O - U))" />
<element type="text" label="T6">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<breakpoint val="false"/>
	<startPoint  x="-1.7718474426807762" y="2.55873015873016" z="1.0"/>
</element>
</construction>
</geogebra>



%/geogebra_xml



/*
Drag the points to change the parameters of this domain and range
demonstration.
*/
%geogebra_xml,name="domain_range",clear="true",collapse="true"
<?xml version="1.0" encoding="utf-8"?>
<geogebra format="2.7">
<gui>
	<show algebraView="false" auxiliaryObjects="true" algebraInput="true" cmdList="true"/>
	<splitDivider loc="234" locVertical="400" horizontal="true"/>
	<consProtColumns  col0="true" col1="true" col2="true" col3="false" col4="true" col5="false"/>
	<consProtocol useColors="true" showOnlyBreakpoints="false"/>
</gui>
<euclidianView>
	<coordSystem xZero="301.95833333333326" yZero="350" scale="29.99999999999999" yscale="29.99999999999999"/>
	<evSettings axes="true" grid="true" pointCapturing="1" pointStyle="0"/>
	<bgColor r="255" g="255" b="255"/>
	<axesColor r="64" g="64" b="64"/>
	<gridColor r="204" g="204" b="204"/>
	<lineStyle axes="1" grid="20"/>
	<axis id="0" label="" unitLabel="" showNumbers="true"/>
	<axis id="1" label="" unitLabel="" showNumbers="true"/>
</euclidianView>

<kernel>
	<decimals val="2"/>
	<angleUnit val="degree"/>
	<coordStyle val="0"/>
</kernel>
<construction title="Domain and Range of Rational Functions" author="Duke" date="11/11/06">
	<worksheetText above="Find the domain and range for each of the square root functions that follow. Adjust the sliders to transform the general square root function f(x) = a (x - h)1/2 + k. &#10;" below="Journal Entry:&#10;Describe how the values of a, h, and k can be used to find the domain and range of a square root function in the form  f(x) = a (x - h)1/2 + k.      Compare the domain and range of  f(x) = a (x - h)1/2 + k to the domain and range of its parent function  f(x) = x1/2.  Which of the values a, h, or k have a role in determining the domain and range? Why? Use specific examples to support your claims."/>
<element type="numeric" label="a">
	<value val="1.0"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="255" alpha="0.1"/>
	<labelOffset x="9" y="-1"/>
	<labelMode val="1"/>
	<slider min="-10.0" max="10.0" absoluteScreenLocation="true" width="100.0" x="10.0" y="40.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<element type="numeric" label="h">
	<value val="0.0"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="255" alpha="0.1"/>
	<labelOffset x="5" y="-1"/>
	<labelMode val="1"/>
	<slider min="-5.0" max="5.0" absoluteScreenLocation="true" width="100.0" x="13.0" y="84.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<element type="numeric" label="k">
	<value val="0.0"/>
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="255" alpha="0.1"/>
	<labelOffset x="8" y="1"/>
	<labelMode val="1"/>
	<slider min="-5.0" max="5.0" absoluteScreenLocation="true" width="100.0" x="10.0" y="126.0" fixed="true" horizontal="true"/>
	<lineStyle thickness="2" type="0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
</element>
<expression label="f" exp="f(x) = a / (x - h) + k" />
<element type="function" label="f">
	<show object="true" label="false"/>
	<objColor r="0" g="0" b="255" alpha="0.0"/>
	<labelOffset x="10" y="48"/>
	<labelMode val="1"/>
	<breakpoint val="false"/>
	<lineStyle thickness="3" type="0"/>
</element><expression label="b" exp="x = h" />

<element type="line" label="b">
	<show object="true" label="false"/>
	<objColor r="51" g="255" b="0" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="1.0" y="0.0" z="-0.0"/>
	<lineStyle thickness="2" type="30"/>
	<eqnStyle style="implicit"/>
</element>
<expression label="c" exp="y = k" />
<element type="line" label="c">
	<show object="true" label="false"/>
	<objColor r="51" g="255" b="0" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="1.0" z="-0.0"/>
	<lineStyle thickness="2" type="30"/>
	<eqnStyle style="explicit"/>
</element>
<command name="Intersect">
	<input a0="b" a1="xAxis"/>
	<output a0="A"/>
</command>
<element type="point" label="A">
	<show object="true" label="false"/>
	<objColor r="255" g="255" b="255" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="-0.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="4"/>
</element>
<command name="Intersect">
	<input a0="c" a1="yAxis"/>
	<output a0="B"/>
</command>
<element type="point" label="B">
	<show object="true" label="false"/>
	<objColor r="255" g="255" b="255" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="-0.0" y="0.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="4"/>
</element>
<command name="Point">
	<input a0="xAxis"/>
	<output a0="C"/>
</command>
<element type="point" label="C">
	<show object="false" label="true"/>
	<objColor r="125" g="125" b="255" alpha="0.0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="40.0" y="0.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<command name="Point">
	<input a0="yAxis"/>
	<output a0="D"/>
</command>

<element type="point" label="D">
	<show object="false" label="true"/>
	<objColor r="125" g="125" b="255" alpha="0.0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="40.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<command name="Point">
	<input a0="xAxis"/>
	<output a0="E"/>
</command>
<element type="point" label="E">
	<show object="false" label="true"/>
	<objColor r="125" g="125" b="255" alpha="0.0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="-40.0" y="0.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<command name="Point">
	<input a0="yAxis"/>
	<output a0="F"/>
</command>
<element type="point" label="F">
	<show object="false" label="true"/>
	<objColor r="125" g="125" b="255" alpha="0.0"/>
	<animation step="0.1"/>
	<fixed val="false"/>
	<breakpoint val="false"/>
	<coords x="0.0" y="-40.0" z="1.0"/>
	<coordStyle style="cartesian"/>
	<pointSize val="3"/>
</element>
<command name="Ray">
	<input a0="A" a1="C"/>
	<output a0="d"/>
</command>
<element type="ray" label="d">
	<show object="true" label="false"/>
	<objColor r="255" g="0" b="51" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="-0.0" y="40.0" z="0.0"/>
	<lineStyle thickness="4" type="0"/>
	<eqnStyle style="implicit"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Ray">
	<input a0="B" a1="D"/>
	<output a0="e"/>
</command>
<element type="ray" label="e">
	<show object="true" label="false"/>
	<objColor r="255" g="0" b="51" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="-40.0" y="0.0" z="-0.0"/>
	<lineStyle thickness="4" type="0"/>
	<eqnStyle style="implicit"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Ray">
	<input a0="A" a1="E"/>
	<output a0="g"/>
</command>
<element type="ray" label="g">
	<show object="true" label="false"/>
	<objColor r="255" g="0" b="51" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="-0.0" y="-40.0" z="0.0"/>
	<lineStyle thickness="4" type="0"/>
	<eqnStyle style="implicit"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<command name="Ray">
	<input a0="B" a1="F"/>
	<output a0="i"/>
</command>
<element type="ray" label="i">
	<show object="true" label="false"/>
	<objColor r="255" g="0" b="51" alpha="0.0"/>
	<breakpoint val="false"/>
	<coords x="40.0" y="0.0" z="0.0"/>
	<lineStyle thickness="4" type="0"/>
	<eqnStyle style="implicit"/>
	<outlyingIntersections val="false"/>
	<keepTypeOnTransform val="true"/>
</element>
<expression label="T1" exp="&quot;f(x)=\frac{&quot; + a + &quot;}{x-(&quot; + h + &quot;)} +(&quot; + k + &quot;)&quot;" />
<element type="text" label="T1">
	<show object="true" label="true"/>
	<objColor r="0" g="0" b="0" alpha="0.0"/>
	<fixed val="true"/>
	<isLaTeX val="true"/>
	<font serif="false" size="6" style="0"/>
	<breakpoint val="false"/>
	<absoluteScreenLocation  x="431" y="27"/>
</element>


</construction>

</geogebra>

%/geogebra_xml



//Execute this fold to render the LaTeX expression it contains.
%hoteqn
    $2\sum_{i=1}^n a_i \;\int_a^b f_i(x)g_i(x)\,dx$

%/hoteqn



%piper,output="latex"
/*Execute this Piper code and then press <shift><enter> in its output fold
to render the LaTeX expression it generates.
*/
a := (2*x)*(x+3)*(x+4);
b := Expand(a);
Write(b);

%/piper



%piper,output="latex"
/*Execute this Piper code and then press <shift><enter> in its output fold
to render the LaTeX expression it generates.
*/
Clear(x);
a := x^3 - 2*x - 7 == 0;
Write(Solve(a,x));

%/piper



/*HTML demo.  Execute this code by pressing <shift><enter> inside the fold.  
*/
%html
<html>
<title>
MathRider
</title>
<body>
    <h1>Welcome to MathRider</h1>
    
      <TABLE>
        <CAPTION> <h3>Table Data.</h3>  </CAPTION>
        
        <TR> <TH> Column 1 </TH> <TH> Column 2 </TH> <TH> Column 3 </TH> </TR>
        <TR> <TD> 1 </TD> <TD> 3 </TD> <TD> 2 </TD> </TR>
        
        <TR> <TD> 2 </TD> <TD> 4 </TD> <TD> 1 </TD> </TR>
        <TR> <TD> 3 </TD> <TD> 0 </TD> <TD> 8 </TD> </TR>
        
        <TR> <TD> 4 </TD> <TD> 8 </TD> <TD> 7 </TD> </TR>
        <TR> <TD> 5 </TD> <TD> 2 </TD> <TD> 1 </TD> </TR>
    
      </TABLE>
</body>         

</html>

%/html



%beanshell
/*This code demonstrates that any GUI interfaces can be created for use
in a notebook.
*/
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
docker = org.gjt.sp.jedit.jEdit.getActiveView().getDockableWindowManager();
frame = new javax.swing.JFrame();
guiBox = new Box(BoxLayout.Y_AXIS);
messageTextField = new JTextField();
guiBox.add(messageTextField);
button1 = new JButton("Open GeoGebra");
button1.setBackground(Color.green);
button1.addActionListener(this);
guiBox.add(button1);
button2 = new JButton("Close GeoGebra");
button2.setBackground(Color.red);
button2.addActionListener(this);
guiBox.add(button2);
contentPane = frame.getContentPane();
contentPane.add(guiBox,BorderLayout.NORTH);
frame.pack();
frame.setAlwaysOnTop(true);
frame.setTitle("MathRider");
frame.setSize(new Dimension(250, 200));
frame.setResizable(false);
frame.setPreferredSize(new Dimension(250, 200));
frame.setLocationRelativeTo(null); // added
frame.show();

actionPerformed(event)
{
    src = event.getSource();

    if (src == button1)
    {
      messageTextField.setText("GeoGebra opened.");
      docker.showDockableWindow( "geogebra" );
    }
    else if (src == button2)
    {
      messageTextField.setText("GeoGebra closed.");
      docker.hideDockableWindow( "geogebra" );
    }

}

%/beanshell
