// Bean Sheet
// Copyright (C) 2004 Alexey Zinger
// 
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

package zinger.util.recycling;

/**
 * An interface for a simple instance factory.  This is used by <code>ObjectRecycler</code>.
 * @see zinger.util.recycling.ObjectRecycler
 */
public interface ObjectGenerator
{
    /**
     * Creates a new instance.
     */
    public Object newObject();

    /**
     * Prepares the instance for use (reuse) according to the argument passed.
     * Since we can't absolutely be sure that the object being worked on is in valid state or
     * even that it was generated by this instance, we have a chance to refuse to prepare it
     * by returning <code>false</code>.
     * @return <code>true</code> if the preparation succeeded
     * <br><code>false</code> if there is something
     * wrong with the object passed
     * @throws java.lang.IllegalArgumentException if the argument passed for preparation is inappropriate
     */
    public boolean prepareObject(final Object obj, final Object arg) throws IllegalArgumentException;
}
