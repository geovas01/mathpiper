//Run the yacas script that is in the current buffer.

import org.mathrider.jyacasplugin.JYacasInterpreter;
import java.io.File;
import java.io.BufferedWriter;
import org.gjt.sp.jedit.textarea.Selection.Range;
import org.gjt.sp.jedit.textarea.Selection;

buffer.save(view,null);

path = buffer.getPath();


if(path.endsWith(".ys")){
	
	//Remove Windows drive letter from the path.
	if(path.indexOf(":") != -1){
		path = path.split(":")[1];
		
		//Chance window's backslashes to forward slashes.
		path = path.replace("\\","/");
		//System.out.println(path);
	}
		
	runCommandInConsole(view,"JYacas","Load(\""+path+"\");");
	//interpreter=JYacasInterpreter.getInstance();
	

	//result = interpreter.evaluate("Load(\""+path+"\");");
	
	//System.out.println(result);
}else if (path.endsWith(".mrn")){
	textArea.selectFold();
	foldSelection  = textArea.getSelection()[0];
	text = textArea.getSelectedText();
	textArea.setSelection(null);
	
	text = text.substring(3,text.length()-3);
	
	//Do not include subfold as JYacas code.
	subFoldIndex = text.indexOf("{{{");
	if(subFoldIndex != -1)
	{
		text = text.substring(0,subFoldIndex);
	}
	yacasCodeLength = text.length();
	
System.out.println("PPPP " + text);
	
	try {
        // Create temp file.
        File tempFile = File.createTempFile("mathrider", ".mrn_tmp");
    
        // Delete temp file when program exits.
        tempFile.deleteOnExit();
    
        // Write to temp file
        BufferedWriter out = new BufferedWriter(new FileWriter(tempFile));
        out.write(text);
        out.close();
		
		//selection  = textArea.getSelection()[0];
		//start = selection.getStart()+3;
		//end = selection.getEnd()-3;
    	
		interpreter = JYacasInterpreter.getInstance();
		
		result = "";
		try 
		{   
			tempFilePath = tempFile.getAbsolutePath();
			
			//Remove Windows drive letter from the path.
			if(tempFilePath.indexOf(":") != -1){
				tempFilePath = tempFilePath.split(":")[1];
		
				//Change window's backslashes to forward slashes.
				tempFilePath = tempFilePath.replace("\\","/");
			}//end if
		
			//System.out.println(tempFilePath);
			result = interpreter.evaluate("Load(\""+tempFilePath+"\");");
System.out.println("Out> " + result);
				
				
		}catch(net.sf.yacas.Yacasexception ye) 
		{
			result = ye.getMessage();
		}
		
		
		if(result != null){
			//Determine how many lines are in the result.
			numberOfLines = 0;
			charIndex = 0;
			while(charIndex != result.length()){
				if(result.charAt(charIndex) == "\n"){
					numberOfLines++;
				}
				charIndex++;
			}//end while
			//System.out.println(numberOfLines);
			
			
			//Make room at the end of the current fold for output and place output there.
			currentCaretPosition = textArea.getCaretPosition();
			start = foldSelection.getStart();
			end = foldSelection.getEnd();
			//textArea.setCaretPosition(end);
			endOfYacasCode = start + yacasCodeLength;
			
			
			restOfBufferText = textArea.getText(endOfYacasCode,textArea.getBufferLength()-endOfYacasCode);
//System.out.println("PPPPPP " + restOfBufferText);

			
			if(subFoldIndex != -1)
			{
				//If there is a subfold present.
				
				endSubFoldIndex = restOfBufferText.indexOf("}}}")-3;
				
				rangeSelection = new Range(endOfYacasCode,endOfYacasCode + endSubFoldIndex);
			/*
				if(nextFoldOffset == -1)
				{
					//Last cell.
					rangeSelection = new Range(end,textArea.getBufferLength());
				}//end if
				else
				{
					//Between cells.
					rangeSelection = new Range(end,end + nextFoldOffset);
				}//end if/else.
*/		
			}//end if.
			else
			{
				//No subfold present.
				
				rangeSelection = new Range(endOfYacasCode, (end-3));
System.out.println("PPPP " + endOfYacasCode + "    " + (end-3));
			}
			
			textArea.setSelection(rangeSelection);
			
		
void printResult()
{
	void run()
	{
		//System.out.println("PPPP " + buffer.isEditable());
		///textArea.indentSelectedLines();
		result = result.replaceAll("\n","\n      ");
		textArea.setSelectedText("\n\n     {{{\n      " + result + "\n     }}}\n",false);
		
		
			
			
		//textArea.insert("\n" + result + "\n\n",false);   
		textArea.setCaretPosition(currentCaretPosition);
		
		buffer.save(view,null);
	}
	VFSManager.runInAWTThread(this);

}
printResult();
			
			//textArea.setEditable(true);
	
			
			
			
			
			
		}//end if.
		
			
		
    } catch (IOException e) {
		e.printStackTrace();
    }
	

	

}//end else if.
	


// :indentSize=4:lineSeparator=\n:noTabs=false:tabSize=4:folding=explicit:collapseFolds=1:
