%mathpiper,def="SquareFree"

SquareFree(_p) <--
[
  Local(dp,gcd);
//Echo("1...");
  dp:=MakeMultiNomial(`(Differentiate(x)(@p)),{x});
//  dp:=dp/MultiLeadingCoef(dp);

//Echo("2...",dp);
  p:=MakeMultiNomial(p,{x});
//Echo(NormalForm(p));
//Echo(NormalForm(dp));
  gcd:=MultiGcd(p,dp);
//Echo(NormalForm(gcd));
//Echo(NormalForm(MultiDivide(p,{gcd})[1][1]));
  NormalForm(MultiDivide(p,{gcd})[1][1]);
//  Quotient(p,Gcd(p,Monic(`(Differentiate(x)(@p)))));
];

%/mathpiper



%mathpiper_docs,name="SquareFree",categories="User Functions;Polynomials (Operations)"
*CMD SquareFree --- return the square-free part of polynomial
*STD
*CALL
	SquareFree(p)

*PARMS

{p} - a polynomial in {x}

*DESC

Given a polynomial 
$$ p = p[1]^n[1]* ... * p[m]^n[m] $$
with irreducible polynomials $ p[i] $,
return the square-free version part (with all the factors having
multiplicity 1):
$$ p[1]* ... * p[m] $$

*E.G.

	In> Expand((x+1)^5)
	Result: x^5+5*x^4+10*x^3+10*x^2+5*x+1;
	In> SquareFree(%)
	Result: (x+1)/5;
	In> Monic(%)
	Result: x+1;

*SEE FindRealRoots, RealRootsCount, MinimumBound, MaximumBound, Factor
%/mathpiper_docs