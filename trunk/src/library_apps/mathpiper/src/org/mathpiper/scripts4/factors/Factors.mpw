%mathpiper,def="Factors"

/*------------------------------------------------------------------------
 *    Started 091222
 *    revised 100108-22
 *    revised 100215
 *    major refactoring 100425
 *    convert polynomial factoring to use JAS library  100511
 *    Another major refactoring -- 100529
 *    Ready for initial commit     100610
 *------------------------------------------------------------------------*/

Retract("Factors",*);


/* --------------    LISTS    ---------------*/

10 # Factors( L_IsList ) <-- nFactors /@ L;


/* -------------    NUMBERS    --------------*/


10 # Factors(p_IsPositiveInteger) <--  
[
    If( p < 1600, FactorsSmallInteger(p), FactorizeInt(p) );
];


15 # Factors(p_IsNegativeInteger) <-- Factors(-p);


20 # Factors(p_IsRational)_(Denominator(p) != 1) <-- 
             { {jFactor(Numerator(p)) / jFactor(Denominator(p) ) , 1} }; 
             

25 # Factors(p_IsGaussianInteger)	<-- GaussianFactors(p);


30 # Factors(_p)_(Length(VarList(p))=0) <-- {{p,1}};


50 # Factors( p_CanBeUni ) <-- jFactorsPoly(p);

100 # Factors( _p ) <--
[
    Tell("Factors__Fall-Through_cases",p);
];

%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output





%mathpiper_docs,name="Factors",categories="User Functions;Number Theory"
*CMD Factors --- factorization
*STD
*CALL
	Factors(x)

*PARMS

{x} -- integer or univariate polynomial

*DESC

This function decomposes the integer number {x} into a product of
numbers. 
Alternatively, if {x} is a univariate polynomial, it is
decomposed into irreducible polynomials.  If {x} is a polynomial
"over the integers", the irreducible polynomial factors will also
be returned in the (unique) form with integer coefficients.

The factorization is returned as a list of pairs. The first member of
each pair is the factor, while the second member denotes the power to
which this factor should be raised. So the factorization
$x = p1^n1 * ... * p9^n9$
is returned as {{{p1,n1}, ..., {p9,n9}}}.

Programmer: Yacas Team + Sherm Ostrowsky

*E.G.
    In> Factors(24)
    Result: {{2,3},{3,1}}
    
    In> Factors(32*x^3+32*x^2-70*x-75)
    Result: {{4*x+5,2},{2*x-3,1}}

*SEE Factor, IsPrime, GaussianFactors
%/mathpiper_docs

    %output,preserve="false"
      
.   %/output


