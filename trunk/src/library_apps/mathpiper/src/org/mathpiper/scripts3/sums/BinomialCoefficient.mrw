%mathpiper,def="BinomialCoefficient;Combinations"

/* Binomials -- now using partial factorial for speed */
// BinomialCoefficient(n,m) = BinomialCoefficient(n, n-m)
10 # BinomialCoefficient(0,0) 		<-- 1;
10 # BinomialCoefficient(n_IsPositiveInteger,m_IsNonNegativeInteger)_(2*m <= n) <-- ((n-m+1) *** n) / m!;
15 # BinomialCoefficient(n_IsPositiveInteger,m_IsNonNegativeInteger)_(2*m > n And m <= n) <-- BinomialCoefficient(n, n-m);
20 # BinomialCoefficient(n_IsInteger,m_IsInteger) <-- 0;

Combinations(n,m) := BinomialCoefficient(n,m);

%/mathpiper



%mathpiper_docs,name="BinomialCoefficient;Combinations",categories="User Functions;Combinatorics"
*CMD BinomialCoefficient/Combinations --- binomial coefficient/combinations
*STD
*CALL
	BinomialCoefficient(n, m)
        Combinations(n, m)

*PARMS

{n}, {m} -- integers

*DESC

These functions are actually two names for a single function.

In mathematics the function is called the binomial coefficient function
and it is thought of as the coefficient of the x^m term in the polynomial expansion
of the binomial power (1 + x)^n.

The binomial coefficient is defined to be zero
if "m" is negative or greater than "n"; {BinomialCoefficient(0,0)}=1.



In combinatorics, the function is thought of as being the number of ways
to choose "m" objects out of a total of "n" objects if order is
not taken into account. 

*E.G.

	In> BinomialCoefficient(10, 4)
	Out> 210;

        In> Combinations(10, 4)
	Out> 210;;

*SEE !, Eulerian
%/mathpiper_docs