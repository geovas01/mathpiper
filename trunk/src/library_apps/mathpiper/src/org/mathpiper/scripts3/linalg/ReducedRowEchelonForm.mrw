%mathpiper,def="ReducedRowEchelonForm"

Retract("ReducedRowEchelonForm",*);

10 # ReducedRowEchelonForm( am_IsMatrix ) <--
[
    If(InVerboseMode(),Tell("Reduced Row Echelon Form",am));
    Local(r,c,eps,ii,jj,e,pivot,scalar,singular);
    singular := False;
    {r,c} := Dimensions(am);
    LHS := ExtractSubMatrix(am,1,1,r,r);
    eps := N(Abs(InfinityNorm(LHS))*10^(-BuiltinPrecisionGet()));     //  somewhat arbitrary!
    If(InVerboseMode(),
      [
        Tell("  ",{r,c});
        Tell("  ",Determinant(LHS));
        Tell("  ",InfinityNorm(LHS));
        Tell("   ",eps);
      ]
    );
    
    //   L O W E R    T R I A N G L E
    If(InVerboseMode(),
      [
        NewLine();
        Tell("LOWER TRIANGLE");
        Tell("   range_r",1 ..r);
        Tell("   range_c",1 ..c);
        NewLine();
      ]
    );
    ForEach(ii,1 .. r)
    [
        If(InVerboseMode(),Echo("  Row ",ii," is ",am[ii]));
        ForEach(jj,1 .. c)
        [
            e := am[ii][jj];
            If(ii=jj And e!=1,
                [
                    pivot := e;
                    If( Abs(pivot)<eps, 
                       [
                          singular:=True;
                          Break();
                       ]
                    );
                    am[ii] := am[ii]/pivot;
                    If(InVerboseMode(),
                      [
                        Echo("  Row ",ii," gets normalized to ",am[ii]);
                        NewLine();
                      ]
                    );
                ],
                [
                    If(ii>jj And Abs(e)>eps,
                        [
                            scalar := e;
                            If(InVerboseMode(),
                              [
                                Echo("  Row ",jj," is ",am[jj]);
                                Echo("  Subtracting ",scalar," times Row ",jj," from Row ",ii);
                              ]
                            );
                            am[ii] := am[ii] - scalar * am[jj];
                            If(InVerboseMode(),
                              [
                                Echo("  Row ",ii," goes to ",am[ii]);
                                NewLine();
                              ]
                            );
                        ]
                    );
                ]
            );
        ];
    ];
    //TableForm(am);
    
    If( Not singular,
      [
        //   U P P E R    T R I A N G L E
        If(InVerboseMode(),
          [
            NewLine();
            Tell("UPPER TRIANGLE");
            Tell("   range_r",Reverse(1 ..r));
            Tell("   range_c",Reverse(1 ..c));
            NewLine();
          ]
        );
        ForEach(ii,Reverse(1 .. r))
        [
            If(InVerboseMode(),Echo("  Row ",ii," is ",am[ii]));
            ForEach(jj,Reverse(1 .. c))
            [
                e := am[ii][jj];
                If(ii<jj And jj<=r And Abs(e)>eps,
                    [
                        scalar := e;
                        If(InVerboseMode(),
                          [
                            Echo("  Row ",jj," is ",am[jj]);
                            Echo("  Subtracting ",scalar," times Row ",jj," from Row ",ii);
                          ]
                        );
                        am[ii] := am[ii] - scalar * am[jj];
                        If(InVerboseMode(),
                          [
                            Echo("  Row ",ii," goes to ",am[ii]);  
                            NewLine();
                          ]
                        );
                    ]
                );
            ];
        ];
        //TableForm(am);
      ]
    );
    am;
];

%/mathpiper






%mathpiper_docs,name="ReducedRowEchelonForm",categories="User Functions;Linear Algebra"
*CMD ReducedRowEchelonForm --- convert a system of equations to reduced row echelon form
*STD
*CALL
	ReducedRowEchelonForm(AugmentedMatrix)

*PARMS

{AugmentedMatrix} -- Augmented matrix describing the system of equations


*DESC

{ReducedRowEchelonForm} solves a system of linear equations by using the Gauss-Jordan
elimination method with partial pivoting, to convert the augmented matrix to the
(unique) reduced row echelon form.  
The original matrix is modified in place.

If the system of equations has a unique solution, this function returns a matrix in
a form like
[   1  0  0  a]
[   0  1  0  b]
[   0  0  1  c]
where the diagonal form of the left submatrix indicates that the solution is unique
and has been found, and the right-hand column is the vector of solutions.

If the system of equations has {no} solution, this function returns a matrix in
a form like
[  1  0  0  a]
[  0  1  0  b]
[  0  0  0  c]
where the presence of a row like {0 0 0 c} at the bottom indicates that the system is
inconsistent and has no solution (0==c).

If the system of equations is {dependent} and has a family of valid solutions, this
function returns a matrix in a form like
[  1  0  q  a]
[  0  1  0  b]
[  0  0  0  0]
where the presence of a row (or several rows) of all zeros at the bottom indicates
that the corresponding variables appear as parameters describing a family of solutions
for the remaining variables.


*E.G.

    In> AM := {{2,-3,2,3},{4,8,1,2},{1,7,-3,-14}};
    Result: {{2,-3,2,3},{4,8,1,2},{1,7,-3,-14}}
    
    In> ReducedRowEchelonForm(AM)
    Result: {{1,0,0,-3},{0,1,0,1},{0,0,1,6}}
    
    NOTE:  This is fully solved.  The solution is
           {{x==-3},{y==1},{z==6}}
           
    In> AM := {{2,-1,3},{6,-3,9}};
    Result: {{2,-1,3},{6,-3,9}}
    
    In> ReducedRowEchelonForm(AM)
    Result: {{1,(-1)/2,3/2},{0,0,0}}
    
    NOTE:  This is a "dependent" set of equations.
           The presence of a row of zeros at the bottom of the result
           shows that the solution is
           {{x==x},{y==2*x-3}} for any real x.
           
    In> AM := {{2,-4,6,5},{-1,3,-2,-1},{1,-2,3,1}};
    Result: {{2,-4,6,5},{-1,3,-2,-1},{1,-2,3,1}}
    
    In> ReducedRowEchelonForm(AM)
    Result: {{1,-2,3,5/2},{0,1,1,3/2},{0,0,0,(-3)/2}}
    
    NOTE:  This is an "inconsistent" set of equations.
           The last row, which states that 0==-3/2, shows
           that there is no solution.
%/mathpiper_docs

    %output,preserve="false"
      
.   %/output

