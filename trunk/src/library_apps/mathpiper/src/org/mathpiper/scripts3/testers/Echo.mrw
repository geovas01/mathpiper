%mathpiper,def="Echo"

10 # EchoInternal(string_IsString) <--
[
  WriteString(string);
];

20 # EchoInternal(_item) <--
[
  Write(item);Space();
];

RuleBaseListed("Echo",{args});
10 # Echo(list_IsList)<--
[
  ForEach(item,list) EchoInternal(item);
  NewLine();
];
20 # Echo(_item)<--
[
  EchoInternal(item);
  NewLine();
];

%/mathpiper



%mathpiper_docs,name="Echo",categories="User Functions;Input/Output"
*CMD Echo --- high-level printing routine
*STD
*CALL
	Echo(item)
	Echo(list)
	Echo(item,item,item,...)

*PARMS

{item} -- the item to be printed

{list} -- a list of items to be printed

*DESC

If passed a single item, {Echo} will evaluate it and print it to the
current output, followed by a newline. If {item} is a string, it is
printed without quotation marks.

If there is one argument, and it is a list, {Echo} will print all the
entries in the list subsequently to the current output, followed by a
newline. Any strings in the list are printed without quotation
marks. All other entries are followed by a space.

{Echo} can be called with a variable number of arguments, they will all
be printed, followed by a newline.

{Echo} always returns {True}.

*E.G. notest

	In> Echo(5+3);
	 8
	Out> True;
	In> Echo({"The square of two is ", 2*2});
	The square of two is 4
	Out> True;
	In> Echo("The square of two is ", 2*2);
	The square of two is 4 
	Out> True;

Note that one must use the second calling format if one wishes to
print a list:

	In> Echo({a,b,c});
	a b c
	Out> True;
	In> Echo({{a,b,c}});
	{a,b,c}
	Out> True;

*SEE PrettyForm, Write, WriteString, RuleBaseListed
%/mathpiper_docs