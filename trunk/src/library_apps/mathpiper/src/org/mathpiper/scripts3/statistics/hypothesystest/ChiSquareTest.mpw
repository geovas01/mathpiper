%mathpiper,def="ChiSquareTest"


/* ChiSquare's CDF is computed as IncompleteGamma(x,dof/2)/Gamma(dof/2); */


ChiSquareTest( observedFrequenciesList, expectedFrequenciesList) :=
[
    Check(IsList(observedFrequenciesList) And Length(observedFrequenciesList) > 0, "The first argument must be a nonempty list.");
    
    Check(IsList(expectedFrequenciesList) And Length(expectedFrequenciesList) > 0, "The second argument must be a nonempty list.");

    Local( numerator, chi2, pValue, categoriesCount, degreesOfFreedom, resultList);
   
    resultList := {};

    categoriesCount := Length(observedFrequenciesList);

    numerator := (observedFrequenciesList - expectedFrequenciesList)^2; //threading

    chi2 := Sum(i,1,categoriesCount,numerator[i]/(expectedFrequenciesList[i]));

    degreesOfFreedom := categoriesCount - 1;

    pValue := 1-N(IncompleteGamma(degreesOfFreedom/2,chi2/2)/Gamma(degreesOfFreedom/2));
   
    resultList["chiSquareScore"] := chi2;
   
    resultList["pValue"] := pValue;
    
    N(resultList);
];



%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output



%mathpiper_docs,name="ChiSquareTest",categories="User Functions;Statistics & Probability"
*CMD ChiSquareTest --- Pearson's ChiSquare test
*STD

*CALL
	ChiSquareTest(observed,expected)

*PARMS
{observed} -- list of observed frequencies

{expected} -- list of expected frequencies

*DESC
{ChiSquareTest} is intended to determine if a sample was drawn from a
given distribution or not. To find this out, one has to calculate
observed frequencies into certain intervals and expected ones.

*E.G.
/%mathpiper,title=""

observedList := {145,128,73,32,22};

expectedList := {160,120,80,20,20};

a := ChiSquareTest(observedList, expectedList);

TableForm(a);

/%/mathpiper

    /%output,preserve="false"
      Result: True
      
      Side Effects:
      {"pValue",0.0412426135}
      {"chiSquareScore",9.952083333}
      
.   /%/output


*SEE AlphaToChiSquareScore, ChiSquareScoreToAlpha
%/mathpiper_docs

    %output,preserve="false"
      
.   %/output

