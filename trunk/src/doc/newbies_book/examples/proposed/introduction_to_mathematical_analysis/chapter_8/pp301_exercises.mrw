%group,description="exercises 1 and 2"
//Exercise 1 and Exercise 2 (skipping 2d for now)..

%geogebra
a:x^2/169+y^2/25 = 1
b:x^2/4+y^2/(25/4)=1
c:25*x^2+9*y^2=900
d:4*x^2+25*y^2=100
e:4*x^2+y^2=1
f:16*x^2+25*y^2=1


%/geogebra

    %output,preserve="false"
      GeoGebra updated.
.   %/output




%mathpiper

Function("IsRationalNumeric",{aLeft})
    Type(aLeft) = "/" And
    IsNumber(aLeft[1]) And
    IsNumber(aLeft[2]);

EllipseGetAxes(expr) :=
[
    
    Local(a,b);
    Local(coef,coefInverted,denom);
    
    coef := LeadingCoef(EquLeft(expr),x);
    
    if(Denom(coef) = 1)
        [coefInverted := 1/coef; denom := coefInverted;]
    else if(IsRationalNumeric(coef))
        [ denom := 1/coef; ]
    else
       [ denom := Denom(coef);];
    a := denom;
    
    
    coef := LeadingCoef(EquLeft(expr),y);
    
    if(Denom(coef) = 1)
        [coefInverted := 1/coef; denom := coefInverted;]
    else if(IsRationalNumeric(coef))
        [ denom := 1/coef; ]
    else
       [ denom := Denom(coef);];
    b := denom;
    
    {Sqrt(a),Sqrt(b)};

];

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");

a:=x^2/169+y^2/25 == 1;
b:=x^2/4+y^2/(25/4)==1;
c:=25*x^2+9*y^2==900;
d:=4*x^2+25*y^2==100;
e:=4*x^2+y^2==1;
f:=16*x^2+25*y^2==1;


ForEach(equ,{a,b,c,d,e,f})
[   
    eq := equ; //Note:tk:Workaround for HasFunc bug (which is reported in the development notes).
    equ2 := Manipulate(eq/EquRight(eq));  
    //Echo(equ,equ2);
    axes := EllipseGetAxes(equ2);
    
    If(axes[1] > axes[2], foci := Sqrt(axes[1]^2 - axes[2]^2), foci := Sqrt(axes[2]^2 - axes[1]^2));
    
    
    If(axes[1] > axes[2], eccentricity := foci / axes[1], eccentricity := foci / axes[2]);
    
    //Note:this code needs more work to properly calculate the latera recta for different orientations of the ellipses.
    f(x) := Eval(EquRight(Solve(eq,y)[1]));
    latusRectum := f(foci) * 2;
    
    //Exercise 4 calculations.
    pinSeparation := 2 * foci;
    stringLength := If(axes[1] > axes[2], 2*axes[1], 2*axes[2]);
    stringLoopLength := pinSeparation + stringLength;
    
    Echo("Axes: ",axes,
    "  Foci: ",N(foci),
    "  Eccentricity: ", (eccentricity),
    "  Latus Rectum: ", latusRectum,
    "  Pin Separation: ",pinSeparation,
    "  String Length: ",stringLength,
    "  String Loop Length: ",stringLoopLength);
];


%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Axes: {13,5}   Foci: 12   Eccentricity: 12/13   Latus Rectum: 50/13   Pin Separation: 24   String Length: 26   String Loop Length: 50 
      Axes: {2,5/2}   Foci: 1.5   Eccentricity: 3/5   Latus Rectum: Sqrt(175/16)   Pin Separation: 3   String Length: 5   String Loop Length: 8 
      Axes: {6,10}   Foci: 8   Eccentricity: 4/5   Latus Rectum: Complex(0,Sqrt(2800/9))   Pin Separation: 16   String Length: 20   String Loop Length: 36 
      Axes: {5,2}   Foci: 4.582575695   Eccentricity: Sqrt(21/25)   Latus Rectum: 8/5   Pin Separation: Sqrt(84)   String Length: 10   String Loop Length: Sqrt(84)+10 
      Axes: {1/2,1}   Foci: 0.86602540378   Eccentricity: Sqrt(3/4)   Latus Rectum: Complex(0,Sqrt(8))   Pin Separation: Sqrt(3)   String Length: 2   String Loop Length: Sqrt(3)+2 
      Axes: {1/4,1/5}   Foci: 0.15   Eccentricity: 3/5   Latus Rectum: 8/25   Pin Separation: 3/10   String Length: 1/2   String Loop Length: 4/5
.   %/output


%/group




%group,description="exercise 3"
//Exercise 3.


%mathpiper

a := (11/2);
b := (5/2);
answerA := x^2/a^2 + y^2/b^2 == 1;



a := (2/2);
b := (9/2);
answerB := x^2/a^2 + y^2/b^2 == 1;



a := 26/2;
b := 2*Sqrt(a^2 - 5^2);

answerC := x^2/a^2 + y^2/b^2 == 1;



a := 48/2;
b := 2*Sqrt(a^2 - 7^2);

answerD := x^2/a^2 + y^2/b^2 == 1;

Echo(answerA, answerB, answerC, answerD);

//Note: the answer book may have an error in it for C or D.
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      (4*x^2)/121+(4*y^2)/25==1 x^2+(4*y^2)/81==1 x^2/169+y^2/576==1 x^2/576+y^2/2108==1
.   %/output


%/group




%group,description="exercise 4"
//Exercise 4 (See exercise 1).

%/group




%group,description="exercise 5"
//Exercise 5.

%mathpiper
Clear(a,b,c,d,e,f,g,x,y);

a := 40/2;
c := 24/2;
b := Sqrt(a^2 - c^2);

x^2/a^2 + y^2/b^2 ==1;

%/mathpiper

    %output,preserve="false"
      Result: x^2/400+y^2/256==1
.   %/output

%/group




%group,description="exercise 6"

%mathpiper
Clear(a,b,c,d,e,f,g,x,y);

a := (28-8)/2;
c := 8/2;
b := Sqrt(a^2 - c^2);

{a,b,x^2/a^2 + y^2/b^2 ==1};

%/mathpiper

    %output,preserve="false"
      Result: {10,Sqrt(84),x^2/100+y^2/84==1}
.   %/output

%/group




%group,description="exercise 7"

%mathpiper
b := 16;
a := 20;
c := Sqrt(a^2 - b^2);

equ := x^2/a^2 + y^2/b^2 ==1;
Echo("Equation: ",equ);

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");

f(x) := N(Eval(EquRight(Solve(equ,y)[1])));

Echo("Heights: ", f(9), f(16), f(10) );


%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Equation: x^2/400+y^2/256==1 
      Heights: 14.28845688 9.6 13.85640646
.   %/output


%/group




%group,description="exercise 8"

%mathpiper
b := 18-12;
a := 10;
c := Sqrt(a^2 - b^2);

equ := x^2/a^2 + y^2/b^2 ==1;
Echo("Equation: ",equ);

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");

f(x) := N(Eval(EquRight(Solve(equ,y)[1])));

Echo("Height: ", f(a-4)+12 );


%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Equation: x^2/100+y^2/36==1 
      Height: 16.80000000
.   %/output


%/group




%group,description="exercise 9"

%mathpiper
b := 15;
a := 50/2;
c := Sqrt(a^2 - b^2);

equ := x^2/a^2 + y^2/b^2 ==1;
Echo("Equation: ",equ);

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");

f(x) := N(Eval(EquRight(Solve(equ,y)[1])));

heightInMiddle := f(0)+5;

Echo("Heights: ", heightInMiddle - f(15), heightInMiddle - f(20));


%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Equation: x^2/625+y^2/225==1 
      Heights: 8.00000000 11.00000000
.   %/output


%/group




%group,description="exercise 10"

%mathpiper
b := 37.8;
a := 152/2;
c := Sqrt(a^2 - b^2);

equ := x^2/a^2 + y^2/b^2 ==1;
Echo("Equation: ",equ);



%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      Equation: x^2/5776+y^2/1428.84==1
.   %/output


%/group




%group,description="exercises 11 and 12."


%geogebra
a:9x^2 + 25y^2=225
b:x=4
c:x=-4

%/geogebra

    %output,preserve="false"
      GeoGebra updated.
.   %/output




%mathpiper
Use("org/mathpiper/scripts/proposed.rep/equations.mpi");

f(x) := N(EquRight(Solve(9*x^2 + 25*y^2==225,y)[1]));

a(x) := 
[
    //Local(height, width, area);
    height := f(x)*2;
    width := x*2;
    area := width * height;
];

Echo(a(4), a(3), a(2), a(4.5));

h(x) := f(x)*2*x*2;

Echo(h(x),,, h(4) );


//Exercise 12.

dx := D(x) (2*x*2*Sqrt(-100*(9*x^2-225)))/50;

maxX := EquRight(N(Solve(dx==0,x))[1]);

maxArea := a(maxX);

Echo("Exercise 12: ", maxArea);

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      28.80000000 28.8 21.99636333 23.53805429 
      (2*x*2*Sqrt(-100*(9*x^2-225)))/50 , 28.80000000 
      Exercise 12: 30.00000001
.   %/output


%/group




%group,description="exercise 13"
//Skipping showing centers and foci.


%geogebra

a:25x^2+16y^2=1600
b:x^2+32y=0
c:4x^2+9y^2=144
d:4x+9y^2=0
e:2x^2+2y^2=49
f:x^2+y^2=8x

%/geogebra

    %output,preserve="false"
      GeoGebra updated.
.   %/output

%/group




%group,description="exercise 14"


%mathpiper
a := 186000000/2;
c := 3000000/2;
b := N(Sqrt(a^2 - c^2));
minorAxis := b*2;
%/mathpiper

    %output,preserve="false"
      Result: 185975804.9
.   %/output

%/group




%group,description="exercise 15"


%mathpiper

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");

Clear(x,y);
P := Point(x,y);
equ := Distance(P,Point(-32,0)) == 4/5*Distance(P,Point(-50,y));

//Solve would not solve the version of this equation which had square roots so I removed them by squaring.
Echo(Manipulate(equ^2));

Solve(equ,y);

%/mathpiper

    %output,preserve="false"
      Result: {}
      
      Side effects:
      x^2+64*x+y^2+1024==(16*x^2)/25+64*x+1600
.   %/output


%/group




%group,description="exercise 16"

%mathpiper,output="geogebra"

Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");

Clear(x,y);
P := Point(x,y);
cirEqu := x^2 + y^2/(1/2) ==10;



%/mathpiper

    %geogebra,preserve="false"
      Result: x^2+2*y^2=10
.   %/geogebra

        %output,preserve="false"
          GeoGebra updated.
.       %/output

/group


