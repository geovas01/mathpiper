{"Abs","Absolute value (or modulus) of a number.","Alphabetical","Calculus Related (Symbolic)","Built In"},
{"AbsN","","Alphabetical","Numeric","Built In"},
{"Add","Find the sum of a list of values.","Alphabetical","Series","Built In"},
{"AddN","","Alphabetical","Numeric","Built In"},
{"AddTo","Add an equation to a set of equations or set of set of equations.","Alphabetical","Functional Operators"},
{"And","Logical conjunction.","Alphabetical","Predicates","Built In"},
{"AndN","","Alphabetical","Numeric"},
{"Append","Append an entry at the end of a list.","Alphabetical","Lists (Operations)"},
{"Apply","Apply a function to arguments.","Alphabetical","Control Flow"},
{"ArcCos","Inverse trigonometric function arc-cosine.","Alphabetical","Calculus Related (Symbolic)"},
{"ArcCosN","","Alphabetical","Numeric"},
{"ArcCoshN","","Alphabetical","Numeric"},
{"ArcSin","Inverse trigonometric function arc-sine.","Alphabetical","Calculus Related (Symbolic)"},
{"ArcSinN","","Alphabetical","Numeric"},
{"ArcSinhN","","Alphabetical","Numeric"},
{"ArcTan","Inverse trigonometric function arc-tangent.","Alphabetical","Calculus Related (Symbolic)"},
{"ArcTanN","","Alphabetical","Numeric"},
{"ArcTanhN","","Alphabetical","Numeric"},
{"Arg","Argument of a complex number.","Alphabetical","Numbers (Complex)"},
{"ArrayCreate","","Alphabetical","Built In"},
{"ArrayCreateFromList","","Alphabetical"},
{"ArrayGet","","Alphabetical","Built In"},
{"ArraySet","","Alphabetical","Built In"},
{"ArraySize","","Alphabetical","Built In"},
{"ArrayToList","","Alphabetical"},
{"Assert","","Alphabetical"},
{"Assoc","Return an element stored in an association list.","Alphabetical","Lists (Operations)"},
{"AssocDelete","Delete an entry in an association list.","Alphabetical","Lists (Operations)"},
{"AssocIndices","Return the keys in an association list.","Alphabetical","Lists (Operations)"},
{"Atom","Convert string to atom.","Alphabetical","String Manipulation","Built In"},
{"BaseVector","Base vector.","Alphabetical","Linear Algebra"},
{"Bernoulli","Bernoulli numbers and polynomials","Alphabetical","Special"},
{"BernoulliDistribution","Bernoulli distribution.","Alphabetical","Probability & Statistics"},
{"BigOh","Drop all terms of a certain order in a polynomial.","Alphabetical","Series"},
{"Bin","Binomial coefficients.","Alphabetical","Combinatorics"},
{"BinomialDistribution","Binomial distribution.","Alphabetical","Probability & Statistics"},
{"BinSplitData","","Alphabetical"},
{"BinSplitFinal","","Alphabetical"},
{"BinSplitNum","","Alphabetical"},
{"BitAnd","","Alphabetical","Built In"},
{"BitOr","","Alphabetical","Built In"},
{"BitXor","","Alphabetical","Built In"},
{"Bodied","","Alphabetical","Built In"},
{"BracketRational","","Alphabetical"},
{"BubbleSort","Sort a list.","Alphabetical","Lists (Operations)"},
{"BuiltinPrecisionGet","","Alphabetical"},
{"BuiltinPrecisionSet","","Alphabetical","Built In"},
{"CachedConstant","","Alphabetical"},
{"CanProve","Try to prove a statement.","Alphabetical","Propositional Logic"},
{"Catalan","Catalan's Constant.","Alphabetical","Constants (Mathematical)"},
{"CatalanNumber","Teturn the nth Catalan Number.","Alphabetical","Number Theory"},
{"Ceil","Round a number upwards.","Alphabetical","Numbers (Operations)","Built In"},
{"CeilN","","Alphabetical","Numeric","Built In"},
{"CForm","Export an expression to C++ code form.","Alphabetical","Input/Output"},
{"CharacteristicEquation","Return the characteristic polynomial of a matrix.","Alphabetical","Linear Algebra"},
{"Check","","Alphabetical","Built In"},
{"ChiSquareTest","Pearson's ChiSquare test.","Alphabetical","Probability & Statistics"},
{"Cholesky","Find the Cholesky Decomposition of a matrix.","Alphabetical","Linear Algebra"},
{"Clear","Unassign a variable.","Alphabetical","Variables","Built In"},
{"ClearError","","Alphabetical"},
{"ClearErrors","","Alphabetical"},
{"Coef","Return the coefficient of a polynomial.","Alphabetical","Polynomials (Operations)"},
{"CoFactor","Return the cofactor of a matrix.","Alphabetical","Linear Algebra"},
{"Complex","Construct a complex number.","Alphabetical","Numbers (Complex)"},
{"Concat","Concatenate lists.","Alphabetical","Lists (Operations)","Built In"},
{"ConcatStrings","Concatenate strings.","Alphabetical","String Manipulation","Built In"},
{"Conjugate","Complex conjugate.","Alphabetical","Numbers (Complex)"},
{"Contains","Test whether a list contains a certain element.","Alphabetical","Lists (Operations)"},
{"Content","Return the content of a univariate polynomial.","Alphabetical","Polynomials (Operations)"},
{"ContFrac","Continued fraction expansion.","Alphabetical","Numbers (Operations)"},
{"ContFracEval","","Alphabetical"},
{"ContFracList","","Alphabetical"},
{"Cos","Trigonometric cosine function.","Alphabetical","Calculus Related (Symbolic)"},
{"CosN","","Alphabetical","Numeric"},
{"CoshN","","Alphabetical","Numeric"},
{"Count","Count the number of occurrences of an expression.","Alphabetical","Lists (Operations)"},
{"CrossProduct","Outer product of vectors.","Alphabetical","Linear Algebra"},
{"Curl","Curl of a vector field.","Alphabetical","Calculus Related (Symbolic)"},
{"CurrentFile","","Alphabetical","Built In"},
{"CurrentLine","","Alphabetical","Built In"},
{"Cyclotomic","Construct the cyclotomic polynomial.","Alphabetical","Number Theory"},
{"D","Take derivative of an expression with respect to a variable.","Alphabetical","Calculus Related (Symbolic)"},
{"Decimal","Decimal representation of a rational.","Alphabetical","Numbers (Operations)"},
{"DefaultTokenizer","Select the default syntax tokenizer for parsing the input.","Alphabetical","Input/Output","Built In"},
{"DefLoad","Load a .def file.","Alphabetical","Input/Output","Built In"},
{"DefMacroRuleBase","","Alphabetical","Built In"},
{"DefMacroRuleBaseListed","","Alphabetical","Built In"},
{"Degree","Return the degree of a polynomial.","Alphabetical","Polynomials (Operations)"},
{"Delete","Delete an element from a list.","Alphabetical","Lists (Operations)","Built In"},
{"Denom","Denominator of an expression","Alphabetical","Numbers (Operations)"},
{"DestructiveAppend","Destructively append an entry to a list.","Alphabetical","Lists (Operations)"},
{"DestructiveDelete","Delete an element destructively from a list.","Alphabetical","Lists (Operations)","Built In"},
{"DestructiveInsert","Insert an element destructively into a list.","Alphabetical","Lists (Operations)","Built In"},
{"DestructiveReplace","Replace an entry destructively in a list.","Alphabetical","Lists (Operations)","Built In"},
{"DestructiveReverse","Reverse a list destructively.","Alphabetical","Lists (Operations)","Built In"},
{"Determinant","Return the determinant of a matrix.","Alphabetical","Linear Algebra"},
{"Diagonal","Extract the diagonal from a matrix.","Alphabetical","Linear Algebra"},
{"DiagonalMatrix","Construct a diagonal matrix.","Alphabetical","Linear Algebra"},
{"Difference","Return the difference of two lists.","Alphabetical","Lists (Operations)"},
{"Div","Determine divisor of two mathematical objects.","Alphabetical","Numbers (Operations)","Built In"},
{"DivN","","Alphabetical","Numeric","Built In"},
{"DivideN","","Alphabetical","Numeric","Built In"},
{"Diverge","Divergence of a vector field.","Alphabetical","Calculus Related (Symbolic)"},
{"Divisors","Number of divisors.","Alphabetical","Number Theory"},
{"DivisorsList","The list of divisors.","Alphabetical","Number Theory"},
{"DivisorsSum","The sum of divisors.","Alphabetical","Number Theory"},
{"Dot","Return the dot product of tensors","Alphabetical","Linear Algebra"},
{"Drop","Drop a range of elements from a list.","Alphabetical","Lists (Operations)"},
{"DumpErrors","","Alphabetical"},
{"Echo","High-level printing routine.","Alphabetical","Input/Output"},
{"EigenValues","Return the eigenvalues of a matrix.","Alphabetical","Linear Algebra"},
{"EigenVectors","Return the eigenvectors of a matrix.","Alphabetical","Linear Algebra"},
{"Eliminate","Substitute and simplify.","Alphabetical","Solvers (Symbolic)"},
{"EndOfFile","End-of-file marker","Alphabetical","Constants (System)"},
{"Equals","","Alphabetical","Built In"},
{"Euler","Euler numbers and polynomials.","Alphabetical","Special"},
{"Eulerian","Eulerian numbers.","Alphabetical","Combinatorics"},
{"Eval","Force evaluation of an expression.","Alphabetical","Control Flow","Built In"},
{"EvalFormula","Print an evaluation nicely with ASCII art.","Alphabetical","Input/Output"},
{"EvaluateHornerScheme","Fast evaluation of polynomials.","Alphabetical","Polynomials (Operations)"},
{"Exp","Exponential function.","Alphabetical","Calculus Related (Symbolic)"},
{"ExpN","","Alphabetical","Numeric"},
{"Expand","Transform a polynomial to an expanded form.","Alphabetical","Polynomials (Operations)"},
{"ExpandBrackets","Expand all brackets.","Alphabetical","Polynomials (Operations)"},
{"ExtraInfoGet","","Alphabetical"},
{"ExtraInfoSet","","Alphabetical","Built In"},
{"Factor","Factorization, in pretty form.","Alphabetical","Number Theory"},
{"FactorialSimplify","Simplify hypergeometric expressions containing factorials.","Alphabetical","Expression Simplification"},
{"Factorize","Find the product of a list of values.","Alphabetical","Series"},
{"Factors","Factorization.","Alphabetical","Number Theory"},
{"False","Boolean constant representing false.","Alphabetical","Constants (System)"},
{"FermatNumber","Return the nth Fermat Number.","Alphabetical","Number Theory"},
{"FillList","Fill a list with a certain expression.","Alphabetical","Lists (Operations)"},
{"Find","Return the index at which a certain element occurs.","Alphabetical","Lists (Operations)"},
{"FindFile","Find a file in the current path.","Alphabetical","Input/Output","Built In"},
{"FindFunction","","Alphabetical","Built In"},
{"FindRealRoots","Find the real roots of a polynomial.","Alphabetical","Solvers (Numeric)"},
{"FlatCopy","Copy the top level of a list.","Alphabetical","Lists (Operations)","Built In"},
{"Flatten","Flatten expression with respect to some operator.","Alphabetical","Lists (Operations)"},
{"Floor","Round a number downwards.","Alphabetical","Numbers (Operations)","Built In"},
{"FloorN","","Alphabetical","Numeric","Built In"},
{"For","C-style for loop.","Alphabetical","Control Flow"},
{"ForEach","Loop over all entries in a list","Alphabetical","Control Flow"},
{"FromBase","Conversion of a number from non-decimal base to decimal base","Alphabetical","Numbers (Operations)","Built In"},
{"FromFile","Connect current input to a file.","Alphabetical","Input/Output","Built In"},
{"FromString","Connect current input to a string.","Alphabetical","Input/Output","Built In"},
{"FullForm","Print an expression in Lisp format.","Alphabetical","Input/Output","Built In"},
{"FuncList","Return a list of functions used in an expression.","Alphabetical","Lists (Operations)"},
{"FuncListArith","Return a list of functions used in an expression.","Alphabetical","Lists (Operations)"},
{"FuncListSome","Return a list of functions used in an expression.","Alphabetical","Lists (Operations)"},
{"Function","Declare or define a function.","Alphabetical","Control Flow"},
{"Gamma","Euler's Gamma function.","Alphabetical","Special"},
{"gamma","Euler's constant gamma.","Alphabetical","Constants (Mathematical)"},
{"GarbageCollect","","Alphabetical","Built In"},
{"GaussianFactors","Factorization in Gaussian integers.","Alphabetical","Number Theory"},
{"GaussianGcd","Greatest common divisor in Gaussian integers.","Alphabetical","Number Theory"},
{"GaussianNorm","Norm of a Gaussian integer.","Alphabetical","Number Theory"},
{"Gcd","Greatest common divisor.","Alphabetical","Numbers (Operations)","Built In"},
{"GcdN","","Alphabetical","Numeric","Built In"},
{"GenericTypeName","","Alphabetical","Built In"},
{"GetExactBitsN","","Alphabetical","Numeric"},
{"GlobalPop","Restore variables using a global stack.","Alphabetical","Lists (Operations)"},
{"GlobalPush","Save variables using a global stack.","Alphabetical","Lists (Operations)"},
{"GoldenRatio","The Golden Ratio.","Alphabetical","Constants (Mathematical)"},
{"GreaterThan","","Alphabetical","Built In"},
{"GuessRational","","Alphabetical"},
{"HarmonicNumber","Teturn the nth Harmonic Number.","Alphabetical","Number Theory"},
{"HasExpr","Check for expression containing a subexpression.","Alphabetical","Predicates"},
{"HasExprArith","Check for expression containing a subexpression.","Alphabetical","Predicates"},
{"HasExprSome","Check for expression containing a subexpression.","Alphabetical","Predicates"},
{"HasFunc","Check for expression containing a function.","Alphabetical","Predicates"},
{"HasFuncArith","Check for expression containing a function.","Alphabetical","Predicates"},
{"HasFuncSome","Check for expression containing a function.","Alphabetical","Predicates"},
{"Head","Return the first element of a list.","Alphabetical","Lists (Operations)","Built In"},
{"HeapSort","Sort a list.","Alphabetical","Lists (Operations)"},
{"HessianMatrix","Create a Hessian matrix.","Alphabetical","Matrices (Special)"},
{"HilbertInverseMatrix","Create a Hilbert inverse matrix.","Alphabetical","Matrices (Special)"},
{"HilbertMatrix","Create a Hilbert matrix.","Alphabetical","Matrices (Special)"},
{"Hold","Keep expression unevaluated.","Alphabetical","Control Flow","Built In"},
{"HoldArg","","Alphabetical","Built In"},
{"HoldArgNr","","Alphabetical"},
{"Horner","Convert a polynomial into the Horner form.","Alphabetical","Polynomials (Operations)"},
{"I","Imaginary unit.","Alphabetical","Numbers (Complex)"},
{"Identity","Make identity matrix.","Alphabetical","Linear Algebra"},
{"If","Implements a branch point (makes a decision).","Alphabetical","Control Flow","Built In"},
{"Im","Imaginary part of a complex number.","Alphabetical","Numbers (Complex)"},
{"Infinity","Constant representing mathematical infinity.","Alphabetical","Constants (Mathematical)"},
{"Infix","","Alphabetical","Built In"},
{"InNumericMode","","Alphabetical"},
{"InProduct","Inner product of vectors (deprecated).","Alphabetical","Linear Algebra"},
{"Insert","Insert an element into a list.","Alphabetical","Lists (Operations)","Built In"},
{"Integrate","Integration.","Alphabetical","Calculus Related (Symbolic)"},
{"Intersection","Return the intersection of two lists.","Alphabetical","Lists (Operations)"},
{"IntLog","","Alphabetical"},
{"IntNthRoot","","Alphabetical"},
{"IntPowerNum","","Alphabetical"},
{"InVerboseMode","","Alphabetical"},
{"Inverse","Return the inverse of a matrix","Alphabetical","Linear Algebra"},
{"InverseTaylor","Taylor expansion of inverse.","Alphabetical","Series"},
{"IsAmicablePair","Test for a pair of amicable numbers.","Alphabetical","Number Theory","Predicates"},
{"IsAtom","Test for an atom.","Alphabetical","Predicates","Built In"},
{"IsBodied","","Alphabetical","Predicates","Built In"},
{"IsBoolean","Test for a Boolean value.","Alphabetical","Predicates"},
{"IsBound","Test for a bound variable.","Alphabetical","Predicates","Built In"},
{"IsCarmichaelNumber","Test for a Carmichael number.","Alphabetical","Number Theory","Predicates"},
{"IsCFormable","Check possibility of exporting expression to C++ code form.","Alphabetical","Input/Output","Predicates"},
{"IsComposite","Test for a composite number.","Alphabetical","Number Theory","Predicates"},
{"IsConstant","Test for a constant.","Alphabetical","Predicates"},
{"IsCoprime","Test if integers are coprime.","Alphabetical","Number Theory","Predicates"},
{"IsDiagonal","Test for a diagonal matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsError","","Alphabetical","Predicates"},
{"IsEven","Test for an even integer.","Alphabetical","Predicates"},
{"IsEvenFunction","Return true if function is an even function, False otherwise.","Alphabetical","Predicates"},
{"IsFreeOf","Test whether expression depends on variable.","Alphabetical","Predicates"},
{"IsFunction","Test for a composite object.","Alphabetical","Predicates","Built In"},
{"IsGaussianInteger","Test for a Gaussian integer.","Alphabetical","Predicates"},
{"IsGaussianPrime","Test for a Gaussian prime.","Alphabetical","Number Theory","Predicates"},
{"IsGaussianUnit","Test for a Gaussian unit.","Alphabetical","Number Theory","Predicates"},
{"IsGeneric","","Alphabetical","Predicates","Built In"},
{"IsHermitian","Test for a Hermitian matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsIdempotent","Test for an idempotent matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsInfinity","Test for an infinity","Alphabetical","Predicates"},
{"IsInfix","","Alphabetical","Predicates","Built In"},
{"IsIrregularPrime","Test for an irregular prime.","Alphabetical","Number Theory","Predicates"},
{"IsList","Test for a list.","Alphabetical","Predicates","Built In"},
{"IsLowerTriangular","Test for a lower triangular matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsMatrix","Test for a matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsNegativeInteger","Test for a negative integer.","Alphabetical","Predicates"},
{"IsNegativeNumber","Test for a negative number.","Alphabetical","Predicates"},
{"IsNegativeReal","Test for a numerically negative value.","Alphabetical","Predicates"},
{"IsNonObject","Test whether argument is not an Object()","Alphabetical","Predicates"},
{"IsNonZeroInteger","Test for a nonzero integer.","Alphabetical","Predicates"},
{"IsNotZero","Test for a nonzero number.","Alphabetical","Predicates"},
{"IsNumber","Test for a number.","Alphabetical","Predicates","Built In"},
{"IsNumericList","Test for a list of numbers.","Alphabetical","Predicates"},
{"IsOdd","Test for an odd integer.","Alphabetical","Predicates"},
{"IsOddFunction","Return true if function is an odd function, False otherwise.","Alphabetical","Predicates"},
{"IsOrthogonal","Test for an orthogonal matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsPositiveInteger","Test for a positive integer.","Alphabetical","Predicates"},
{"IsPositiveNumber","Test for a positive number.","Alphabetical","Predicates"},
{"IsPositiveReal","Test for a numerically positive value.","Alphabetical","Predicates"},
{"IsPostfix","","Alphabetical","Predicates","Built In"},
{"IsPrefix","","Alphabetical","Predicates","Built In"},
{"IsPrime","Test for a prime number.","Alphabetical","Number Theory","Predicates"},
{"IsPrimePower","Test for a power of a prime number.","Alphabetical","Number Theory","Predicates"},
{"IsPromptShown","","Alphabetical","Predicates","Built In"},
{"IsQuadraticResidue","Functions related to finite groups.","Alphabetical","Number Theory","Predicates"},
{"IsRational","Test whether argument is a rational.","Alphabetical","Numbers (Predicates)","Predicates"},
{"IsScalar","Test for a scalar.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsSkewSymmetric","Test for a skew-symmetric matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsSmallPrime","Test for a small prime number.","Alphabetical","Number Theory","Predicates"},
{"IsSquareFree","Test for a square-free number.","Alphabetical","Number Theory","Predicates"},
{"IsSquareMatrix","Test for a square matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsString","Test for an string.","Alphabetical","Predicates","Built In"},
{"IsSymmetric","Test for a symmetric matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsTwinPrime","Test for a twin prime.","Alphabetical","Number Theory","Predicates"},
{"IsUnitary","Test for a unitary matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsUpperTriangular","Test for an upper triangular matrix.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsVector","Test for a vector.","Alphabetical","Matrices (Predicates)","Predicates"},
{"IsZero","Test whether argument is zero.","Alphabetical","Numbers (Predicates)","Predicates"},
{"IsZeroVector","Test whether list contains only zeroes.","Alphabetical","Predicates"},
{"JacobianMatrix","Calculate a Jacobian matrix of n functions in n variables.","Alphabetical","Matrices (Special)"},
{"JacobiSymbol","Functions related to finite groups.","Alphabetical","Number Theory"},
{"KnownFailure","","Alphabetical"},
{"LagrangeInterpolant","Polynomial interpolation.","Alphabetical","Series"},
{"LambertW","Lambert's W function.","Alphabetical","Special"},
{"LaplaceTransform","Laplace transform","Alphabetical","Transforms"},
{"Lcm","Least common multiple.","Alphabetical","Numbers (Operations)"},
{"LeadingCoef","Return the leading coefficient of a polynomial.","Alphabetical","Polynomials (Operations)"},
{"LeftPrecedence","","Alphabetical","Built In"},
{"LegendreSymbol","Functions related to finite groups.","Alphabetical","Number Theory"},
{"Length","Return the length of a list or string.","Alphabetical","Lists (Operations)","Built In"},
{"LessThan","","Alphabetical","Built In"},
{"LeviCivita","Totally anti-symmetric Levi-Civita symbol.","Alphabetical","Combinatorics"},
{"Limit","Limit of an expression.","Alphabetical","Calculus Related (Symbolic)"},
{"LispRead","Read expressions in Lisp syntax.","Alphabetical","Input/Output","Built In"},
{"LispReadListed","Read expressions in Lisp syntax.","Alphabetical","Input/Output","Built In"},
{"List","Construct a list.","Alphabetical","Lists (Operations)","Built In"},
{"Listify","Convert a function application to a list.","Alphabetical","Lists (Operations)","Built In"},
{"Ln","Natural logarithm.","Alphabetical","Calculus Related (Symbolic)"},
{"LnCombine","Combine logarithmic expressions using standard logarithm rules","Alphabetical","Expression Simplification"},
{"LnExpand","Expand a logarithmic expression using standard logarithm rules.","Alphabetical","Expression Simplification"},
{"Load","Evaluate all expressions in a file.","Alphabetical","Input/Output","Built In"},
{"Local","Declare new local variables.","Alphabetical","Variables","Built In"},
{"LocalSymbols","Create unique local symbols with the given prefix.","Alphabetical","Variables","Built In"},
{"LogN","","Alphabetical","Numeric"},
{"LogicTest","","Alphabetical"},
{"LogicVerify","","Alphabetical"},
{"Macro","Declare or define a macro.","Alphabetical","Control Flow"},
{"MakeVector","Creates a vector containing uniquely numbered variable names.","Alphabetical","Lists (Operations)"},
{"Map","Apply an n-ary function to all entries in a list.","Alphabetical","Lists (Operations)"},
{"MapArgs","Apply a function to all top-level arguments.","Alphabetical","Control Flow"},
{"MapSingle","Apply a unary function to all entries in a list.","Alphabetical","Lists (Operations)"},
{"MatchLinear","Match an expression to a polynomial of degree one in a variable.","Alphabetical","Predicates"},
{"MatrixPower","Return the nth power of a square matrix.","Alphabetical","Linear Algebra"},
{"MatrixSolve","Solve a system of equations.","Alphabetical","Solvers (Symbolic)"},
{"Max","Maximum of a number of values.","Alphabetical","Numbers (Operations)"},
{"MaxEvalDepth","Set the maximum evaluation depth.","Alphabetical","Control Flow","Built In"},
{"MaximumBound","Return upper bounds on the absolute values of real roots of a polynomial.","Alphabetical","Solvers (Numeric)"},
{"Min","Minimum of a number of values.","Alphabetical","Numbers (Operations)"},
{"MinimumBound","Return lower bounds on the absolute values of real roots of a polynomial.","Alphabetical","Solvers (Numeric)"},
{"Minor","Return the principal minor of a matrix.","Alphabetical","Linear Algebra"},
{"Mod","Determine remainder of two mathematical objects after dividing one by the other","Alphabetical","Numbers (Operations)","Built In"},
{"ModN","","Alphabetical","Numeric"},
{"Moebius","The Moebius function.","Alphabetical","Number Theory"},
{"MoebiusDivisorsList","The list of divisors and Moebius values.","Alphabetical","Number Theory"},
{"Monic","Return the monic part of a polynomial.","Alphabetical","Polynomials (Operations)"},
{"MultiplyN","","Alphabetical","Numeric","Built In"},
{"MultiplyNum","","Alphabetical"},
{"N","Try determine numerical approximation of expression.","Alphabetical","Numbers (Operations)"},
{"NearRational","","Alphabetical"},
{"NewLine","Print one or more newline characters.","Alphabetical","Input/Output"},
{"Newton","Solve an equation numerically with Newton's method.","Alphabetical","Solvers (Numeric)"},
{"NewtonNum","","Alphabetical"},
{"NextPrime","Generate a prime following a number.","Alphabetical","Number Theory"},
{"NFunction","Make wrapper for numeric functions.","Alphabetical","Functional Operators"},
{"Nl","The newline character.","Alphabetical","Input/Output"},
{"NonN","","Alphabetical"},
{"Normalize","Normalize a vector.","Alphabetical","Linear Algebra"},
{"Not","Logical negation","Alphabetical","Predicates","Built In"},
{"NotN","","Alphabetical","Numeric","Built In"},
{"NrArgs","Return the number of top-level arguments.","Alphabetical","Lists (Operations)"},
{"Nth","Return the n-th element of a list.","Alphabetical","Lists (Operations)","Built In"},
{"NthRoot","","Alphabetical"},
{"Numer","numerator of an expression","Alphabetical","Numbers (Operations)"},
{"NumRealRoots","Return the number of real roots of a polynomial.","Alphabetical","Solvers (Numeric)"},
{"Object","Create an incomplete type.","Alphabetical","Variables"},
{"OdeOrder","Return order of an ODE.","Alphabetical","Differential Equations"},
{"OdeSolve","General ODE solver.","Alphabetical","Differential Equations"},
{"OdeTest","Test the solution of an ODE.","Alphabetical","Differential Equations"},
{"OldSolve","Old version of Solve.","Alphabetical","Solvers (Symbolic)"},
{"OMDef","Define translations from MathPiper to OpenMath and vice-versa.","Alphabetical","Input/Output"},
{"OMForm","Convert MathPiper expression to OpenMath.","Alphabetical","Input/Output"},
{"OMRead","Convert expression from OpenMath to MathPiper expression.","Alphabetical","Input/Output"},
{"OpLeftPrecedence","","Alphabetical","Built In"},
{"OpPrecedence","","Alphabetical","Built In"},
{"OpRightPrecedence","","Alphabetical","Built In"},
{"Or","Logical disjunction.","Alphabetical","Predicates","Built In"},
{"OrN","","Alphabetical","Numeric","Built In"},
{"OrthoG","Gegenbauer orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthogonalBasis","Create an orthogonal basis.","Alphabetical","Linear Algebra"},
{"OrthoGSum","Sums of series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoH","Hermite orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoHSum","Sums of series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoL","Laguerre orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoLSum","Sums of series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthonormalBasis","Create an orthonormal basis.","Alphabetical","Linear Algebra"},
{"OrthoP","Legendre and Jacobi orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoPoly","Internal function for constructing orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoPolySum","Internal function for computing series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoPSum","Sums of series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoT","Chebyshev polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoTSum","Sums of series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoU","Chebyshev polynomials.","Alphabetical","Polynomials (Special)"},
{"OrthoUSum","Sums of series of orthogonal polynomials.","Alphabetical","Polynomials (Special)"},
{"Outer","Return outer tensor product.","Alphabetical","Linear Algebra"},
{"PAdicExpand","P-adic expansion.","Alphabetical","Number Theory"},
{"Partition","Partition a list in sublists of equal length.","Alphabetical","Lists (Operations)"},
{"PatchLoad","Execute commands between <? and ?> in file.","Alphabetical","Input/Output","Built In"},
{"PatchString","Execute commands between <? and ?> in strings.","Alphabetical","String Manipulation","Built In"},
{"PDF","Probability density function.","Alphabetical","Probability & Statistics"},
{"Permutations","Return all permutations of a list.","Alphabetical","Combinatorics"},
{"Pi","Mathematical constant pi.","Alphabetical","Constants (Mathematical)"},
{"Plot2D","Adaptive two-dimensional plotting.","Alphabetical","Input/Output"},
{"Plot3DS","Three-dimensional (surface) plotting.","Alphabetical","Input/Output"},
{"Pop","Remove an element from a stack.","Alphabetical","Lists (Operations)"},
{"PopBack","Remove an element from the bottom of a stack.","Alphabetical","Lists (Operations)"},
{"PopFront","Remove an element from the top of a stack.","Alphabetical","Lists (Operations)"},
{"PowerN","","Alphabetical","Numeric"},
{"Postfix","","Alphabetical","Built In"},
{"Prefix","","Alphabetical","Built In"},
{"PrettyForm","Print an expression nicely with ASCII art.","Alphabetical","Input/Output"},
{"PrimitivePart","Return the primitive part of a univariate polynomial.","Alphabetical","Polynomials (Operations)"},
{"PrintList","Print list with padding.","Alphabetical","Lists (Operations)"},
{"Prog","","Alphabetical","Built In"},
{"ProperDivisors","The number of proper divisors.","Alphabetical","Number Theory"},
{"ProperDivisorsSum","The sum of proper divisors.","Alphabetical","Number Theory"},
{"Pslq","Search for integer relations between reals.","Alphabetical","Numbers (Operations)"},
{"PSolve","Solve a polynomial equation.","Alphabetical","Solvers (Symbolic)"},
{"Push","Add an element on top of a stack.","Alphabetical","Lists (Operations)"},
{"RadSimp","Simplify an expression with nested radicals.","Alphabetical","Expression Simplification"},
{"RamanujanSum","Compute the \"Ramanujan sum\".","Alphabetical","Number Theory"},
{"Random","Pseudo-random number generator.","Alphabetical","Numbers (Random)"},
{"RandomIntegerMatrix","Generate a matrix of random integers.","Alphabetical","Numbers (Random)"},
{"RandomIntegerVector","Generate a vector of random integers.","Alphabetical","Numbers (Random)"},
{"RandomPoly","Construct a random polynomial.","Alphabetical","Numbers (Random)"},
{"RandomSeed","Initialize random number generator.","Alphabetical","Numbers (Random)"},
{"RandVerifyArithmetic","","Alphabetical"},
{"Rationalize","Convert floating point numbers to fractions.","Alphabetical","Numbers (Operations)"},
{"Re","Real part of a complex number.","Alphabetical","Numbers (Complex)"},
{"Read","Read an expression from current input.","Alphabetical","Input/Output","Built In"},
{"ReadCmdLineString","Read an expression from the command line and return in a string.","Alphabetical","Input/Output","Built In"},
{"ReadToken","Read a token from current input.","Alphabetical","Input/Output","Built In"},
{"RemoveDuplicates","Remove any duplicates from a list.","Alphabetical","Lists (Operations)"},
{"Replace","Replace an entry in a list.","Alphabetical","Lists (Operations)","Built In"},
{"ReturnsCoreError","","Alphabetical"},
{"ReturnsError","","Alphabetical"},
{"ReturnsErrorTableau","","Alphabetical"},
{"ReturnsTime","","Alphabetical"},
{"Retract","Erase rules for a function.","Alphabetical","Built In"},
{"Reverse","Return the reversed list (without touching the original).","Alphabetical","Lists (Operations)"},
{"ReversePoly","Solve h(f(x))=g(x)+O(x^n) for h.","Alphabetical","Series"},
{"RightAssociative","","Alphabetical","Built In"},
{"RightPrecedence","","Alphabetical","Built In"},
{"Rng","Manipulate random number generators as objects.","Alphabetical","Numbers (Random)"},
{"RngCreate","Manipulate random number generators as objects.","Alphabetical","Numbers (Random)"},
{"RngSeed","Manipulate random number generators as objects.","Alphabetical","Numbers (Random)"},
{"Round","Round a number to the nearest integer.","Alphabetical","Numbers (Operations)"},
{"RoundTo","","Alphabetical"},
{"Rule","","Alphabetical","Built In"},
{"RuleBase","","Alphabetical","Built In"},
{"RuleBaseArgList","","Alphabetical","Built In","Built In"},
{"RuleBaseListed","","Alphabetical","Built In"},
{"Secure","","Alphabetical","Built In"},
{"Select","Select entries satisfying some predicate.","Alphabetical","Lists (Operations)"},
{"Set","Assign a variable.","Alphabetical","Variables","Built In"},
{"SetExactBitsN","","Alphabetical","Numeric","Built In"},
{"SetGlobalLazyVariable","Global variable is to be evaluated lazily.","Alphabetical","Variables","Built In"},
{"ShiftLeft","","Alphabetical","Built In"},
{"ShiftRight","","Alphabetical","Built In"},
{"Sign","Sign of a number.","Alphabetical","Calculus Related (Symbolic)"},
{"Simplify","Try to simplify an expression.","Alphabetical","Expression Simplification"},
{"Sin","Trigonometric sine function.","Alphabetical","Calculus Related (Symbolic)"},
{"SinN","","Alphabetical","Numeric"},
{"SinhN","","Alphabetical","Numeric"},
{"Solve","Solve an equation symbolically.","Alphabetical","Solvers (Symbolic)"},
{"SolveMatrix","Solve a linear system.","Alphabetical","Linear Algebra"},
{"Space","Print one or more spaces.","Alphabetical","Input/Output"},
{"Sparsity","Return the sparsity of a matrix.","Alphabetical","Linear Algebra"},
{"Sqrt","Square root.","Alphabetical","Calculus Related (Symbolic)"},
{"SqrtN","","Alphabetical","Numeric"},
{"SquareFree","Return the square-free part of polynomial","Alphabetical","Polynomials (Operations)"},
{"SquareFreeDivisorsList","The list of square-free divisors.","Alphabetical","Number Theory"},
{"StirlingNumber1","Return the n,mth Stirling Number of the first kind.","Alphabetical","Number Theory"},
{"StirlingNumber2","Return the n,mth Stirling Number of the second kind.","Alphabetical","Number Theory"},
{"String","Convert atom to string.","Alphabetical","String Manipulation","Built In"},
{"StringMidGet","Retrieve a substring.","Alphabetical","String Manipulation","Built In"},
{"StringMidSet","Change a substring.","Alphabetical","String Manipulation","Built In"},
{"Subfactorial","Factorial and related functions.","Alphabetical","Combinatorics"},
{"Subst","Perform a substitution.","Alphabetical","Control Flow","Built In"},
{"SubtractN","","Alphabetical","Numeric","Built In"},
{"SuchThat","Special purpose solver.","Alphabetical","Solvers (Symbolic)"},
{"Sum","Find the sum of a sequence.","Alphabetical","Series"},
{"SumForDivisors","Loop over divisors.","Alphabetical","Number Theory"},
{"SumTaylorNum","","Alphabetical"},
{"Swap","Swap two elements in a list.","Alphabetical","Lists (Operations)"},
{"SylvesterMatrix","Calculate a Sylvester matrix of two polynomials.","Alphabetical","Matrices (Special)"},
{"SystemCall","Pass a command to the operating system.","Alphabetical","Control Flow","Built In"},
{"Table","Evaluate while some variable ranges over interval.","Alphabetical","Lists (Operations)"},
{"TableForm","Print each entry in a list on a line.","Alphabetical","Lists (Operations)"},
{"Tail","Return a list without its first element.","Alphabetical","Lists (Operations)","Built In"},
{"Take","Take a sublist from a list, dropping the rest.","Alphabetical","Lists (Operations)"},
{"Tan","Trigonometric tangent function.","Alphabetical","Calculus Related (Symbolic)"},
{"Taylor","Univariate Taylor series expansion.","Alphabetical","Series"},
{"TanN","","Alphabetical","Numeric"},
{"TanhN","","Alphabetical","Numeric"},
{"tDistribution","Student's t distribution.","Alphabetical","Probability & Statistics"},
{"TestMathPiper","","Alphabetical"},
{"TeXForm","Export expressions in LaTeX form.","Alphabetical","Input/Output"},
{"Time","Measure the time taken by a function.","Alphabetical","Control Flow","Built In"},
{"ToBase","Conversion of a number in decimal base to non-decimal base.","Alphabetical","Numbers (Operations)","Built In"},
{"ToeplitzMatrix","Create a Toeplitz matrix.","Alphabetical","Matrices (Special)"},
{"ToFile","Connect current output to a file.","Alphabetical","Input/Output","Built In"},
{"ToStdout","Select initial output stream for output.","Alphabetical","Input/Output","Built In"},
{"ToString","Connect current output to a string.","Alphabetical","Input/Output","Built In"},
{"Trace","Return the trace of a matrix.","Alphabetical","Linear Algebra"},
{"TraceExp","Evaluate with tracing enabled.","Alphabetical","Control Flow"},
{"TraceRule","Turn on tracing for a particular function.","Alphabetical","Control Flow","Built In"},
{"TraceStack","Show calling stack after an error occurs.","Alphabetical","Control Flow","Built In"},
{"Transpose","Return the transpose of a matrix.","Alphabetical","Linear Algebra"},
{"TrapError","","Alphabetical","Built In"},
{"TrigSimpCombine","Combine products of trigonometric functions.","Alphabetical","Expression Simplification"},
{"True","Boolean constant representing true.","Alphabetical","Constants (System)"},
{"TruncRadian","","Alphabetical"},
{"Type","Return the type of an expression.","Alphabetical","Lists (Operations)","Built In"},
{"Undefined","Constant signifying an undefined result.","Alphabetical","Constants (Mathematical)"},
{"UnFence","","Alphabetical","Built In"},
{"UnFlatten","The inverse operation of Flatten.","Alphabetical","Lists (Operations)"},
{"Union","Return the union of two lists.","Alphabetical","Lists (Operations)"},
{"UniqueConstant","Create a unique identifier.","Alphabetical","Variables"},
{"UnList","Convert a list to a function application.","Alphabetical","Lists (Operations)","Built In"},
{"Until","Loop until a condition is met.","Alphabetical","Control Flow"},
{"Use","Load a file, but not more than once.","Alphabetical","Control Flow","Input/Output","Built In"},
{"V, InVerboseMode","Set verbose output mode.","Alphabetical","Input/Output"},
{"VandermondeMatrix","Create a Vandermonde matrix.","Alphabetical","Matrices (Special)"},
{"VarList","Return a list of variables appearing in an expression.","Alphabetical","Lists (Operations)"},
{"VarListArith","Return a list of variables appearing in an expression.","Alphabetical","Lists (Operations)"},
{"VarListSome","Return a list of variables appearing in an expression.","Alphabetical","Lists (Operations)"},
{"Verify","","Alphabetical"},
{"VerifyArithmetic","","Alphabetical"},
{"VerifyDiv","","Alphabetical"},
{"Where","Substitute result into expression.","Alphabetical","Functional Operators"},
{"While","Loop while a condition is met.","Alphabetical","Control Flow","Built In"},
{"WithValue","Temporary assignment during an evaluation.","Alphabetical","Control Flow"},
{"Write","Low-level printing routine.","Alphabetical","Input/Output","Built In"},
{"WriteString","Low-level printing routine for strings.","Alphabetical","Input/Output","Built In"},
{"WronskianMatrix","Create a Wronskian matrix.","Alphabetical","Matrices (Special)"},
{"XmlExplodeTag","Convert XML strings to tag objects.","Alphabetical","Input/Output","Built In"},
{"XmlTokenizer","Select an XML syntax tokenizer for parsing the input.","Alphabetical","Input/Output","Built In"},
{"ZeroMatrix","Make a zero matrix.","Alphabetical","Linear Algebra"},
{"ZeroVector","Create a vector with all zeroes.","Alphabetical","Linear Algebra"},
{"Zeta","Riemann's Zeta function.","Alphabetical","Special"}




{"AndN","Built-in logical \"and\".","Alphabetical","Built In"},
{"ArrayCreate","Create array.","Alphabetical","Native Objects","Built In"},
{"ArrayCreateFromList","Convert list to array.","Alphabetical","Native Objects"},
{"ArrayGet","Fetch array element.","Alphabetical","Native Objects","Built In"},
{"ArraySet","Set array element.","Alphabetical","Native Objects","Built In"},
{"ArraySize","Get array size.","Alphabetical","Native Objects","Built In"},
{"ArrayToList","Convert array to list.","Alphabetical","Native Objects"},
{"Assert","Signal \"soft\" custom error.","Alphabetical","Error Reporting"},
{"Backquoting","Macro expansion (LISP-style backquoting).","Alphabetical","Programming"},
{"BinSplitData","Computations of series by the binary splitting method.","Alphabetical","Numerical (Arbitrary Precision)"},
{"BinSplitFinal","Computations of series by the binary splitting method.","Alphabetical","Numerical (Arbitrary Precision)"},
{"BinSplitNum","Computations of series by the binary splitting method.","Alphabetical","Numerical (Arbitrary Precision)"},
{"BitAnd","Bitwise and operation.","Alphabetical","Built In"},
{"BitOr","Bitwise or operation.","Alphabetical","Built In"},
{"BitXor","Bitwise xor operation.","Alphabetical","Built In"},
{"Bodied","Define function syntax (bodied function).","Alphabetical","Programming","Built In"},
{"BracketRational","Find optimal rational approximations.","Alphabetical","Numerical (Arbitrary Precision)"},
{"BuiltinPrecisionGet","Get the current precision.","Alphabetical","Numerical (Arbitrary Precision)","Built In"},
{"BuiltinPrecisionSet","Set the precision.","Alphabetical","Numerical (Arbitrary Precision)","Built In"},
{"CachedConstant","Precompute multiple-precision constants.","Alphabetical","Numerical (Arbitrary Precision)"},
{"Check","Report \"hard\" errors.","Alphabetical","Error Reporting","Built In"},
{"ClearError","Custom errors handlers.","Alphabetical","Error Reporting"},
{"ClearErrors","Simple error handlers.","Alphabetical","Error Reporting"},
{"ContFracEval","Manipulate continued fractions.","Alphabetical","Numerical (Arbitrary Precision)"},
{"ContFracList","Manipulate continued fractions.","Alphabetical","Numerical (Arbitrary Precision)"},
{"CurrentFile","Return current input file.","Alphabetical","Error Reporting","Built In"},
{"CurrentLine","Return current line number on input.","Alphabetical","Error Reporting","Built In"},
{"DefMacroRuleBase","Define a function as a macro.","Alphabetical","Programming","Built In"},
{"DefMacroRuleBaseListed","Define macro with variable number of arguments.","Alphabetical","Programming","Built In"},
{"DumpErrors","Simple error handlers.","Alphabetical","Error Reporting"},
{"Equals","Check equality.","Alphabetical","Built In"},
{"ExtraInfo'Get","Annotate objects with additional information.","Alphabetical","Programming","Built In"},
{"ExtraInfoSet","Annotate objects with additional information.","Alphabetical","Programming","Built In"},
{"Fast...","Double-precision math functions.","Alphabetical","Built In"},
{"FindFunction","Find the library file where a function is defined.","Alphabetical","Programming","Built In"},
{"GarbageCollect","Do garbage collection on unused memory.","Alphabetical","Programming","Built In"},
{"GenericTypeName","Get type name.","Alphabetical","Native Objects","Built In"},
{"GetCoreError","Get \"hard\" error string.","Alphabetical","Error Reporting","Built In"},
{"GetError","Custom errors handlers.","Alphabetical","Error Reporting"},
{"GetErrorTableau","Custom errors handlers.","Alphabetical","Error Reporting"},
{"GetExactBitsN","Manipulate precision of floating-point numbers.","Alphabetical","Numerical (Arbitrary Precision)","Built In"},
{"GetTime","Measure the time taken by an evaluation.","Alphabetical","Built In"},
{"GreaterThan","Comparison predicate.","Alphabetical","Built In","Built In"},
{"GuessRational","Find optimal rational approximations.","Alphabetical","Numerical (Arbitrary Precision)"},
{"HoldArg","Mark argument as not evaluated.","Alphabetical","Programming","Built In"},
{"HoldArgNr","Specify argument as not evaluated.","Alphabetical","Programming"},
{"Infix","Define function syntax (infix operator).","Alphabetical","Programming","Built In"},
{"InNumericMode","Determine if currently in numeric mode.","Alphabetical","Numerical (Arbitrary Precision)"},
{"IntLog","Integer part of logarithm.","Alphabetical","Numerical (Arbitrary Precision)"},
{"IntNthRoot","Integer part of n-th root.","Alphabetical","Numerical (Arbitrary Precision)"},
{"IntPowerNum","Optimized computation of integer powers.","Alphabetical","Numerical (Arbitrary Precision)"},
{"IsBodied","Check for function syntax.","Alphabetical","Programming","Built In"},
{"IsError","Check for custom error.","Alphabetical","Error Reporting"},
{"IsGeneric","Check for generic object.","Alphabetical","Native Objects","Built In"},
{"IsInfix","Check for function syntax.","Alphabetical","Programming","Built In"},
{"IsPostfix","Check for function syntax.","Alphabetical","Programming","Built In"},
{"IsPrefix","Check for function syntax.","Alphabetical","Programming","Built In"},
{"IsPromptShown","Test for the MathPiper prompt option.","Alphabetical","Built In"},
{"KnownFailure","Mark a test as a known failure.","Alphabetical","Testing"},
{"LeftPrecedence","Set operator precedence.","Alphabetical","Programming","Built In"},
{"LessThan","Comparison predicate.","Alphabetical","Built In"},
{"LogicTest","Verifying equivalence of two expressions.","Alphabetical","Testing"},
{"LogicVerify","Verifying equivalence of two expressions.","Alphabetical","Testing"},
{"MacroClear","Define rules in functions.","Alphabetical","Programming","Built In"},
{"MacroLocal","Define rules in functions.","Alphabetical","Programming","Built In"},
{"MacroRule","Define rules in functions.","Alphabetical","Programming","Built In"},
{"MacroRuleBase","Define rules in functions.","Alphabetical","Programming","Built In"},
{"MacroRuleBaseListed","Define rules in functions.","Alphabetical","Programming","Built In"},
{"MacroSet","Define rules in functions.","Alphabetical","Programming","Built In"},
{"Math...","Arbitrary-precision math functions.","Alphabetical","Built In"},
{"MultiplyNum","Optimized numerical multiplication.","Alphabetical","Numerical (Arbitrary Precision)","Built In"},
{"NearRational","Find optimal rational approximations.","Alphabetical","Numerical (Arbitrary Precision)"},
{"NewtonNum","Low-level optimized Newton's iterations.","Alphabetical","Numerical (Arbitrary Precision)"},
{"NonN","Calculate part in non-numeric mode.","Alphabetical","Numerical (Arbitrary Precision)"},
{"NotN","Built-in logical \"not\".","Alphabetical","Built In"},
{"NthRoot","Calculate/simplify nth root of an integer.","Alphabetical","Numerical (Arbitrary Precision)"},
{"OpLeftPrecedence","Get operator precedence.","Alphabetical","Programming","Built In"},
{"OpPrecedence","Get operator precedence.","Alphabetical","Programming","Built In"},
{"OpRightPrecedence","Get operator precedence.","Alphabetical","Programming","Built In"},
{"OrN","Built-in logical \"or\".","Alphabetical","Built In"},
{"Postfix","Define function syntax (postfix operator).","Alphabetical","Programming","Built In"},
{"Prefix","Define function syntax (prefix operator).","Alphabetical","Programming","Built In"},
{"Prog","Block of statements.","Alphabetical","Programming","Built In"},
{"RandVerifyArithmetic","Special purpose arithmetic verifiers.","Alphabetical","Testing"},
{"Retract","Erase rules for a function.","Alphabetical","Programming","Built In"},
{"RightAssociative","Declare associativity.","Alphabetical","Programming","Built In"},
{"RightPrecedence","Set operator precedence.","Alphabetical","Programming","Built In"},
{"RoundTo","Round a real-valued result to a set number of digits.","Alphabetical","Testing"},
{"Rule","Define a rewrite rule.","Alphabetical","Programming","Built In"},
{"RuleBase","Define function with a fixed number of arguments.","Alphabetical","Programming","Built In"},
{"RuleBaseArgList","Obtain list of arguments.","Alphabetical","Programming","Built In"},
{"RuleBaseListed","Define function with variable number of arguments.","Alphabetical","Programming","Built In"},
{"Secure","Guard the host OS.","Alphabetical","Programming","Built In"},
{"SetExactBitsN","Manipulate precision of floating-point numbers.","Alphabetical","Numerical (Arbitrary Precision)","Built In"},
{"ShiftLeft","Built-in bitwise shift left operation.","Alphabetical","Built In","Built In"},
{"ShiftRight","Built-in bitwise shift right operation.","Alphabetical","Built In","Built In"},
{"SumTaylorNum","Optimized numerical evaluation of Taylor series.","Alphabetical","Numerical (Arbitrary Precision)"},
{"TestMathPiper","Verifying equivalence of two expressions.","Alphabetical","Testing"},
{"TrapError","Trap \"hard\" errors.","Alphabetical","Error Reporting","Built In"},
{"TruncRadian","Remainder modulo 2*Pi.","Alphabetical","Numerical (Arbitrary Precision)"},
{"UnFence","Change local variable scope for a function.","Alphabetical","Programming","Built In"},
{"Verify","Verifying equivalence of two expressions.","Alphabetical","Testing"},
{"VerifyArithmetic","Special purpose arithmetic verifiers.","Alphabetical","Testing"},
{"VerifyDiv","Special purpose arithmetic verifiers.","Alphabetical","Testing"}






{"+","Arithmetic addition.","Operators"},
{"-","Arithmetic subtraction or negation.","Operators"},
{"*","Arithmetic multiplication.","Operators"},
{"/","Arithmetic division.","Operators"},
{"<","Test for \"less than\".","Operators"},
{">","Test for \"greater than\".","Operators"},
{"<=","Test for \"less than or equal\".","Operators"},
{">=","Test for \"greater than or equal\".","Operators"},
{"^","Arithmetic power.","Operators"},
{"<<","Binary shift left operator.","Operators"},
{">>","Binary shift right operator","Operators"},
{"!","Factorial.","Operators"},
{"!!","Factorial and related functions.","Operators"},
{"***","Factorial and related functions.","Operators"},
{".","Return the dot product of tensors.","Operators"},
{":","Prepend an item to a list, or concatenate strings.","Operators"},
{"@","Apply a function.","Operators"},
{"/@","Apply a function to all entries in a list.","Operators"},
{"..","Construct a list of consecutive integers.","Operators"},
{"/:","Local simplification rules.","Operators"},
{"/::","Local simplification rules.","Operators"},
{"!=","Test for \"not equal\".","Operators"},
{"=","Test for equality of expressions.","Operators"}, //Built in.
{"%","The previous result.","Operators"},
{":=","Assign a variable or a list; define a function.","Operators"},
{"++","Increment a variable.","Operators"},
{"--","Decrement a variable.","Operators"},
{"o","Return the outer tensor product.","Operators"},
{"[","Beginning of block of statements.","Operators"},
{"]","End of block of statements.","Operators"},
{"*/","End of comment.","Operators"},
{"/*","Start of comment.","Operators"},
{"//","Beginning of one-line comment.","Operators"}
