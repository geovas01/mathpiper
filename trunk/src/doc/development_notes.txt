Development notes.

:indentSize=4:lineSeparator=\n:noTabs=false:tabSize=4:folding=explicit:collapseFolds=1

{{{====To Do:
+This should give a result other than 5E1: 
In> N(1/.02)
Result> 5E1
+I think this is a bug.  If an associative list is assigned to a variable multiple times, the list grows instead of being replaced.
+There is a bug in the assignment operator (:=).  7/16 := z  treats 7/16 as a variable name.  Similarly, 7*6 := z.
+IsInteger exists, but is not in the API docs.
+Experimenting with HighschoolForm rules.
In> Hold((-13)/7) /: { (-x_IsNumber) / _y <- [Echo("-",x,/,y);]};
Result> True
Side Effects>
In> 4^-1/2 /: { (-x_IsNumber) / _y <- [Echo("-",x,/,y);]};
Result> 4^((-1)/2)
In> 4^-1/2 /: { _z^(-x_IsNumber) / _y <- [Echo("-",x,/,y);]};
Result> 4^((-1)/2)
In> 4^-1/2 /: { _z^((-x_IsNumber) / _y) <- [Echo("-",x,/,y);]};
Result> 4^((-1)/2)
+MathPiper can't solve:
%mathpiper
//exercise 17.
Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");

P := Point(x,y);
A := Point(10,10);
B := Point(-10,-10);
equ1:= Distance(A,P) - Distance(B,P) == 20;
Echo(equ1);
equ2 := Solve(equ1,y);
//MathPiper can't solve this equation.  MathCad gives y=50/x.


Clear(a);
P := Point(x,y);
A := Point(a,a);
B := Point(-a,-a);
equ1:= Distance(A,P) - Distance(B,P) == 2*a;
Echo(equ1);
equ2 := Solve(equ1,y);
//MathPiper can't solve this equation (it doesn't return).  MathCad gives y=a^2/2*x.

%/mathpiper
+Why doesn't Simplify completely simplify equ2 to 16?:
%mathpiper
Use("org/mathpiper/scripts/proposed.rep/equations.mpi");
Use("org/mathpiper/scripts/proposed.rep/geometry.mpi");
equ1 := x-Sqrt(x^2-16);
Echo(equ1);
equa := (x+Sqrt(x^2-4^2));
equ2 := Simplify(equ1 * equa);
equ3 := Simplify(equ2);
%/mathpiper
+Limit can't do this calculation: Limit(x,Infinity) x-Sqrt(x^2-16);
+Simplify can't simplify (2*Sqrt((4*((a^2+b^2)/a^2-1))/b^2)*b^2)/2  Should simplify to (2*b^2)/a
+Solve cannot solve the following for y: Sqrt((x+25)^2+y^2)-Sqrt((25-x)^2+y^2)==40
+We might be able to implement a MathPiper Clear(*) function by having a file which holds the global variables which should be present when MathPiper first launches and then clearing all variables except the ones on this list.
+MathPiper solve bug: Solve((x^2)^(1/2)==y, x)
It may not be as easy as you think, if you are suggesting that the
algebra system should simplify (x^2)^(1/2) to x. For real x,
(x^2)^(1/2) is equal to the absolute value |x|, and it gets even more
complicated when the numbers are complex.

Of course, it would be easy to find the solutions x=y and x=-y to the
equation above, but I don't quite see how this could be generalized to
a significantly larger cIass of functions. I believe this is why Yacas
fails to solve your equation.

Best regards
Björn Terelius
+String processing needs to be significantly improved.  For example, turing lists into strings and strings into lists.  Also, perhaps use Python's string processing functions as a guide.
+Rounding to a specified number of digits still needs to be implemented.
+The While and For functions need a way to break and continue.
+Functions need a return statement.
+Use /// and /** **/ for commenting student's .mrw files.  Add special syntax highlighting for these comments.
+Add a workspace window to MathRider which is similar to Matlab's workspace window.
+HasFunc bug:
%mathpiper
//HasFunc bug.  If the variable that is passed to HasFunc is a MacroLocal, it will not be evaluated.

Retract("Bug",*);

RuleBase("Bug",{symbolicEquation});
HoldArg("Bug",symbolicEquation);
10 # Bug(_symbolicEquation)_HasFunc(Eval(symbolicEquation), "==") <--

[
    Echo("Bug rule ran.");
];



ForEach(equ,{y == m*x})
[
    Echo(equ);
    Echo(Bug(equ));
];


%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      y==m*x 
      Bug(equ)
.   %/output



%mathpiper
Retract("Bug",*);

RuleBase("Bug",{symbolicEquation});
HoldArg("Bug",symbolicEquation);
10 # Bug(_symbolicEquation) <--
[
    a := symbolicEquation;
    Echo(a);
];

ForEach(equ,{y == m*x})
[
    Echo(equ);
    equ := Eval(equ);
    Echo(equ);
    Echo(Bug(Eval(equ)));
];
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      y==m*x 
      y==m*x 
      Eval(equ) 
      True
.   %/output

+In the proposed newbies book examples, pp291_exercises.mrw will not syntax highlight but changing the name slightly allows it to work.
+Neither FindRealRoots() or NumRealRoots() works with x^3+12x-21==0 which has one real root and two complex roots.
+RadSimp() is broken:
equ := Sqrt((x-c)^2 +y^2) + Sqrt((x+c)^2 + y^2) == 2*a;
RadSimp(equ);
+Should any decimal value in a rational number cause the whol rational number to be converted into a decimal value?
In> .3/22
Result> .3/22
In> N(.3/22)
Result> 0.01363636364+Why doesn't D() create a callable function?:
%mathpiper
Use("org/mathpiper/scripts/proposed.rep/equations.mpi");

f(x) := EquRight(Solve(x^2 == 1200 * y,y)[1]);

Echo("b) ",f(60));

d(x) := D(x)f(x);
Echo("c) ",d(60));
%/mathpiper
+This was suggested on the Maxima list for Maxima:
> package_info("functs");
   author: unknown,
   maintainer: unknown,
   approved by: nobody,
   revision: XXX,
   location: share/simplification,
   regression tests: none,
   last update: last Tuesday,
   ...)
+Solve can't solve this equation:
equ := x + p == Sqrt((x - p)^2 + y^2);
Solve(equ,y);
+The SetFormulaMaxWidth(120) function in PrettyPrint is not published as a def.  Should it be?
+If there are spaces after commas in dbt directives that create tables, this causes an error.
+IsVariable link in VarList is broken.
+Functions need to be created which obtain the base and exponent of an expression.
+Monospaced font works fine on windows but not on linux.  So, we need to use the monospaced font we are already using for UASM65 for the text area of MathRider.
+MathPiper should indicate these two expressions to be equal, but it doesn't:
e1: (o-h)^2+(p-k)^2-((x-h)^2+(y-k)^2)
e2: (h-o)^2+(k-p)^2-((x-h)^2+(y-k)^2)
+ Why does this code accept symbolicEquation in RuleBase but work with just _s in f()?
%mathpiper
Retract("f",*);

RuleBase("f",{symbolicEquation});
HoldArg("f",s);
10 # f(_s)  <--
[
    Echo(s);
];

%/mathpiper
Name: f
Source Script: Not specified in a .def file.

Precedence: 10, 
Parameters: symbolicEquation<hold=false>, 
Predicates: (Pattern) True, 
    Variables: s,
    Types: Variable, 
Body: 
[
    Echo(s);
]

+Need to add monospaced font that is already being included for the u6502 plugin to MathRider as a whole.
+HotEqn doesn't render exponent if there is a space between them and parentheses:
    %hoteqn,preserve="false"
      \left( Ay - \frac{Ay + Cy}{2} \right)  ^{2}
.   %/hoteqn
+HotEqn output window needs to be scrollable.
-HotEqn incorrectly renders the output which is generated by the following:
(Solved: variables with single quotes in them (Like A'x) do no render correctly).
+IsBoolean() needs to be changed if we keep the Lisp truth logic.
+Base in MathPiper means Database.
+ Rule in MathPiper means rewrite rule.
+ %mathpiper
//This does not create a function for some reason.
a := OldSolve(x^2 + y^2 == 25,y);
f(x) := D(x)a;
Echo(f(x));
Echo(f(3));
%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side effects:
      (-2*x)/(2*Sqrt(25-x^2)) 
      (-2*x)/(2*Sqrt(25-x^2))
.   %/output
+ Use this code to debug halt mechanism.
In> a := CurrentTime() + 5000000000
In> While(a > CurrentTime()) [];
+ExpandFrac() is a function.
+ CharString() is a function.  Research it.
+ GroupLayoutManager needs to be bundled with the calculator applet because Macs don't include it in their Java 1.6.
Hi dovev, I just tried the whole story in this blog entry again. I used 5.5 RC 1. In step 4, I only needed this:
<target name="-post-jar">
    <jar update="true" destfile="${dist.jar}">
        <zipfileset src="${libs.swing-layout.classpath}"/>
</target>
In other, words, I didn't need those other two JAR files. If you add the above, you'll be bundling the group layout manager (Matisse) 
with the application, which is necessary because that's what you used when you designed the applet form. However, group layout is
part of JDK 1.6, so if you're using that, then you don't need to include the group layout manager library in the build script as above.
I deployed the application to GlassFish (Sun Java System Application Server), because that supports JAX-WS, while Tomcat doesn't. 
+ BranchingUserFunction uses Vectors.  Perhaps switch to ArrayLists to improve speed.
+ Change name of Printer to LispPrinter.  Move all printers into a single package.  Change name of FullForm to LispForm.  Create
MathPiperForm() function.
+ Log the version of mathrider and the version of mathpiper into the activity log.  The subversion version number should also be logged.
+ Internal'xxx functions are created for the cached constants.
CachedConstant(CacheOfConstantsN, gamma, GammaConstNum());
CachedConstant(CacheOfConstantsN, GoldenRatio, N( (1+Sqrt(5))/2 ) );
CachedConstant(CacheOfConstantsN, Catalan, CatalanConstNum() );
Pi, etc.
+ There are still a number of "numeric" commands which start with the word Math (check the BuiltinFunctionInitialize class).  
However, some of these might not be "numeric" but simply built in.
+ Document that the underscore character and the back quote character are operators.
+ Where is the RandomInteger() function?
+Enhance range operator (..) to step by a given value.  
Perhaps something like 1,3 .. 20 can be used with 3 being the step value. 
+Add a way to extract rows and columns (vectors) from matrices.
+This code causes the wrong line to be highlighted when an error:
A := {{8,4,-3},{6,2,-4},{4,-3,6}};
v:=14,-4,32;
SolveMatrix(A,v);
+One should be able to multiply an equation by a value.
This example is from Maxima:
(%i1) e1 : 3*x + 2*y = 7;
(%o1) 2*y+3*x=7
(%i2) e1*3;
(%o2) 3*(2*y+3*x)=21
(%i3) expand(%o2);
(%o3) 6*y+9*x=21
But MathPiper does not perform the multiplication:
In> e1 := 3*x+2*y==7
Result> 3*x+2*y==7
In> e1*3
Result> 3*(3*x+2*y==7)
In> Expand(%)
Result> 3*(3*x+2*y==7)
Ted Kosan 12/27/08.
01/06/09: from Sherm:
Yes, but why should you care?  If you do Solve(3*e1,x) you get the correct answer.
Is there really a problem here? 
However, if you want me to try to "fix" this, add it to the Issues.
In> (2+x)*(3+y)
Result> (x+2)*(y+3)
In> ExpandBrackets(%)
Result> x*y+3*x+2*y+6
In> a:=(2+x)*(3+y)
Result> (x+2)*(y+3)
In> Expand(a)
Result> (y+3)*x+2*y+6
====
+ yd^2 := ft^2/9;A'room := 18*ft*24*ft; causes an exception which crashes MathPiper.
+ It would be nice if MathPiper can be placed into numeric mode like NOn() and NOff().
+ Functions like ToDeg() and ToRad() are needed.
-  Enable the display of exceptions in the MathRider MathPiper console and perhaps also in the MathPiper text console.
+ MathPiper has if/else structure!: if( IsZero(Re(x)) )[
                        ( Abs(Im(x)) % 4 = 3 And IsPrime(Abs(Im(x))) );
                ] else if ( IsZero(Im(x)) ) [
                        ( Abs(Re(x)) % 4 = 3 And IsPrime(Abs(Re(x))) );
                ] else [
                        IsPrime(Re(x)^2 + Im(x)^2);
                ];
+ There is a bug in the FindFunction() function which will not check function names in a case-sensitive way.  For example, in this .def file, TexForm() was "hiding" TeXForm().  I moved TeXForm() higher up in the .def file as a temporary workaround for this bug.
+ The Version() function is not listed in the documentation.
+PrettyPrinter'Get and PrettyPrinter'Set are not in MathPiperDocs.
-grant {
permission java.security.AllPermission;
};
- SmallSort is declared in the list package, but is it was not in the Def file.  I placed it in the Def file when I splt list.code into list.code1 and list.code2.
+ In> Simplify(7*b*y+21*b*x)
Result> 7*(b*y+3*b*x)
Shouldn't the b also be placed outside of the parentheses?
+ ToFile documentation contains a link to the Taylor function for some reason.
+ Determine what happens to the state of the MathPiper environment when an EvaluationException is thrown.
+ There is a bug in FullForm() where there is not space between )3:
In> FullForm({1,2,{a,b},3})
Result> {1,2,{a,b},3}
Side Effects>
(List 1 2 
    (List a b )3 )
+ Assembling a .uasm file does not place the .lst file in the same directory as the .uasm file.
+ SinN() locks up MathPiper when too large of a value is entered.
+ How does one have wrap mode wrap on commas as well as spaces?
+ s[3]++; does not work in MathPiper.
+ Plugins on the bottom of the main window should not cover text area when they are open.
+ Determine why the parser does not like semicolons just before end parentheses list this ;)
+ Change Head() and Tail() to First() and Rest().
+ Look at Internal'Pi();
+ A number of keywords are missing from the MathPiper mode.
+ There should be a way to manipulate (a*x + b*y == r)/2 so that the parentheses can be removed.
+ Add backslash line continuation to MathPiper console.
+ Combinatorics: there needs to be a Combination function and a Permutation function that returns an integer and a Combination and Permutation function which returns a list.
+ Figure out why 
%mathpiper
//Sort users by the number of friends they have.
sorted := HeapSort(users,Lambda({x,y}, Length(x[2]) > Length(y[2]) ) );
%/mathpiper
doesn't clear the output fold and display "Processing..." when data is already in it.
+ Instead of removing just output folds, remove any fold that has preserve="false".
+ Figure out why lines which begin with { do not wrap in .mrw worksheets.
+ Put mathpiper syntax highlighting in console.
+ Some function implimentations like MathArcCos (now ArcCosN) seem to be missing.
+ Create a macro which converts a fold from OpenOffice into an executibale fold.
+ Change Factorize calling format 1 to Product, change Sum to SumSequence, change Factorize calling format 2 to ProductSequence.
+ In MathPiper, Swap() should be called DestructiveSwap().
+ Remove is in MathPiper_Docs but it is not in MathPiper.
+ Find out what "seed=1,dist=gauss" is doind in r1:=RngCreate(seed=1,dist=gauss).
+ Prog , [] , UnFence  links in Local do not work in MathPiper_Docs.
+ ReturnsCoreError, ReturnsError, ReturnsErrorTableau, and ReturnsTime function links don't work in MathPiper_Docs function tree.
+ GetTime link does not work in Time documentation.
- Fix bug:10:59:25 PM [error] AWT-EventQueue-0: // Error: Exception in runnable:Method Invocation textArea.setSelection : at Line: 1353 : in file: /home/tkosan/checkouts/mathrider/build/mathrider/macros/MathRider/Shift_Enter.bsh : textArea .setSelection ( rangeSelection ) 
10:59:25 PM [error] AWT-EventQueue-0: Called from method: displayResult : at Line: 1413 : in file: /home/tkosan/checkouts/mathrider/build/mathrider/macros/MathRider/Shift_Enter.bsh : displayResult ( ) 
10:59:25 PM [error] AWT-EventQueue-0: Target exception: java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 18394
Happens when there is just 1 line underneath fold at the bottom of a .mrw buffer.  0 lines underneath do not cause a problem and 2+ lines do not cause a problem.
+ ExtraInfo'Get, ExtraInfo'Set, and ExtraInfo'Returns do not have any documentation pages in MathPiperDocs.
+ The RandomInteger function has a link in the html code but no target and it is not listed in the functions.
+ Sometimes the "Source" button in PiperDocs indicates it cannot load the source file using the given encoding.
+ Add "ant -Dtarget=dist all-plugins" to build instructions.
+ Add version update to welcome.html file.
+ Folds throw an exception if equals sign is missing from a parameter.  Should catch this and return a better error message (actually I discovered that it is commas between quotes that is causing the exception."
+ Check Numbers (Predicates) for completeness.
- Place all IsXXX predicate functions in the predicate node in PiperDocs.
+ Again, figure out a way for piper folds to always return the result of the
last evaluation without needing to use Write;
+ Provide a way to reset piper without relaunching MathRider.
+ Place sliding window divider between function tree window and documentation window in PiperDocs.
- Place cursor inside of description double quotes after inserting a fold.
+ Add fit function to GeoGebra so that plots can be autozoomed to fit the display area.
+ Add Clojure to MathRider.
+ Develop an Application Specific Language for GeoGebra.
+ The %geogebra fold syntax hilights the letter D.
- If %piper is the last fold and there is less than 2 spaces below it, the output fold will not be shown.
+ Have the GeoGebra plugin associated with view the %geogebrafold was executed in show the result.
+ Automate the placing of version information in plugin documentation (including UASM65).
+ My concern is mostly "Java IDE kung-fu": users of these libraries (mostly just me :-) only want the highest level APIs to show in popup completion lists and the entire set of implementation classes remain invisible. The solution is easy: a public API class with implementation classes in the same package with package-ony (i.e., neither public or private) visibility..
+ All Functions category gives duplicates when function names contain ` characters.
+ There are other duplicate function names in All Functions.
+ Add menu items back when ready: help-menu=about help tip-of-the-day.
+ Need to work on more sophisticated fold property parser.  For example, what is a good way to part this?: (%piper,output="output,preserve="false",name="test"",name="test2").
+ Property scope="ide" throws null pointer exception when beanshell gui code is executed in worksheet_demo_1.mrw file.
+"All buffer-local properties listed in the section called ÂBuffer-Local PropertiesÂ may be given values in edit modes." so perhaps set the folding mode here instead of in the system properties file?
+ Use fold to send commands to PiperDocs plugin.  Searching might be one action to implement.
+ Does every function need to return True or False?  For example, why does PrettyForm return True while TeXForm doesn't.
+ Add beanshell error catch to beanshell fold.
+ Perhaps add grade level (or similar) tags to functions to hide advanced functions in piper docs.
+ Have Piper docs go to cateorgy's html reference page when category is selected.
+ Add scope="shell" to beanshell fold.
+ Add IsInteger to PiperDocs (There are a number of links to it, but no target).
+ Give option for Piper functions to be grouped bye type.  For example, predicates(refchap10), numeric functions(like MathSin), etc. Perhaps use a tree. 
+ Why is the MathRider startup script in the settings directory and in the MathRider directory?
+ If fold is not found then part of .mws file is deleted.
+ Place proper exception types in folds (like maxima and lisp);
- Enable menubar in geogebra plugin.
+ Add tools to geogebra toolbar which allow exporting images and xml geogebra code into notebook cells.
+ NewtonNum link in Newton is broken.
- Add default fold which will set default fold properties like output="output".
+ Add dependency code for geogebra, errorlist, etc.
+ Place path to .html file at top of docs window.
- Add output property for folds.
+ Add shortcut and button for inserting a fold into a .mws file.
+ Allow properties to not use quotes around the value.
+ Change Geogebra to GeoGebra globally.
+ Note:tk: must set output and console another way for when user executes maxima fold before using the shell.
- Change file format from .mrn to .mathrider (maybe leave .mrn to make tabs shorter.) (Actually, perhaps .mr or .mar would be better.).
+ Check if Piper remembers variable values between sessions.
+ Check to make sure that at least Sun's Java 5 is installed.
+ Do better syntax checking on fold properties.
+ Have Piper console use the text area font size (like svn does).
- Include Piper documentation in Piper plugin.
+ Make the Piper console the default console application.
+ Obtain line number when Piper encounters an error when executing a file.
+ Perhaps run Piper in its own thread so that the application does not lock up during execution.
+ Register a single error source instance and make it accessible to the <shift><click> macro.
+ Why doesn't =, :=, etc. highlight?
+ Macro which brings up checkbox for all properties for a % fold command when it is shift clicked.
+ Macro: right click menu which allows inserting of fold template.
+ Place MathRider variables in standard jEdit beanshell environment.
+ Use the ContextMenu plugin to create a special popup menu for .mws files.
+ Add dock sidekick plugin to the right side of the screen and have it show outline of .mws files.
+ "If none of the predicates are true, the function is returned with its arguments evaluated." Should "evaluated" be "unevaluated" here? (section 1.5 of the programmer's manual.
+ Use ShortCutSaver plugin for .mws shortcut keys (maybe like <shift><enter>).
+ Study TextAutocomplete plugin for ideas on keyword autocompletion.
- Fix problem where %output folds don't cause extra %ends but %error folds do.
- Figure out a way to output the result of the last expression in a fold without Writing or Echoing.
+ Find the documentation for Apart and Together.
+ Make fold types a property for use by Shift_Enter.bsh file, mode file, and the configurable fold handler plugin.
+ Allow help on a Piper function to be brought up by ???ing on it (including the source code of the function).
+ Check to see if we can remove the C: stripping code from Shift_Enter.bsh with this: file:///C:/ted/download/piper_manual/refchapter26.html#c26". (Doesn't work, must fix bug in Piper itself).
+ Allow multiple output folds to be generated.  For example, both %latex and normal %output.
+ Add autoexecute parameter which automatically executes an output fold.
- Allow source code for any function in the standard library to be brought up in the editor (like Sage ?? command).
+ Allow font size to be adjusted for any TextArea.
+ Allow Piper Docs JEditorPane to be scrolled with the up and down arrows.
+ Allow Piper Docs JEditorPane to save bookmarks.
+ Show "breadcrumb trail" at the top of the Piper Docs window.
+ Perhaps dynamically set the mode of .mws files by what kind of fold the cursor is placed in.
+ Check MathAdd and other functions not being looked up in Piper Docs.
+ How to log exceptions
		catch(Exception e)
		{
			Log.log(Log.ERROR,this,"Bad indent rule " + prop
				+ '=' + value + ':');
			Log.log(Log.ERROR,this,e);
		}
+ Allow folds to call other folds.
+ Allow GUI components to call folds.
+ Add uasm65 mode.
+ Fold output property could specify multiple properties by entering normal|latex.
- Allow PiperDocs to show either the docs for a core function or its source code.  (Open source code in a buffer).
- Make indent level of output one more level than the indent level of the fold.
+ Fix problem of Piper not being able to find file on other drive othern than the current drive.
+ Check toc.xml error in help.
+ Make a plugin for JCalc and make it the default calculator because it is easier to understand than the RPN calculator.
+ Allow PiperDocs to have tabbed viewing area.  Allow right click on hyperlink to have option of opening in a new tab.
+ Figure out a way to have the geogebra fold set properties on mathematical objects with non-XML code.
+ Fix gray background rectangles on display.
- Add forward and back browser capabilities to Piper docs.
+ Deselect item in function list when "home" is selected in PiperDocs.
+ In PiperDocs, allow functions to be listed either alphabetically or in groups.
+ Change "jEdit Home Directory" to "MathRider Home Directory".
+ RuleBaseListed link in Echo documentation is broken.
+ If GeoGebra has not been executed yet, then the ggb BeanShell variable will contain a null reference.
+ Add multiple fold properties capability like this: %piper,output="latex,autoexecute".
+ Update PiperDocs to refer to the Java implementation instead of the C implementation.
+ Capital vs. lower case variables in an expression causes evaluation errors if not caught.  Perhaps some way to highlight these case differences can be created?
+ If bottom fold is executed, append a new fold of that type at the bottom of the document.
"accapt" needs an "s" in PiperDocs for Write function.
+ Add function that allows Piper to execute Java/BeanShell code.
+ Create a QTOT plugin for logging Quiet Time On Task hours.
+ Create a JXTA plugin for collaboration.
+ Perhaps create Piper console fold so console sessions can be preserved?
+ Backslashes \ do not continue lines in Piper console.
- PiperInterpreter is sometimes not found in BeanShell script.  Problem occures in PiperDocs "Source" request. 
+ Put exception checking on all scripts;
+ This code causes an error because of output="latex":
    %piper,description="",output="latex"
        A := {a,b,c,d};
        B := {b,d,e};
        
        Echo("A", Intersection(A,B));
        
    
    %/piper

        %error ,preserve="false"
          Expecting ) closing bracket for sub-expression, but got { instead
        %/error 
- Add quotes to mode.
- Add usage information to the Piper console.
- Change // and /**/ to same color in mode.
- Fix GeoGebra docking menu overwriting problem.
- Make a Piper mode file.
- Perhaps add properties to a fold like manipulate=true:output=latex.
- Tag folds by type, for example %piper, %latex, %uasm65, %equation.

Initial release:
+ Documentation: Main mathrider, all plugins.
+ Add GPL statement to all source code files.
+ Check GPL statements on plugins.
+ Add license for fire icon http://commons.wikimedia.org/wiki/Image:Exquisite-k3b.png.

}}}

{{{PLUGIN IDEAS
+ Plugin which has database of famous mathematicians with bio and picture.
+ Plugin which contains mathematically accurate type hierarchy (perhaps use Axiom CAS.).
}}}


{{{ MACRO IDEAS:
+ Multiple_Latex: accepts a list of values to convert to TeXForm and display.
}}}

{{{FOLD TYPES (Make sure to add fold types in Shift_Enter.bsh file, mode file and configurable fold handler plugin.)
+ piper - Executes piper code.
+ cas - Executes code using the default cas system.
+ manipulate - Allows user to manipulate an equation or inequality.
+ latex - Displays latex code using the default latex viewer.
+ geogebra - Sends geogebra commands to geogebra.
+ plot2d - Plots functions using the default 2d plotting program.
+ jmol - Sends jmol commands to jmol.
+ plot3d - Plots functions using the default 3d plotting program.
+ spreadsheet - Sends spreadsheet data to the default spreadsheet program.
+ beanshell - Sends code to beanshell.  Useful for creating GUIs, text scripts, etc.
+ html.
+ sql.
+ buffer - Code is held in a separate buffer.  May be useful for large blocks of code.

+_I_ am annoyed by having to write code to do anything: surrounding any CAS command with %piper and %/piper is irritating. Susan.



}}}


{{{MATHPIPER BUGS.
===
+Factors(3*b*c^3-3*a*c^2*d-12*a*b*c^2+12*a^2*c*d+12*a^2*b*c-12*a^3*d) 3s are not factored out.
+RandomInteger is present as a link in the MathPiper documentation, but it is not present as a top-level function in the code.
+I think the generated output of following formula is wrong:
In> Sum(n,1,k,n)
Out> (n*(n+1))/2
shouldn't n be replaced with k?
The following example with z instead of k works:
In> Sum(n,1,z,n)
Out> (z*(z+1))/2
And why is
In> Sum(n,1,z,n*a)
Out> Sum(n,1,z,n*a)
not evaluated to a*(z*(z+1))/2?
Best regards
Andreas Weber
-the following problem kept me busy the entire last day: When comparing the log-files
from the tests with older test runs, the file sums.pit produced strange results.
First, I thought I overlooked the problem in the past and repeated tests along the
version history since I moved from yacas to piper, but the real problem is that the
output depends on which tests run before that script.
I did not dig deeper into the problem, but maybe one of the other test scripts
changes part of the rule base or it is a bug in Yacas. So the result of the
tests depends on the order of the scripts in the diectory, which is random.
A remedy in oder to have repeatable tests is to recreate the PiperInterpreter
for each run of the tests.

(2^x)^3 evaluates to 2^x^3. compare to (say) gnu calc, which evaluates
this to 2^(3x). note that yacas evaluates (x^2)^3 to x^6.

apologies if this is is a well-known bug (or if instead it is
considered a feature)

-- eric

----
More Yacas bugs:

* Simplify(0.0000001) returns 1

 * Simplify(0.00000000001) returns Undefined

 * TrigSimpCombine(0.0000001) returns 1

Any ideas for a temporary workaround appreciated  - I've tried adding "+1-1" and "+0*x" onto the end...

thanks,

Mike

----

Possible bugs:

1) Solve(x==x^3,x) produces several "MathSqrt: invalid argument: -1"
messages.

2) I don't think the prettyprint version of Solve(x==x^3,x) is correct
(seems to start with sqrt[3] which isn't in the regular version (see 2nd and
3rd screenshots attached))

3) If you try and simplify the answers to Solve(x==x^3,x), you get some odd
results. The first screenshot (attached) has the input and output to
Simplify shown.

cheers,

Mike

----

Here are some Yacas bugs we've noticed whilst developing GeoGebra:

* Factor(a^2 - b^2) returns FWatom(a^2 - b^2)

* Factor(9*x^2 -1) returns (9x-3)*(x+1/3)

Also do you know if Yacas can simplify exp(x) - 1/exp(-x)?

----
N(Pi,10) gives too many digits.
----
Functions obtained from D() do not evaluate and functions cannot be defined as follows for some reason:

y := 2 * x;

----
PathString and WriteString are not implemented yet.
----
----
NewLine(x) does not work in folds probably because of Load.  Fix?
----
9.5/3.2 does not evaluate to a decimal number.
----
TestPiper(x^k/x,x^(k-1));
Returns false but
is(equal(x**k/x,x**(k-1)));
returns true in maxima.

----
//Why does this give an error?
In> MathSin(90 * Pi / 180)
In function "MathMultiply" : 
bad argument number 1(counting from 1) : 

The offending argument x evaluated to (90*Pi)/180
----

---- exponent bug.
+ 
#Sage calculates this.
var('k');
a = (1-x^2^k) * (1+x^2^k)
a,expand(a)
    ((1 - x^2^k)*(x^2^k + 1), 1 - x^(2*2^k))

//But piper calculates this.
%piper
    a := (1-x^2^k) * (1+x^2^k);
    Write(Simplify(a));

    %output
      1-x^2^k^2
    %end

%end


In> TestPiper(1-x^2^k^2,1 - x^(2*2^k))
Out> False:
******************
none: -1 
1-x^2^k^2 evaluates to 
1-x^2^k^2
 which differs from 
1-x^2^(k+1)
 by 
x^2^(k+1)-x^2^k^2
******************

----
+ Postfix function should be able to take only 1 argument, but it says it needs 2.
+ CDF link is broken in the PDF PiperDocs document.
+ TestPiper function should be renamed something more general like IsEquiv so that it can be used in other contexts.  For example, students learning how to manipulate an equation would find this function very useful.
+ Why does c := Sum(i,1,10,1/i*(i+1));Write(N(c)); Not convert c to a floating point value?
+ Why doesn't this work? "Object argument accessors in the form of
expr[ index ]. These are mapped internally to Nth(expr,index). The value of index=0 returns the operator of the object, index=1 the first argument, etc. So, if expr is foo(bar), then expr[0] returns foo, and expr[1] returns bar. Since lists of the form {...} are essentially the same as List(...), the same accessors can be used on lists."

+ If e is not defined, why is Ln(e) in this result?
%piper

df := D(x) 40*e^(-15000*x)*Sin(30000*x);
Write(df);

    %output
      40*e^(-15000*x)*30000*Cos(30000*x)+(-40)*e^(-15000*x)*15000*Ln(e)*Sin(30000*x)
    %end

%end

+ Why is Ln(2.71828) in this result?
%piper
e := 2.71828;
df := D(x) 40*e^(-15000*x)*Sin(30000*x);
Write(df);

    %output
      40*2.71828^(-15000*x)*30000*Cos(30000*x)+(-40)*2.71828^(-15000*x)*15000*Ln(2.71828)*Sin(30000*x)
    %end

%end


+ Why do some commands return True: while others return True with no : (Like Function);
+ What is FWatom in the factors.rep repository?
+ PrettyPrinter'Set: TexForm should be TeXForm.
+Note: the variable names "foreach..." have been chosen so they won't get confused with normal variables you use. This is a major design flaw in this language. Suppose there was a local variable foreachitem, defined in the calling function, and used in foreachbody. These two would collide, and the interpreter would use only the last defined version. In general, when writing a function that calls Eval(), it is a good idea to use variable names that can not collide with user's variables. This is generally the single largest cause of bugs when writing programs in Piper. This issue should be addressed in the future.
+ Random, RandomSeed in same string in .js array.
+ CachedConstant hyberlink in InNumericMode documentation is broken.
+ Wiesner Thomas to piper-devel
	
	I'm writing a small tutorial on CAS for hobby electronics.
	However, when I tried to solve a transcendental equation numerically, I
	encountered a Problem:
	
	RL:=1
	
	equ:=10e3*(2.68e-9*(Exp((9.75*Ln(IC/(7e-18*((4500-(68*IC+25500*IC+375*IC*RL))
	/23625+1)))+25500*IC+68*IC)/0.3588e2)-1)+IC/375)+(2*(9.75*Ln(IC
	/(7e-18*((4500-(68*IC+25500*IC+375*IC*RL))/23625+1)))
	+25500*IC+68*IC))/750-12==0
	
	Newton(equ[1], IC, 0.01, 1e-6) simply returns 'Undefined', but the equation has
	a (real) solution at 0.0051042 which can be found with Octave, for example.
	
	Additionally I don't understand why
	 Re(1/(I*w*c))
	gives
	 1/(Complex(0,1)*w*c)
	as result, but the correct result is simply 0. I thought, maybe piper assumes
	that w and c may be complex, but
	 Re(1/(I*Re(w*c)))
	doesn't work, too.
	
	Well, I thought maybe you want to know that.
	
	 mfg Thomas Wiesner
 
+ The Load command kills the contents of % which makes it impossible to access the
	result of the last evaluation.
+ Implement symbolic arithmetic so that m := 144 == 20 * a + b; n := 136 == 10 * a + b;c := m-n; works.
 
===

//What prime factors do the numbers 21, 42, and 56 have in common.
a := {};
a := Append(a,Factors(21));
a := Append(a,Factors(42));
a := Append(a,Factors(56));

//a := Flatten(a);
Echo(a);

     {{{%output 
      {{3,1},{7,1}} {{2,1},{3,1},{7,1}} {{2,3},{7,1}}
     }}}

Why is this list missing commas and curly braces?
===
+ Link from HoldArg to HoldArgNr in HoldArg documentation is broken.
}}}

{{{MATHPIPER ENHANCEMENTS.
+ Rename Bin function to be Combinations.
+ Provide functions which generate lists which contain the combinations and permutations of a list.
+ How does one do parallel list traversals
+ Provide a way to convert between strings and lists.
+ %piper
a := {"00","20","40","60","08","28","48","68","88","A8","C8","E8","18","38","58","78","98","B8","D8","F8","8A","9A","AA","BA","CA","EA"};
b := {};
ForEach(x,a)
    [
        
       c := FromBase(16,x);
       Write(ToBase(2,c));
       NewLine();
    ];

%/piper
+ Have as many function names as is practical not use abbreviations.
+ It would be nice to be able to associate units with numbers and variables like: x<yards> := 5<feet> + 7<yards>.
+ Get rid of ' in all function names.
+ Change core to built in in all function names.
+ Change Head and Tail to First and Rest.
+ Change all Mathxxx names to XXXNum.  Change all complement names to XXXSym
+ Undocumented built in functions: ApplyPure, Atomize, BackQuote, BitCount, BitsToDigits, BuiltinAssoc, BuiltinPrecisionGet, BuiltinPrecisionSet, CharString, ClearVar, CommonLispTokenizer, Concatenate, ConcatenateStrings, CustomEval, CustomEvalExpression,
CustomEvalLocals, CustomEvalResult, CustomEvalStop, DebugFile, DebugLine, DefLoadFunction, DefaultDirectory, DigitsToBits, Divide, DumpBigNumberDebugInfo, Exit, ExitRequested, ExplodeTag, ExtraInfoGet, ExtraInfoSet, Fac, FastIsPrime, FastLog, FastPower, FileSize, 
GenArrayCreate, GenArrayGet, GenArraySet, GenArraySize, GenPatternCreate, GenPatternMatches, GetExactBits, GetLeftPrecedence, GetPrecedence, GetRightPrecedence, HistorySize, InDebugMode, IsInteger, LazyAnd, LazyOr, LexCompare2, LexGreaterThan, LexLessThan, 
MacroNewRule, MacroNewRulePattern, MacroSetVar, MathIsSmall, MathNegate, MathSign, MathEvalDepth, NewLocal, NewRule, NewRulePattern, PrettyPrinterGet, PrettyPrinterSet, PrettyReaderGet, PrettyReaderSet, ProgBody, Quote, ReadLisp, ReadLispListed, RuleBaseDefined,
SetExactBits, SetVar, StackSize, Stringify, Subtract, Version, ' (the quote operator).
+ Base functions should be able to pad zeros on the left. (Also perhaps a more generalized Base function).
- Change org.mathrider.piper.Piper.Evaluate to evaluate.
+ Change Numer to Numerator and Denom to Denominator because it is hard to remember how many letters of Numer and Denom are used in the shorter names.
+ Change "generic" (as in Generic object) to "native".
+ Change Nl to NL.
+ Change TeXForm to TexForm.
+ Change FullForm to LispForm.
+ Change MathXXX function names to XXXN format or perhaps have something like SinS for symbolic and SinN for numeric (but then all symbolic functions should be labeled as such so maybe just labeling the numeric ones would be best.
+ Change DestructiveXXX function names to XXXO for Original and perhaps functions like Replace to ReplaceC for Copy.
+ Change function names which have a ' in them to version without '.
+ Have commands which are similar to scientific calculator functions (like NCR, NPR, etc).
+ Multivariate factoring.
+ Add a Terms function which returns all the terms of a polynomial.
+ Add a Coefficients function which returns all the coefficients of a polynomial.

----
+ Regular expressions
The regular expressions plugin
This plugin allows for text processing using regular expressions. The GPL'ed package pcre is included for this purpose (pcre stands for Perl compatible regular expressions).

To use the plugin, the plugin has to be loaded through:

Use("pcre");

The pcre plugin offers two principal functions: PcreLexer and PcreNextToken. PcreLexer sets up and initializes the tokenizer to scan for a set of regular expressions. A call to PcreNextToken returns the result of the scan in the current file, starting from the current position.

PcreLexer does not interfere with normal reading of a file. When normal read calls are made, the default tokenizer is used. The tokenizer set up by PcreLexer is only used when PcreNextToken is called.

The syntax for PcreLexer is:

PcreLexer(tokens);

The argument tokens is a list of token definitions. A token definition in turn is a list, with the first element a string containing the regular expression, and the second containing an atom that can describe the type of the token (for easy recognition later).

Calling PcreNextToken() will then return the first matching token from the current input.

The following example sets up the tokenizer to recognize either an integer, or a word consisting only of lowercase letters.

In> DllLoad("pcre")
Out> True
In> PcreLexer({{"[0-9]+",Integer},{"[a-z]+",Word}})
Out> True
In> FromString("123abc")PcreNextToken()
Out> {"123",Integer}
In> FromString("===abc")PcreNextToken()
Out> {"abc",Word}

----
From Axel:
In the refactored sources I've tried to:
* use generic HashMap<...,...> there possible instead of Hashtable and
eliminated some Hashtable wrapper classes
* use equals() method instead of "==" "!=" operator for Strings, but
there is still a problem, because I didn't get rid of the (new)
StringUtil.intern() method!

IMO also the package structure should be refactored to easier maintain
the piper API
* all PiperEvaluator based classes should go in their own package and
not be included as MathCommand subclasses.
* the parser classes should be in an own package
* the LispObject based classes should go in their own package
* the SBox based classes should go in their own package and not be
included as SBoxBuilder subclasses.
----
}}}

{{{MathPiper questions.
+ How does one expand 2^3 into 2*2*2?
+ Functions to research further: CurrentLine, CurrentFile, FindFunction.
}}}


{{{====jedit_gui.props
insert-newline-indent.shortcut=  //Turn off auto indent after newline.
}}}


{{{====PIPER INFORMATION

How to stop a calculation:
  public void StopCurrentCalculation()
  {
    piper.env.iEvalDepth = piper.env.iMaxEvalDepth+100;
  }
  
----
Packages:

{{{io: 
LispInput (abstract)
StringInput
JarInputFile
LispOutput (abstract)
StdFileOutput
StringOutput
}}}



LispObject (abstract)
/** class LispObject is the base object class that can be put in
 *  linked lists. It either has a pointer to a string, obtained through
 *  String(), or it is a holder for a sublist, obtainable through SubList(),
 *  or it is a generic object, in which case Generic() returns non-NULL.
 *  Only one of these three functions should return a non-NULL value.
 *  It is a reference-counted object. LispPtr handles the reference counting.
 */
 
LispPtr
/** class LispPtr. This class is a smart pointer type class to Lisp
 *  objects that can be inserted into linked lists. They do the actual
 *  reference counting, and consequent destruction of the object if
 *  nothing points to it. LispPtr is used in LispObject as a pointer
 *  to the next object, and in diverse parts of the built-in internal
 *  functions to hold temporary values.
 */
 
 


}}}

{{{====Should the Plot2D and Plot3D returned data interfaces be unified?
}}}


{{{====Determining if an error was encountered.

String response = piper.Evaluate(expression);

if (piper.iError != null)
{
  AddLinesStatic(48,"Error> ",piper.iError);
}
}}}


{{{===="Notebook" thoughts.

+ One could create a html-based notebook like the Sage notebook but perhaps it would be better to create a 100% Applet-based notebook which would use a layout manager to lay components out in a vertical fasion.  The mathrider application can generate online notebooks which is similar to the way that GeoGebra generates online viewers.

+ Perhaps it would be useful to put together text documents in a mrw file so that macros can be developed in the same document as the text ?
}}}

{{{====Calculator thoughts.
- Include multiple calculator plugins and create a way for them to interoperate with Piper.
}}}


{{{====Tango icons
http://sourceforge.net/tracker/index.php?func=detail&aid=1755992&group_id=588&atid=300588
}}}

{{{====Beansheet
+ Changing alignment of cells that have different fonts sets all cells to the same font.

}}}


{{{ ====HotEqn bugs.
- Does not display correctly on this input: \frac{2 x \left( x + 3\right)  \left( x + 4\right) }{9}
%piper,output="latex"

a := Hold( ((k+1)/(2*k)) * (1-(1/(K+1)^2)) );

Write(a);

    %hoteqn
      $\frac{k + 1}{2 k}  \left( 1 - \frac{1}{\left( K + 1\right)  ^{2}} \right) $

        %output
          HotEqn updated.
        %end

    %end

%end
----
//The latex produced by this code does not render properly.
%piper,output="latex"
a := -4.472*(sin(2*x+86.56) + 2*cos(2*x + 86.56));
b := 10 * sin(2*x -30);
Write(a);
%/piper

    %hoteqn,preserve="false"
      - 4.472 \left( \mathrm{ sin }\left( 2 x + 86.56\right)  + 2 \mathrm{ cos }\left( 2 x + 86.56\right) \right)
    %/hoteqn

        %output,preserve="false"
          HotEqn updated.
        %/output
----
}}}


{{{ CONTEXT DEPENDENT "RIGHT CLICK" POPUP MENU
+ On fold header: Dialog which allows properties to selected graphically.
+ In fold: Pop up list of commands depending on fold type.

}}}


{{{Sage disadvantages:
+ The implementation is constantly changing beneath you without warning.
}}}

{{{GeoGebra
+ The Curve command does not work for some reason.
+ Copy XML protocol to clipboard.
+ Add commands for setting object properties so that these can be set by a program.
+ XML format does not allow comments but should.
+ Place scroll arrows on the axes.
+ Add a zoom slider.
+ Add an auto-fit button.
+ Enable the user to draw rectangles on the top of a graph in order to estimate areas.
}}}

{{{SUBVERSION
+ And keep in mind, Subversion can handle binary files as well as text files, so I'd highly recommnd storing EVERYTHING in your repository, be it your development tools (Eclipse), external libraries (any JARs or DLLs your app might need), server configuration files (web server, DB server), bootstrap scripts, etc.  Aside from hardware and system software, creating a new environment to run your application shouldn't require anything that's not stored in version control.


}}}


{{{JSciCalc
+ Fix white patched in display.
+ Add factorial button.
+ Confrey's Function Probe had a calculator in which you could make your own new buttons, and with a record of what you had done, like the TI calculators, or dc in unix. Susan.


}}}


{{{JEDIT
Perhaps you can package your software so that it can be used one way
(as a standalone program) but also available as a plugin for users of
jEdit? That would certainly be cool. It's just a matter of keeping a
good discipline and separating your code from the core code, and
putting it all in a plugin, and then having the plugin set some
default options in its props file. -Alan Ezust.
----
This is the chronic Jython error in JEdit:
11:41:50 PM [error] JythonExecutor: Traceback (innermost last):
11:41:50 PM [error] JythonExecutor:   (no code object) at line 0
11:41:50 PM [error] JythonExecutor: KeyError: console
----
11:53:44 PM [error] JythonExecutor: Traceback (innermost last):
11:53:44 PM [error] JythonExecutor:   (no code object) at line 0
11:53:44 PM [error] JythonExecutor: KeyError: PyParser
----
}}}

{{{CLOJURE

 	
====		
Ray Myers   	
View profile
	 More options Jun 27, 8:32 pm
From: Ray Myers <ray.my...@gmail.com>
Date: Fri, 27 Jun 2008 17:32:50 -0700 (PDT)
Local: Fri, Jun 27 2008 8:32 pm
Subject: Calling Clojure from Java (Shortcuts)
Reply | Reply to author | Forward | Print | Individual message | Show original | Report this message | Find messages by this author
Hello,

Evaluating arbitrary Clojure code from Java seems to be a common
stumbling block, so I put together a simple utility to wrap the
process. Please let me know if the attached code is a reasonable way
to do this.

One issue is that the callers of runClosureScript() all share and
modify the same lexical environment. Is it possible to prevent this?

Cheers,
-- Ray Myers

import java.io.StringReader;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import clojure.lang.Associative;
import clojure.lang.Binding;
import clojure.lang.Compiler;
import clojure.lang.Namespace;
import clojure.lang.PersistentHashMap;
import clojure.lang.RT;
import clojure.lang.Symbol;
import clojure.lang.Var;

public class ClojureScriptRunner {

        public static Object runClosureScript(Map<String, ? extends Object>
bindings, String script)
                        throws Exception {
                try {
                        new Binding<String>(script);
                        Namespace ns = (Namespace) RT.CURRENT_NS.get();
                        Associative mappings = PersistentHashMap.EMPTY;
                        mappings = mappings.assoc(RT.CURRENT_NS, RT.CURRENT_NS.get());
                        for (Entry<String, ? extends Object> e : bindings.entrySet()) {
                                String varName = e.getKey();
                                Symbol sym = Symbol.intern(varName);
                                Var var = Var.intern(ns, sym);
                                mappings = mappings.assoc(var, e.getValue());
                        }
                        Var.pushThreadBindings(mappings);
                        return Compiler.load(new StringReader(script));
                } finally {
                        Var.popThreadBindings();
                }
        }

        // Example
        public static void main(String[] args) throws Exception {
                Map<String, Integer> bindings = new HashMap<String, Integer>();
                bindings.put("a", 2);
                bindings.put("b", 3);
                System.out.println(runClosureScript(bindings, "(+ a b)")); // prints
5
        }

- Hide quoted text -
- Show quoted text -
}


    Reply    Reply to author    Forward       Rate this post: Text for clearing space
		
		
		
You must Sign in before you can post messages.
To post a message you must first join this group.
Please update your nickname on the subscription settings page before posting.
You do not have the permission required to post.
	
		
Chas Emerick   	
View profile
	 More options Jun 28, 10:20 am
From: Chas Emerick <cemer...@snowtide.com>
Date: Sat, 28 Jun 2008 07:20:41 -0700 (PDT)
Local: Sat, Jun 28 2008 10:20 am
Subject: Re: Calling Clojure from Java (Shortcuts)
Reply | Reply to author | Forward | Print | Individual message | Show original | Report this message | Find messages by this author

On Jun 27, 8:32 pm, Ray Myers <ray.my...@gmail.com> wrote:

> One issue is that the callers of runClosureScript() all share and
> modify the same lexical environment. Is it possible to prevent this?

Having a single environment is an intentional design decision,
primarily to ensure efficient operation.  I asked this same question
some time ago, in the context of comparing Clojure to SISC, which has
a Runtime class that you can create and therefore use to have multiple
execution environments within the same JVM.  Rich's response was:

"[Clojure is designed that way] for speed. Multiple runtimes means
reified environments and a runtime lookup for every var reference.
Clojure var references get compiled into fns as static members and
looked up once only during load."

FWIW, I did some very informal benchmarking of SISC vs. Clojure in
January, and Clojure was easily two orders of magnitude faster.  I'd
say I was equally unskilled in both environments at the time, so maybe
there's some tricks to be had in SISC-land that would have helped
some.  Regardless, the upshot of those results were/are hard to argue
with, at least for me.

- Chas 

====
It seems most people are having problems either:

 With a runtime error in code entered in the repl (or sent from an
editor buffer), rather than loaded, where there are no relevant source
line numbers to use.
====

}}}


{{{ U6502
+ Change PrintMess to PrintString in monitor and books.
+ If a label is placed in the operation column, an exception is thrown.
- Add reset method to IOChip interface.
+ This line should cause an error in the assembler but it doesn't: "sum	dbt d". Notice it is missing a value before d.
+ Branching to addresses throws a "string out of bounds" exception in a uasm65 fold.
+ Make ROM read only in the emulator.
+ Enter Copy button and popup menu to U6502.
+ Make an ASCII chart plugin.
- sumlist program does not place sum dwd ? 00's into .s19 file.
+ On a similar note, what do you want/expect to happen when a user tries
 to trace through a program (as I did!) which calls Monitor subroutines.
 What I found in my case was that it traced through the jump table and
then hung.
}}}


{{{Axiom bugs =========== 0.1.15
+ (3) -> draw(5*besselJ(0,sqrt(x**2+y**2)), x=-20..20, y=-20..20)  


}}}

{{{Mathrider Newbies Book
+ Make it very clear in the installation instructions not to double click on the archive file.
}}}


{{{MathCad functions
//Statistics:
mean
stdev
Stdev
rnorm

//other
linterp:
cspline
pspline
lspline
slope
intercept
corr
last (as in  0..last(vector))
linfit


}}}


{{{Other MathPiper function ideas:
Satisfies - See pp.61 "Fundamental Mathematics" Wade & Taylor.


}}}

