%mathpiper,name="information"
url :=  "mathpiper.org/exercises/remember_numbers.mpw";
title := "Remember Numbers";
version := .01;
author := "tkosan";
description := "Remember numbers by encoding them into sentences.";


%/mathpiper

    %output,preserve="false"
      Result: "Remember numbers by encoding them into sentences."
.   %/output








%mathpiper,name="help"

"1 is the t or d sound.
2 is the n sound.
3 is the m sound. 
4 is the r sound. 
5 is the l sound. 
6 is the j, ch, or sh sound. 
7 is the k or hard g sound.
8 is the f or v sound.
9 is the p or b sound.
0 is the z or s sound."

%/mathpiper







%mathpiper,name="configuration"
[

    

    configurations := 
    {
        //{"operation", {"String","+","-","*","/"}},
        {{"name", "numberOneLow"}, {"type", "Integer"}, {"value","2"}},

    };
    
    
    ForEach(configuration, configurations)
    [
        name := configuration["name"];
        
        If(configuration["type"] =? "Integer", value := ToAtom(configuration["value"]), value := configuration["value"]);
        `Bind(@name, @value);
    ];
    
    
    VarSetFunctionsCreate(configurations) :=
    [
        //varNames := AssocIndices(configuration);
    
        //ForEach(varName, varNames)
        ForEach(configuration, configurations)
        [
            varName := configuration["name"];
            
            functionName := varName ~ "Set";
            
            variableTypeCheckPredicateAtom := ToAtom(configuration["type"] ~ "?");
            
            varNameParameterAtom := ToAtom(varName ~ "Var");
            
            varNameAtom := ToAtom(varName);
    
            `Function(@functionName,{@varNameParameterAtom})
            [
                Check(@variableTypeCheckPredicateAtom(@varNameParameterAtom), "Argument", "Invalid Argument: " ~ ToString(Eval(@varNameParameterAtom)) ~ ".");
                
                @varNameAtom := @varNameParameterAtom;
            
                True;
            ];
        
        ];
    
    ];
    
    
    VarSetFunctionsCreate(configurations);
    
    
    ConfigurationsGet() :=
    [
        result := "";
        ForEach(configuration, configurations)
        [
            result := (result ~ configuration["name"] ~ "," ~ configuration["type"] ~ "," ~ configuration["value"] ~ ";");
        ];
        
        result;
    
    ];
    
];

%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output
















%mathpiper,name="ExerciseEngine"


wordsList := {
      {"tie", 1, "Tie a knot."},
      {"knee", 2, "Bend your knee."},
      {"emu", 3, "An emu is a bird."},
      {"ear", 4, "Plug your left ear."},
      {"law", 5, "It is against the law."},
      {"shoe", 6, "Tie your shoe."},
      {"cow", 7, "Milk the cow."},
      {"ivy", 8, "An ivy league school."},
      {"bee", 9, "Stung by a bee."},
      {"dice", 10, "Role the dice."},
      {"tot", 11, "A tot is a very young child."},
      {"tin", 12, "A tin can."},
      {"tomb", 13, "King tut's tomb."},
      {"tire", 14, "A tire on a car."},
      {"towel", 15, "Dry your hands with a towel."},
      {"dish", 16, "Wash the dirty dish."},
      {"duck", 17, "Quacks like a duck."},
      {"dove", 18, "A white dove flew by."},
      {"tub", 19, "Put water in the tub."},
      {"nose", 20, "Blow your nose."},
      {"nut", 21, "Crack the nut."},
      {"nun", 22, "A Catholic nun."},
      {"name", 23, "His name is Bob."},
      {"Nero", 24, "Nero fiddled while Rome burned."},
      {"nail", 25, "Hammer the nail."},
      {"notch", 26, "Put a notch in the belt."},
      {"neck", 27, "Wring its neck."},
      {"knife", 28, "Cut it with a knife."},
      {"knob", 29, "Turn the door knob."},
      {"mouse", 30, "A mouse has a tail."},
      {"mat", 31, "Step on the mat."},
      {"moon", 32, "A full moon."},
      {"mummy", 33, "An Egyptian mummy."},
      {"mower", 34, "A mower cuts grass."},
      {"mule", 35, "A pack mule."},
      {"match", 36, "Light the match."},
      {"mug", 37, "Dring from the mug."},
      {"movie", 38, "Go see a movie."},
      {"map", 39, "Read the map."},
      {"rose", 40, "Smell the rose."},
      {"rod", 41, "A rod is like a pole."},
      {"rain", 42, "Use an umbrella when it rains."},
      {"ram", 43, "Aries the ram."},
      {"rear", 44, "The rear end of the car."},
      {"roll", 45, "Roll down the hill."},
      {"roach", 46, "A roach is a bug."},
      {"rock", 47, "As hard as a rock."},
      {"roof", 48, "A roof over your head."},
      {"rope", 49, "Pull on the rope."},
      {"lace", 50, "A shoe lace."},
      {"light", 51, "A bright light."},
      {"lion", 52, "The lion roared."},
      {"lamb", 53, "A lamb is a young sheep."},
      {"lure", 54, "Fish with a lure."},
      {"lily", 55, "A lily is a flower."},
      {"leash", 56, "Put the dog on a leash."},
      {"log", 57, "Put a log in the fire."},
      {"leaf", 58, "The leaf of a tree."},
      {"lip", 59, "Bite your lip."},
      {"cheese", 60, "A cheese sandwitch."},
      {"sheet", 61, "A sheet and a blanket."},
      {"chain", 62, "A steel chain."},
      {"chum", 63, "A chum is a close friend."},
      {"cherry", 64, "A cherry tree."},
      {"jail", 65, "Locked inside a jail."},
      {"judge", 66, "The judge will decide."},
      {"chalk", 67, "Write on the board with chalk."},
      {"chef", 68, "A chef cooks food."},
      {"ship", 69, "A ship on the sea."},
      {"kiss", 70, "A kiss goodbye"},
      {"kite", 71, "Fly a kite."},
      {"coin", 72, "Flip a coin."},
      {"comb", 73, "Comb your hair."},
      {"car", 74, "Drive the car."},
      {"coal", 75, "Black as coal."},
      {"cage", 76, "A bird cage."},
      {"cake", 77, "A birthday cake."},
      {"cave", 78, "A caveman."},
      {"cap", 79, "Put the cap on the pen."},
      {"face", 80, "Wash your face."},
      {"fight", 81, "A fist fight."},
      {"phone", 82, "Call you on the phone."},
      {"foam", 83, "Coffee in a foam cup."},
      {"fire", 84, "Put out the fire with water."},
      {"file", 85, "File your nails."},
      {"fish", 86, "Catch a fish."},
      {"fog", 87, "The fog is thick."},
      {"fife", 88, "A fife is a smill flute."},
      {"V.I.P", 89, "Very important person."},
      {"bus", 90, "A school bus."},
      {"bat", 91, "Hit the ball with a bat."},
      {"bun", 92, "A hamburger bun."},
      {"bomb", 93, "The bomb exploded."},
      {"bear", 94, "A grizzly bear."},
      {"bell", 95, "Ring the bell."},
      {"beach", 96, "An ocean beach."},
      {"book", 97, "Read a book."},
      {"puff", 98, "Huff and puff."},
      {"puppy", 99, "A puppy is a young dog."},
      {"daises", 100, "Smell the daises"},

};


attempt := 0;

QuestionAsk() :=
[
    number := RandomInteger(1, Length(wordsList));
    
    word := wordsList[number][1];
    
    answer := wordsList[number][2];
    
    hint := wordsList[number][3];
    
    word;
];




QuestionCheck(input) :=
[
    attempt++;
    
    If(answer =? input, True, False);
];



QuestionHint() :=
[
    hint;
];




%/mathpiper

    %output,preserve="false"
      Result: True
.   %/output




%mathpiper,title=""

x := 1;

While(x <=? 100)
[
    WriteString("{\"" ~ wordsList[x] ~ "\", " ~ ToString(x) ~ ", " ~ "\"\"" ~ "},");
    

    
    WriteString(Nl());
    
    x++;

];

%/mathpiper

    %output,preserve="false"
      Result: True
      
      Side Effects:
      {"tie", 1, ""},
      {"knee", 2, ""},
      {"emu", 3, ""},
      {"ear", 4, ""},
      {"law", 5, ""},
      {"shoe", 6, ""},
      {"cow", 7, ""},
      {"ivy", 8, ""},
      {"bee", 9, ""},
      {"dice", 10, ""},
      {"tot", 11, ""},
      {"tin", 12, ""},
      {"tomb", 13, ""},
      {"tire", 14, ""},
      {"towel", 15, ""},
      {"dish", 16, ""},
      {"duck", 17, ""},
      {"dove", 18, ""},
      {"tub", 19, ""},
      {"nose", 20, ""},
      {"nut", 21, ""},
      {"nun", 22, ""},
      {"name", 23, ""},
      {"Nero", 24, ""},
      {"nail", 25, ""},
      {"notch", 26, ""},
      {"neck", 27, ""},
      {"knife", 28, ""},
      {"knob", 29, ""},
      {"mouse", 30, ""},
      {"mat", 31, ""},
      {"moon", 32, ""},
      {"mummy", 33, ""},
      {"mower", 34, ""},
      {"mule", 35, ""},
      {"match", 36, ""},
      {"mug", 37, ""},
      {"movie", 38, ""},
      {"map", 39, ""},
      {"rose", 40, ""},
      {"rod", 41, ""},
      {"rain", 42, ""},
      {"ram", 43, ""},
      {"rear", 44, ""},
      {"roll", 45, ""},
      {"roach", 46, ""},
      {"rock", 47, ""},
      {"roof", 48, ""},
      {"rope", 49, ""},
      {"lace", 50, ""},
      {"light", 51, ""},
      {"lion", 52, ""},
      {"lamb", 53, ""},
      {"lure", 54, ""},
      {"lily", 55, ""},
      {"leash", 56, ""},
      {"log", 57, ""},
      {"leaf", 58, ""},
      {"lip", 59, ""},
      {"cheese", 60, ""},
      {"sheet", 61, ""},
      {"chain", 62, ""},
      {"chum", 63, ""},
      {"cherry", 64, ""},
      {"jail", 65, ""},
      {"judge", 66, ""},
      {"chalk", 67, ""},
      {"chef", 68, ""},
      {"ship", 69, ""},
      {"kiss", 70, ""},
      {"kite", 71, ""},
      {"coin", 72, ""},
      {"comb", 73, ""},
      {"car", 74, ""},
      {"coal", 75, ""},
      {"cage", 76, ""},
      {"cake", 77, ""},
      {"cave", 78, ""},
      {"cap", 79, ""},
      {"face", 80, ""},
      {"fight", 81, ""},
      {"phone", 82, ""},
      {"foam", 83, ""},
      {"fire", 84, ""},
      {"file", 85, ""},
      {"fish", 86, ""},
      {"fog", 87, ""},
      {"fife", 88, ""},
      {"V.I.P", 89, ""},
      {"bus", 90, ""},
      {"bat", 91, ""},
      {"bun", 92, ""},
      {"bomb", 93, ""},
      {"bear", 94, ""},
      {"bell", 95, ""},
      {"beach", 96, ""},
      {"book", 97, ""},
      {"puff", 98, ""},
      {"puppy", 99, ""},
      {"daises", 100, ""},
      
.   %/output




