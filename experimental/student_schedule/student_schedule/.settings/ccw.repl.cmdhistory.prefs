cmdhistory=["(+ 2 3)" "(defn average\\n  [numbers]\\n  (/ (apply + numbers) (count numbers)))" "(average 1 2 3)" "(average [1 2 3])" "60" "[1 2 3 4]" "[1,2,3]" "[1,2,3,4,5]" "(printf 1)" "(+ 1 2)" "(printf \\"h\\")" "String" "string" "java.util.Collection" "filter" "(+ 2 3)" "(def v [42 \\"foo\\" 99.2 [5 12]])" "v" "(let [[x y z] v])" "x" "(do (let [[x y z] v])\\n  )" "(do (let [[x y z] v])\\n  (printf x))" "( (let [[x y z] v])\\n  (printf x))" "(let [x (nth v 0)\\ny (nth v 1)\\nz (nth v 2)]\\n(+ x z))" "(let [x (nth v 0)\\ny (nth v 1)\\nz (nth v 2)]\\nz)" "(let [[x y z] v]\\nz)" "(let [[x y z] v]\\n(printf z))" "(let [[x y z] v]\\n(printf \\"\\" z))" "(let [[x y z] v]\\n(printf \\"c\\" z))" "(java.util.Date. 73 1 6)" "(partial rand-int 10)" "(zipmap [\:x \:y \:z] (repeatedly (partial rand-int 10)))" "(repeatedly (partial rand-int 10))" "(+ 1 2)" "(zipmap [\:x \:y \:z] (repeatedly (partial rand-int 10)))" "(+ 1 2)" "(z" "(+ 1 2)" "(rand-int 10)" "(zipmap [\:x \:y \:z \:a \:b] (repeatedly (partial rand-int 10)))" "(users \\"kyle\\")" "({\:number-pets 2, \:password \\"secretk\\"} \:password)" "({\:number-pets 2, \:password \\"secretk\\"})" "(doc +)" "(doc {})" "(doc {\:a 3})" "(doc conj)" "(doc concat)" "(zz \\"BUAC1010\\")" "(\\"BUAC1010\\" zz)" "(\:HIST3170 zz)" "(possibleCourses)" "(courses)" "(println \\" \\" courses)" "(println \\" \\" possibleCourses)" "(def a 3)" "(a)" "(printf \\"\\" 3)" "(println \\"\\" a)" "(def a 4)" "(println \\"\\" a)" "(println \\"aa \\" possibleCourses)" "(println \\"\\" possibleCourses)" "(range 4)" "(defn long-running-job [n]\\n\\t    (Thread/sleep 3000) ; wait for 3 seconds\\n\\t    (+ n 10))" "(time (doall (pmap long-running-job (range 4))))" "(def aa [4 5 6])" "(aa 1)" "(zz \:ETCO1120)" "(zz \:ETCO1121)" "(concat \\"aa\\" \\"bb\\")" "(str \\"aa\\" \\"bb\\")" "(concat [1 2] [3 4])" "possibleCourses" "courses" "zz" "pat" "(conj [] (str \\"courseNumber\\" \\"section\\"))" "(conj l2 (conj [] (str \\"courseNumber\\" \\"section\\")))" "l2" "zz" "l0" "courseList" "possibleCourses" "(+ 1 2)" "l0" "([1 [2 3] 4] 1 1)" "([1 [2 3] 4] 1)" "([1 [2 3] 4] 1 0)" "(([1 [2 3] 4] 1)1)" "(\= [1] [1])" "(remove [1] [[1] [2]])" "(remove \#(\= [1] %) [[1] [2]])" "(+ 1 2)" "l0" "legalSchedules" "illegalSchedules" "(+ 1 2)" "legalSchedules" "zz" "courses" "l0" "timeSlots" "legalSchedules" "illegalSchedules" "(def aa [1 2 3])" "aa" "(cons (0 aa))" "(cons 0 aa)" "(vec (cons 0 aa))" "(vec (cons \:hello aa))" "(def aa [\:bye 1 2 3])" "aa" "(vec (cons \:hello aa))" "legalSchedules" "(count legalSchedules)" "(count illegalSchedules)" "(count legalSchedules)" "timeSlots" "l0" "timeSlots" "legalSchedules" "illegalSchedules" "(count legalSchedules)" "(count illegalSchedules)" "(count legalSchedules)" "(count illegalSchedules)" "(count legalSchedules)" "(count illegalSchedules)" "(count legalSchedules)" "(count illegalSchedules)" "(count legalSchedules)" "(count l0)" "(count illegalSchedules)" "(def legalSchedules (remove (set illegalSchedules) legalSchedules))" "(count legalSchedules)" "(def legalSchedules (remove (set illegalSchedules) l0))" "(count legalSchedules)" "(count illegalSchedules)" "legalSchedules" "(legalSchedules 0)" "(nth legalSchedules 0)" "\\"Done\\"" "(nth legalSchedules 0)" "legalSchedules" "scheduleA" "schedulesTimeSlots" "day" "week" "dayEnd" "(((dayEnd index) 2) 1)" "((dayEnd 0) 2)" "(dayend 0)" "dayEnd" "week" "legalSchedules" "courses" "illegalSchedules" "zz" "l0" "index1" "timeSlots" "l0" "l2" "week" "nextTime" "dayEnd" "nextTime" "timeInc" "df" "index" "indexTime" "(((dayEnd index) 2) 1)" "(dayEnd 0)" "((dayEnd 0) 2)" "week" "nextTime" "indexTime" "index" "timeInc" "nextTime" "(def aa [[\:MATH1300 \:01 [80 120 22]] [\:ARTH1101 \:02 [80 144 15]] [\:Open \:x [0 0 120]] [\:Open \:x [0 142 2]] [\:Open \:x [0 159 129]]])" "((aa 2) 1)" "aa" "(aa 2)" "weekComplete" "(str 1)" "(join \\"a\\" \\"b\\")" "(concat \\"a\\" \\"b\\")" "(str \\"a\\" \\"b\\")" "(str \\"a\\" 3 \\"b\\")" "html" "htmlTop" "html" "section" "courseNumber" "sectionNumber" "daysCode" "(str sectionNumber)" "daysAndTime" "daysCode" "daysAndTime" "htmlTD" "html" "zz" "(bit-and 32 8)" "(bit-or 32 8 )" "(\#( % (println $)) 1)" "(\#( % (println %)) 1)" "(\#( println %) 1)" "(\#( println %a %b) 1 3)" "(\#( println %1 %2) 12 23)" "(\#( println %a %2) 12 23)" "legalschedule" "legalschedules" "legalSchdules" "legalSchedules" "(nth schedule 1)" "(nth (nth schedule 1) 3)"]
eclipse.preferences.version=1
